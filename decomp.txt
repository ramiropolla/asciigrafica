/* VV */
#define ADDRESS_93C06 0x42

0000: goto _start;                     /* reset */
0004: 54 2A 0C           JMP     $0C2A /* IRQ 0 */
0008: 11                 EXX           /* IRQ 1 */
0009: 10                 EXA     
000A: 54 17 98           JMP     $9817 /* INTFT0, INTFT1 */
0010: 00                 NOP           /* IRQ 2 */
0018: 11                 EXX           /* IRQ 3 */
0019: 10                 EXA     
001A: 54 1A 98           JMP     $981A
0020: 00                 NOP           /* IRQ 4 */
0028: 54 CE 20           JMP     $20CE /* IRQ 5 */

002B: void delay(C ms){}
0041: [HL]--; return;

0047: 48 A0              DSLR    EA
0049: 48 A0              DSLR    EA
004B: 48 A0              DSLR    EA
004D: 48 A0              DSLR    EA
004F: return 0;

0050: 48 29              CALB    
0052: return 1;
0053: return 0;
0060: 00                 NOP          /* IRQ 6 */

0080: 002B delay(C ms);
0082: 1057
0084: 1325
0086: 14ec
0088: 00ca
008A: 170F
008C: 16f7
008E: 0feb
0090: 0f01
0092: 10A1 { [C004] |= A; }
0094: 109B { [C004] &= A; }
0096: 1b05
0098: 1c93
009A: 2089
009C: 2116
009E: 21F3
00A0: 2e3A
00A2: 313F
00A4: 78D2
00A6: 7BA4
00A8: 7B4D
00AA: 798D
00AC: 7B95
00AE: 1680
00B0: 1B02
00B2: 0050
00B4: 242B
00B6: 28F4
00B8: 05A5 { memset(EA, 0x00, B*255+C); A = 0x00; }
00BA: 216F
00BC: 1334
00BE: 0041 { [HL]--; }

00C0: 6A 00              MVI     B,$00
00C2: 48 2B              STC     
00C4: 48 36              RLL     B
00C6: 51                 DCR     A
00C7: goto 00C4
00C8: A = B;
00C9: return 0;
00CA: BC = EA;
00CB: 48 2F              MUL     C
00CD: push(EA);
00CE: 48 2E              MUL     B
00D0: BC = pop();
00D1: A = EAH;
00D2: 77 00              EQI     A,$00
00D4: goto 00DD;
00D5: A = EAL;
00D6: EA = 0000;
00D9: EAH = A;
00DA: 74 C5              DADD    EA,BC
00DC: return 0;
00DD: 48 2B              STC     
00DF: return 0;

_start:
00E0: V     = 0xff;
00E2: SP    = 0x0000;
00E7: MM    = 0x0f; /* 64k EPROM | Internal RAM Access */
00EB: PORTA = b00111000;
00EE: MA    = b11000111; /* 0 = output; 1 = input */
00F2: MB    = b11111111; /* 0 = output; 1 = input */
00F6: EOM   = b10011001; /* to set LVx, output LVx */
00F9: MCC   = b11001011; /* 0 = port mode; 1 = control mode; CO1 output, CO0 output, TI Input, RxD, TxD */
00FD: PORTC = b00000000;
0100: MC    = b00001010; /* 0 = output; 1 = input */
0102: B = 0x02;

0104: reread:

ANM = 0x08; /* scan mode, AN4 - AN7, more than 9MHz */

/* SKIT = skip next instruction if interrupt is set, clear interrupt */
/* INTFAD = last four conversion results for registers CR0-CR3 is complete */
010A: /* wait for 0x100 AD conversions */

/* wait for input voltage to be above 24V (Epson LX-800 Technical Manual.pdf, page 44) */

0111: A     = CR1;
if (B & 0x02) {
	if (0xCA <= A)
		B = 0xfd;
	goto reread;
}

if (0xCA > A || NMI)
	reset();

[0xC004] = 0x81;

memset(0xff00, 0xFF, 0x100);
memset(0xff00, 0x00, 0x100);
if ([0xffff] != 0x00)
	beep_endlessly(); /* HANG */

0149: reset_ram(0xff);
014C: reset_ram(0x00);

[9841] = 0x01;
SP = 0xa000; /* set stack pointer now that we know the ram is ok */
VV  = 0x98xx;
VV' = 0x98xx;
clear_interrupt(F2); /* ONLINE BUTTON */
EI(); /* enable interrupts */
read_dip_to_ram();
MB  = b11111101; /* 0 = output; 1 = input */ /* 93c06.DI = input */
0167: 40 64 0C           CALL    $0C64
016A: 69 54              MVI     A,$54
[9817] = 0x54; /* JMP instruction */
[981a] = 0x54; /* JMP instruction */
0174: 40 F7 0B           CALL    $0BF7
VV[0x41] &= 0xfe;
017A: 40 CC 02           CALL    $02CC
017D: 40 33 20           CALL    $2033
0180: 40 23 20           CALL    $2023
0183: 40 13 23           CALL    $2313
VV[0x4f] &= 0xf7;
VV[0x4f] |= 0x40;
018C: 40 B1 77           CALL    $77B1
018F: 40 FA 2A           CALL    $2AFA
0192: 40 A0 19           CALL    $19A0
0195: 9D                 CALT    ($00BA)
0196: 5B 4F              BIT     3,VV:4F
0198: HL = 2D00;
019B: HL = 4C80;
019E: 70 3E 3D 99        SHLD    $993D
01A2: 40 5A 2B           CALL    $2B5A
01A5: 40 A8 10           CALL    $10A8
01A8: 40 33 02           CALL    $0233
01AB: 55 14 20           OFFIW   VV:14,$20
01AE: goto 01C4
01AF: 40 5B 0F           CALL    $0F5B
01B2: 55 03 02           OFFIW   VV:03,$02
01B5: 54 50 03           JMP     $0350
01B8: 55 03 04           OFFIW   VV:03,$04
01BB: 54 92 03           JMP     $0392
01BE: 55 14 04           OFFIW   VV:14,$04
01C1: 54 3E 04           JMP     $043E
01C4: 40 CF 01           CALL    $01CF
01C7: 40 38 13           CALL    $1338
01CA: F9                 JR      $01C4
01CB: 40 CD 05           CALL    $05CD
01CE: F5                 JR      $01C4
01CF: 40 A2 0E           CALL    $0EA2
	func_2089();
01D3: 40 27 21           CALL    $2127
01D6: F8                 JR      $01CF
01D7: return 0;

void read_dip_to_ram()
{
	uint16_t dip;
	do {
		dip = read_dip();
	} while (dip != read_dip());
	if (!(SW2 & 0x80))
		VV[0x11] |= 0x80;
	[9831] = SW1;
	[9832] = SW2 & 0x7f;
}

/* C = SW1, B = SW2 */
uint16_t read_dip(void)
{
	C = PB; /* DIP SW1 */
	B = 0;
	wait_for_ADC(0x00); /* scan mode, AN0 - AN3, more than 9MHz */
	if (CR0 & 0x80)	B |= 0x01;	/* DIP SW2.1 */
	if (CR1 & 0x80)	B |= 0x02;	/* DIP SW2.2 */
	if (CR2 & 0x80)	B |= 0x04;	/* DIP SW2.3 */
	if (CR3 & 0x80)	B |= 0x08;	/* DIP SW2.4 */
	wait_for_ADC(0x08); /* scan mode, AN4 - AN7, more than 9MHz */
	if (CR0 & 0x80)	B |= 0x10; /* bar{SLCT IN} */
	if (CR3 & 0x80)	B |= 0x80; /* don't know */
}

void wait_for_ADC(uint8_t A)
{
	ANM = A;
	while (!(IIR & FAD));
	return 0;
}

0233: 01 31              LDAW    VV:31
0235: 57 01              OFFI    A,$01
0237: C5                 JR      $023D
0238: push(VA);
0239: 40 10 15           CALL    $1510
023C: VA = pop();
if (!(A & 0x02))	VV[0x04] |= 0x40;
0242: 47 08              ONI     A,$08
0244: C9                 JR      $024E
if (A & 0x04) HL = 0x0948;
else          HL = 0x0A20;
024D: goto 0256;
024E:
if (A & 0x04) HL = 0x072C;
else          HL = 0x09D8;
0256: 70 3E 2D 99        SHLD    $992D
025A: 70 3E 31 99        SHLD    $9931
025E: 57 10              OFFI    A,$10
0260: D6                 JR      $0277
VV[0x04] |= 0x30;
if (A & 0x80)	VV[0x04] |= 0x01;
if (A & 0x40)	VV[0x04] |= 0x02;
if (A & 0x20)	VV[0x04] |= 0x04;
0273: 71 0C 00           MVIW    VV:0C,$00
0276: D2                 JR      $0289
0277: VV[0x04] &= 0xf8;
if (A & 0x80)	VV[0x0c] |= 0x01;
if (A & 0x40)	VV[0x0c] |= 0x02;
if (A & 0x20)	VV[0x0c] |= 0x04;
0289: 01 32              LDAW    VV:32
if (!(A & 0x01))	VV[0x14] |= 0x01;
VV[0x02] &= 0xdf;
if (!(A & 0x02))	VV[0x02] |= 0x20;
0298: EA = HL;
0299: 6A 00              MVI     B,$00
if (!(A & 0x04))	B = 0xD8;
029F: 70 62              ESUB    EA,B
02A1: HL = EA;
02A2: 70 3E 2F 99        SHLD    $992F
if (!(A & 0x08))	VV[0x02] |= 0x80;
02AB: 57 10              OFFI    A,$10
VV[0x02] |= 0x0c;
02B0: 69 10              MVI     A,$10
02B2: 70 79 06 98        MOV     ($9806),A
02B6: 55 4F 04           OFFIW   VV:4F,$04
02B9: 40 F8 14           CALL    $14F8
02BC: 40 2B 15           CALL    $152B
02BF: 58 4F              BIT     0,VV:4F
02C1: 40 2F 15           CALL    $152F
02C4: 59 4F              BIT     1,VV:4F
02C6: 54 CD 15           JMP     $15CD
02C9: 54 C9 15           JMP     $15C9
02CC: 40 E4 0F           CALL    $0FE4
02CF: D1                 JR      $02E1
02D0: 87                 CALT    ($008E)
02D1: C5                 JR      $02D7
VV[0x03] |= 0x04;
02D5: 4E 30              JRE     $0307
02D7: 40 F2 0F           CALL    $0FF2
02DA: 4E 22              JRE     $02FE
02DC: 40 09 03           CALL    $0309
02DF: 4E 26              JRE     $0307
02E1: 87                 CALT    ($008E)
02E2: CF                 JR      $02F2
02E3: 40 F2 0F           CALL    $0FF2
02E6: C6                 JR      $02ED
02E7: 40 E9 0C           CALL    $0CE9
02EA: 54 26 10           JMP     $1026
02ED: 15 4F 01           ORIW    VV:4F,$01
02F0: 4E 0F              JRE     $0301
02F2: 40 F2 0F           CALL    $0FF2
02F5: return 0;
02F6: 40 26 10           CALL    $1026
02F9: return 0;
02FA: 40 26 10           CALL    $1026
02FD: return 0;
VV[0x4f] &= 0xfe;
0301: 15 03 02           ORIW    VV:03,$02
0304: 15 11 40           ORIW    VV:11,$40
0307: 81                 CALT    ($0082)
0308: return 0;
0309: 40 54 10           CALL    $1054
030C: 40 26 10           CALL    $1026
030F: EA = 0000;
0312: push(EA);
0313: EA = pop();
0314: 40 48 03           CALL    $0348
0317: return 0;
0318: push(EA);
0319: 87                 CALT    ($008E)
031A: F8                 JR      $0313
031B: 81                 CALT    ($0082)
031C: 40 26 10           CALL    $1026
031F: EA = pop();
0320: 40 48 03           CALL    $0348
0323: return 0;
0324: push(EA);
0325: 40 E4 0F           CALL    $0FE4
0328: F6                 JR      $031F
0329: 81                 CALT    ($0082)
032A: 40 26 10           CALL    $1026
032D: EA = pop();
032E: 40 48 03           CALL    $0348
0331: return 0;
0332: push(EA);
0333: 40 F2 0F           CALL    $0FF2
0336: F6                 JR      $032D
0337: 81                 CALT    ($0082)
0338: 40 26 10           CALL    $1026
033B: EA = pop();
033C: 40 48 03           CALL    $0348
033F: return 0;
0340: push(EA);
0341: 87                 CALT    ($008E)
0342: F8                 JR      $033B
0343: EA = pop();
0344: 15 14 04           ORIW    VV:14,$04
0347: return 0;
0348: EA++;
0349: DE = FF00;
034C: 74 FE              DEQ     EA,DE
034E: return 1;
034F: return 0;

0350: 40 B9 0D           CALL    $0DB9
0353: HL = 038B;
0356: 40 F4 08           CALL    $08F4
0359: 40 82 2B           CALL    $2B82
035C: 40 26 10           CALL    $1026
035F: 40 0A 09           CALL    $090A
0362: 69 20              MVI     A,$20
0364: 63 28              STAW    VV:28
0366: push(VA);
0367: 40 A2 0E           CALL    $0EA2
036A: VA = pop();
036B: 63 16              STAW    VV:16
036D: 63 15              STAW    VV:15
036F: 40 E4 05           CALL    $05E4
0372: 40 B1 08           CALL    $08B1
0375: C1                 JR      $0377
0376: goto 0381
0377: 86                 CALT    ($008C)
0378: 01 28              LDAW    VV:28
037A: 40 34 04           CALL    $0434
037D: 63 28              STAW    VV:28
037F: 4F E5              JRE     $0366
0381: 40 1B 22           CALL    $221B
0384: 01 16              LDAW    VV:16
0386: 40 34 04           CALL    $0434
0389: 4F DB              JRE     $0366
038B: 50                 EXH     
038C: 53                 DCR     C
038D: HL++;
038E: HL = 3431;
0391: 00                 NOP     

0392: 40 2F 15           CALL    $152F
0395: 40 FC 14           CALL    $14FC
0398: HL = 0403;
039B: 40 F4 08           CALL    $08F4
039E: 40 82 2B           CALL    $2B82
03A1: 40 26 10           CALL    $1026
03A4: BC = 0000;
03A7: push(BC);
03A8: 40 AD 09           CALL    $09AD
03AB: BC = pop();
03AC: push(BC);
03AD: 40 CF 01           CALL    $01CF
03B0: BC = pop();
03B1: 44 0F 00           LXI     EA,$000F
03B4: 74 8D              DAN     EA,BC
03B6: DE = EA;
03B7: 44 06 FF           LXI     EA,$FF06
03BA: 74 C6              DADD    EA,DE
03BC: 74 C6              DADD    EA,DE
03BE: 74 C6              DADD    EA,DE
03C0: DE = EA;
03C1: push(VA);
03C2: 40 20 04           CALL    $0420
03C5: VA = pop();
03C6: 44 0F 00           LXI     EA,$000F
03C9: 74 8D              DAN     EA,BC
03CB: DE = EA;
03CC: 44 37 FF           LXI     EA,$FF37
03CF: 74 C6              DADD    EA,DE
03D1: DE = EA;
03D2: push(BC);
03D3: B = A;
03D4: 74 0A 7F           ANI     B,$7F
03D7: 74 3A 20           LTI     B,$20
03DA: 74 6A 7F           NEI     B,$7F
03DD: A = 0x2e;
03DF: [DE] = A;
03E0: BC = pop();
03E1: 55 03 01           OFFIW   VV:03,$01
03E4: CE                 JR      $03F3
03E5: 24 00 FF           LXI     DE,$FF00
03E8: A = B;
03E9: 40 20 04           CALL    $0420
03EC: A = C;
03ED: 40 20 04           CALL    $0420
03F0: 15 03 01           ORIW    VV:03,$01
03F3: 12                 INX     BC
03F4: 74 5B 0F           OFFI    C,$0F
03F7: 4F B3              JRE     $03AC
03F9: push(BC);
03FA: 34 00 FF           LXI     HL,$FF00
03FD: 40 F4 08           CALL    $08F4
0400: BC = pop();
0401: 4F A4              JRE     $03A7
0403: 44 61 74           LXI     EA,$7461
0406: 61                 DAA     
0407: 20 44              INRW    VV:44
0409: 75 6D 70           EQIW    VV:6D,$70
040C: 20 4D              INRW    VV:4D
040E: 6F 64              MVI     L,$64
0410: 65 00 34           NEIW    VV:00,$34
0413: 00                 NOP     
0414: FF                 JR      $0414
0415: 40 FE 08           CALL    $08FE
0418: 40 AD 09           CALL    $09AD
041B: 8B                 CALT    ($0096)
041C: 40 07 17           CALL    $1707
041F: return 1;
0420: 70 79 89 FF        MOV     ($FF89),A
0424: 40 27 04           CALL    $0427
0427: 34 89 FF           LXI     HL,$FF89
042A: 69 30              MVI     A,$30
042C: 48 38              RLD     
042E: 37 3A              LTI     A,$3A
0430: 46 07              ADI     A,$07
0432: [DE++] = A;
0433: return 0;
0434: 41                 INR     A
0435: 67 7F              NEI     A,$7F
0437: 69 A0              MVI     A,$A0
0439: 67 FF              NEI     A,$FF
043B: 69 20              MVI     A,$20
043D: return 0;
043E: 40 54 10           CALL    $1054
0441: 40 D8 31           CALL    $31D8
0444: 40 CC 04           CALL    $04CC
0447: 40 2B 15           CALL    $152B
044A: 40 C9 15           CALL    $15C9
044D: 40 FC 14           CALL    $14FC
0450: 40 14 15           CALL    $1514
0453: 71 46 04           MVIW    VV:46,$04
0456: D8                 JR      $046F
0457: 65 46 02           NEIW    VV:46,$02
045A: 71 46 01           MVIW    VV:46,$01
045D: 65 46 01           NEIW    VV:46,$01
0460: goto 0465
0461: 40 2F 15           CALL    $152F
0464: C6                 JR      $046B
0465: 40 2B 15           CALL    $152B
0468: 40 C9 15           CALL    $15C9
046B: 14 88 82           LXI     BC,$8288
046E: 91                 CALT    ($00A2)
046F: 40 D6 04           CALL    $04D6
0472: 14 88 02           LXI     BC,$0288
0475: 91                 CALT    ($00A2)
0476: 48 64              SKNIT   F2	/* ONLINE BUTTON */
0478: CE                 JR      $0487
0479: 40 F2 0F           CALL    $0FF2
047C: C1                 JR      $047E
047D: DC                 JR      $049A
047E: 40 E4 0F           CALL    $0FE4
0481: C2                 JR      $0484
0482: 4E 25              JRE     $04A9
0484: 87                 CALT    ($008E)
0485: F0                 JR      $0476
0486: E4                 JR      $046B
0487: 40 26 10           CALL    $1026
048A: 30 46              DCRW    VV:46
048C: 4F C9              JRE     $0457
VV[0x14] &= 0xfb;
0491: 40 48 0C           CALL    $0C48
0494: 40 9A 0C           CALL    $0C9A
0497: 54 00 00           JMP     $0000
049A: 81                 CALT    ($0082)
049B: 40 26 10           CALL    $1026
049E: 40 B8 04           CALL    $04B8
04A1: 37 FF              LTI     A,$FF
04A3: 4F D1              JRE     $0476
04A5: 41                 INR     A
04A6: 3B                 STAX    (HL)
04A7: 4F CD              JRE     $0476
04A9: 81                 CALT    ($0082)
04AA: 40 26 10           CALL    $1026
04AD: 40 B8 04           CALL    $04B8
04B0: 27 00              GTI     A,$00
04B2: 4F C2              JRE     $0476
04B4: 51                 DCR     A
04B5: 3B                 STAX    (HL)
04B6: 4F BE              JRE     $0476
04B8: 01 46              LDAW    VV:46
04BA: 44 50 98           LXI     EA,$9850
04BD: EA += A;
04BF: HL = EA;
04C0: A = [HL];
04C1: return 0;

04C2:
uint8_t func_04C2(void)
{
	return [0x0D21[VV[0x46]]];
}

04CC:
	74 E5              DSUB    EA,BC
	BC = EA;
	40 88 2B           CALL    $2B88
	40 B9 32           CALL    $32B9
	return 0;

04D6:
	71 2C 24           MVIW    VV:2C,$24
	65 46 04           NEIW    VV:46,$04
	goto 04F2
	65 46 03           NEIW    VV:46,$03
	CE                 JR      $04EF
	65 46 01           NEIW    VV:46,$01
	C7                 JR      $04EC
	75 46 00           EQIW    VV:46,$00
	return 0;
	34 8A 05           LXI     HL,$058A
04EC: 34 78 05           LXI     HL,$0578
04EF: 34 65 05           LXI     HL,$0565
04F2: 34 53 05           LXI     HL,$0553
	40 9C 05           CALL    $059C
	A = func_04C2();
	B = A;
	40 B8 04           CALL    $04B8
	60 B2              SUBNB   A,B
	C1                 JR      $0503
	CE                 JR      $0511
0503:
	48 3A              NEGA    
	67 00              NEI     A,$00
	C9                 JR      $0511
	push(VA);
	69 2D              MVI     A,$2D
	63 15              STAW    VV:15
	40 CD 05           CALL    $05CD
	VA = pop();
0511:
	40 59 0E           CALL    $0E59
0514: A = EAL;
0515: 63 15              STAW    VV:15
0517: push(EA);
0518: 40 CD 05           CALL    $05CD
051B: EA = pop();
051C: A = EAH;
051D: 63 15              STAW    VV:15
051F: 40 CD 05           CALL    $05CD
0522: 69 48              MVI     A,$48
0524: 63 15              STAW    VV:15
0526: 40 CD 05           CALL    $05CD
0529: 40 4C 05           CALL    $054C
052C: 86                 CALT    ($008C)
052D: 71 2C 15           MVIW    VV:2C,$15
0530: 71 45 03           MVIW    VV:45,$03
0533: 71 15 48           MVIW    VV:15,$48
0536: 40 E4 05           CALL    $05E4
0539: 40 B1 08           CALL    $08B1
053C: goto 0541
053D: 40 1B 22           CALL    $221B
0540: F2                 JR      $0533
0541: 40 4C 05           CALL    $054C
0544: 86                 CALT    ($008C)
0545: 30 45              DCRW    VV:45
0547: EB                 JR      $0533
0548: 71 2C 24           MVIW    VV:2C,$24
	return 0;
054C: 25 46 02           GTIW    VV:46,$02
VV[0x06] &= 0xef;
	return 0;
0553: 4E 4C              JRE     $05A1
0555: 51                 DCR     A
0556: 20 20              INRW    VV:20
0558: 20 48              INRW    VV:48
055A: 20 2F              INRW    VV:2F
055C: 41                 INR     A
055D: 64 6A 75           NEI     PC,$75
0560: 73                 illegal 
0561: 74 3D 20           LTI     E,$20
0564: 00                 NOP     
0565: 44 72 61           LXI     EA,$6172
0568: 66 74              SUI     A,$74
056A: 20 48              INRW    VV:48
056C: 20 2F              INRW    VV:2F
056E: 41                 INR     A
056F: 64 6A 75           NEI     PC,$75
0572: 73                 illegal 
0573: 74 3D 20           LTI     E,$20
0576: 00                 NOP     
0577: 00                 NOP     
0578: 4E 4C              JRE     $05C6
057A: 51                 DCR     A
057B: 20 20              INRW    VV:20
057D: 20 4C              INRW    VV:4C
057F: 20 2F              INRW    VV:2F
0581: 41                 INR     A
0582: 64 6A 75           NEI     PC,$75
0585: 73                 illegal 
0586: 74 3D 20           LTI     E,$20
0589: 00                 NOP     
058A: 44 72 61           LXI     EA,$6172
058D: 66 74              SUI     A,$74
058F: 20 4C              INRW    VV:4C
0591: 20 2F              INRW    VV:2F
0593: 41                 INR     A
0594: 64 6A 75           NEI     PC,$75
0597: 73                 illegal 
0598: 74 3D 20           LTI     E,$20
059B: 00                 NOP     
059C: push(HL);
059D: 40 A5 0E           CALL    $0EA5
05A0: HL = pop();
05A1: 40 FE 08           CALL    $08FE
05A4: return 0;
05A5: 69 00              MVI     A,$00

05A7: memset(EA, A, B*255+C); A = A;

void reset_ram(uint8_t c)
{
	uint8_t last;
	memset(0x9800, c, 0x2000);
	A = [0xb800];
	if (A != C) {
		0C48();
		1044();
		/* HANG */
	}
	return;
}

05CD:
	A = VV[0x15];
	push(VA);
	40 E4 05           CALL    $05E4
	40 B1 08           CALL    $08B1
	C5                 JR      $05DC
	VA = pop();
	40 1B 22           CALL    $221B
	return 0;
05DC:
	86                 CALT    ($008C)
	VA = pop();
	VV[0x15] = A;
	58 05              BIT     0,VV:05
	EA                 JR      $05CD
	return 0;

05E4:
	VV[0x08] &= 0x8c;
	VV[0x08] |= VV[0x0a] & 0x73;
	VV[0x09] &= 0x26;
	VV[0x09] |= VV[0x0b] & 0xd9;
	VV[0x07] &= 0xef;
	59 09              BIT     1,VV:09
	CC                 JR      $060E
	5F 09              BIT     7,VV:09
	CC                 JR      $0611
	5A 08              BIT     2,VV:08
	55 09 40           OFFIW   VV:09,$40
	VV[0x06] &= 0xef;
	goto 0611
060E:
	55 09 40           OFFIW   VV:09,$40
0611:
	VV[0x08] |= 0x20;
	40 D6 1A           CALL    $1AD6
	goto 0620;
	15 08 02           ORIW    VV:08,$02
	VV[0x06] &= 0xef
	4E A6              JRE     $06C6
0620:
	40 32 06           CALL    $0632
	5C 07              BIT     4,VV:07
	40 F7 07           CALL    $07F7
0628: 5E 04              BIT     6,VV:04
062A: return 0;
062B: 65 15 30           NEIW    VV:15,$30
062E: 71 15 7F           MVIW    VV:15,$7F
0631: return 0;
0632: B = VV[0x04];
0635: A = VV[0x15];
0637: 67 5F              NEI     A,$5F
0639: 15 09 08           ORIW    VV:09,$08
063C: 47 80              ONI     A,$80
063E: return 0;
063F: 5D 04              BIT     5,VV:04
0641: 4E 22              JRE     $0665
0643: 74 0A 07           ANI     B,$07
0646: 74 2A 04           GTI     B,$04
0649: 74 6A 00           NEI     B,$00
064C: 4E 28              JRE     $0676
064E: 34 5D 06           LXI     HL,$065D
0651: 48 26              SLL     B
0653: 74 62 02           SUI     B,$02
0656: 48 8D              LDEAX   (HL+B)
0658: BC = EA;
0659: 48 29              CALB    
065B: return 0;
065C: D9                 JR      $0676
065D: A = EAH;
065E: 07 12              ANI     A,$12
0660: 07 1C              ANI     A,$1C
0662: 07 26              ANI     A,$26
0664: 07 47              ANI     A,$47
0666: 80                 CALT    ($0080)
0667: C6                 JR      $066E
0668: 15 09 80           ORIW    VV:09,$80
VV[0x15] &= 0x7f;
066E: A = VV[0x15];
0670: 67 5F              NEI     A,$5F
0672: 15 09 08           ORIW    VV:09,$08
0675: return 0;
0676: 27 AF              GTI     A,$AF
0678: return 0;
0679: 37 E0              LTI     A,$E0
067B: 54 9F 06           JMP     $069F
067E: VV[0x06] &= 0xef
0681: 55 0A 20           OFFIW   VV:0A,$20
0684: goto 068F
0685: 55 09 02           OFFIW   VV:09,$02
0688: C6                 JR      $068F
0689: 55 09 40           OFFIW   VV:09,$40
068C: 05 08 DF           ANIW    VV:08,$DF
068F: 05 08 EF           ANIW    VV:08,$EF
0692: 05 09 3F           ANIW    VV:09,$3F
0695: 34 28 06           LXI     HL,$0628
0698: A = [HL+A];
0699: 74 98 09           ORAW    VV:09
069C: 63 09              STAW    VV:09
069E: return 0;
069F: 77 F4              EQI     A,$F4
06A1: 67 F5              NEI     A,$F5
06A3: C6                 JR      $06AA
06A4: 67 FF              NEI     A,$FF
06A6: 71 15 20           MVIW    VV:15,$20
06A9: return 0;
06AA: 55 0A 20           OFFIW   VV:0A,$20
06AD: goto 06B8
06AE: 55 09 02           OFFIW   VV:09,$02
06B1: C6                 JR      $06B8
06B2: 55 09 40           OFFIW   VV:09,$40
VV[0x08] &= 0xdf;
06B8: 67 F4              NEI     A,$F4
06BA: 15 09 10           ORIW    VV:09,$10
VV[0x08] &= 0xef;
VV[0x09] &= 0x3f;
06C3: VV[0x06] &= 0xef
06C6: 5E 07              BIT     6,VV:07
06C8: return;
06C9: 55 11 20           OFFIW   VV:11,$20
06CC: VV[0x07] &= 0xbf; /* 1011 1111 */
06CF: return;

06D0: VV[0x06] &= 0xef; /* 1110 1111 */
06D3: return;
06D4: VV[0x06] |= 0x10; /* 0001 0000 */
06D7: return;

06D8: 10                 EXA     
06D9: 10                 EXA     
06DA: 10                 EXA     
06DB: 10                 EXA     
06DC: 10                 EXA     
06DD: 10                 EXA     
06DE: 10                 EXA     
06DF: 10                 EXA     
06E0: 10                 EXA     
06E1: 10                 EXA     
06E2: 10                 EXA     
06E3: 10                 EXA     
06E4: 00                 NOP     
06E5: 00                 NOP     
06E6: 00                 NOP     
06E7: 10                 EXA     
06E8: A = EAH;
06E9: A = EAH;
06EA: EAH = A;
06EB: EAH = A;
06EC: A = EAH;
06ED: EAH = A;
06EE: EAH = A;
06EF: EAH = A;
06F0: A = EAH;
06F1: EAH = A;
06F2: A = EAH;
06F3: EAH = A;
06F4: EAH = A;
06F5: A = EAH;
06F6: EAH = A;
06F7: A = EAH;
06F8: A = EAH;
06F9: EAH = A;
06FA: EAH = A;
06FB: A = EAH;
06FC: A = EAH;
06FD: EAH = A;
06FE: EAH = A;
06FF: EAH = A;
0700: EAH = A;
0701: 00                 NOP     
0702: EAH = A;
0703: EAH = A;
0704: EAH = A;
0705: 10                 EXA     
0706: EAH = A;
0707: A = EAH;
0708: 34 49 07           LXI     HL,$0749
070B: 6A 2E              MVI     B,$2E
070D: 6B 00              MVI     C,$00
070F: 6C 09              MVI     D,$09
0711: DE                 JR      $0730
0712: 34 A7 07           LXI     HL,$07A7
0715: 6A 0F              MVI     B,$0F
0717: 6B 00              MVI     C,$00
0719: 6C 01              MVI     D,$01
071B: D4                 JR      $0730
071C: 34 C7 07           LXI     HL,$07C7
071F: 6A 14              MVI     B,$14
0721: 6B 00              MVI     C,$00
0723: 6C 05              MVI     D,$05
0725: goto 0730
0726: 34 F1 07           LXI     HL,$07F1
0729: 6A 02              MVI     B,$02
072B: 6B 00              MVI     C,$00
072D: 6C 04              MVI     D,$04
072F: C0                 JR      $0730
0730: 43                 INR     C
0731: HL++;
0732: 70 ED              NEAX    (HL+)
0734: goto 0738
0735: 52                 DCR     B
0736: F9                 JR      $0730
0737: return 1;
0738: HL--;
0739: HL--;
073A: A = [HL];
073B: 63 15              STAW    VV:15
073D: A = D;
073E: 60 AB              GTA     A,C
0740: goto 0745
0741: 15 07 10           ORIW    VV:07,$10
0744: return 0;
0745: 15 08 40           ORIW    VV:08,$40
0748: return 0;
0749: 15 9B 14           ORIW    VV:9B,$14
074C: 9D                 CALT    ($00BA)
074D: 9B                 CALT    ($00B6)
074E: BD                 STAX    (HL+B)
074F: 1F                 MOV     L,A
0750: BE                 STAX    (HL+EA)
0751: A = C;
0752: CF                 JR      $0762
0753: 7C DD              CALF    $0CDD
0755: 10                 EXA     
0756: F5                 JR      $074C
0757: 16 F9              XRI     A,$F9
0759: 80                 CALT    ($0080)
075A: 9E                 CALT    ($00BC)
075B: 81                 CALT    ($0082)
075C: A9                 DCX     EA
075D: 82                 CALT    ($0084)
075E: BC = EA;
075F: 83                 CALT    ($0086)
0760: DE = EA;
0761: 84                 CALT    ($0088)
0762: HL = EA;
0763: 85                 CALT    ($008A)
0764: return 0;
0765: 86                 CALT    ($008C)
0766: C6                 JR      $076D
0767: 87                 CALT    ($008E)
0768: C7                 JR      $0770
0769: 88                 CALT    ($0090)
076A: D0                 JR      $077B
076B: 89                 CALT    ($0092)
076C: D1                 JR      $077E
076D: 8A                 CALT    ($0094)
076E: D2                 JR      $0781
076F: 8B                 CALT    ($0096)
0770: D3                 JR      $0784
0771: 8C                 CALT    ($0098)
0772: D4                 JR      $0787
0773: 8D                 CALT    ($009A)	func_2089();
0774: goto 078A
0775: 8E                 CALT    ($009C)
0776: D6                 JR      $078D
0777: 8F                 CALT    ($009E)	rollover_DE_from_0x9000_to_0x8000();
0778: D7                 JR      $0790
0779: 90                 CALT    ($00A0)
077A: D8                 JR      $0793
077B: 91                 CALT    ($00A2)
077C: DE                 JR      $079B
077D: 92                 CALT    ($00A4)
077E: E0                 JR      $075F
077F: 93                 CALT    ($00A6)	func_7ba4();
0780: E2                 JR      $0763
0781: 94                 CALT    ($00A8)
0782: E3                 JR      $0766
0783: 95                 CALT    ($00AA)
0784: E4                 JR      $0769
0785: 96                 CALT    ($00AC)
0786: E5                 JR      $076C
0787: 97                 CALT    ($00AE)
0788: E7                 JR      $0770
0789: 98                 CALT    ($00B0)
078A: E8                 JR      $0773
078B: 99                 CALT    ($00B2)
078C: E9                 JR      $0776
078D: 9A                 CALT    ($00B4)
078E: EA                 JR      $0779
078F: 9B                 CALT    ($00B6)
0790: EB                 JR      $077C
0791: 9C                 CALT    ($00B8)
0792: EC                 JR      $077F
0793: 9D                 CALT    ($00BA)
0794: ED                 JR      $0782
0795: 9E                 CALT    ($00BC)
0796: EE                 JR      $0785
0797: 9F                 CALT    ($00BE)
0798: EF                 JR      $0788
0799: VA = pop();
079A: F0                 JR      $078B
079B: BC = pop();
079C: F2                 JR      $078F
079D: DE = pop();
079E: F3                 JR      $0792
079F: HL = pop();
07A0: F4                 JR      $0795
07A1: EA = pop();
07A2: F7                 JR      $079A
07A3: A5                 DMOV    EA,BC
07A4: FB                 JR      $07A0
07A5: EA = DE;
07A6: goto 07A3
07A7: 86                 CALT    ($008C)
07A8: 84                 CALT    ($0088)
07A9: 82                 CALT    ($0084)
07AA: 86                 CALT    ($008C)
07AB: 8A                 CALT    ($0094)
07AC: 89                 CALT    ($0092)
07AD: 8E                 CALT    ($009C)
07AE: 8B                 CALT    ($0096)
07AF: 93                 CALT    ($00A6)	func_7ba4();
07B0: 8C                 CALT    ($0098)
07B1: 87                 CALT    ($008E)
07B2: 8E                 CALT    ($009C)
07B3: 83                 CALT    ($0086)
07B4: 8F                 CALT    ($009E)	rollover_DE_from_0x9000_to_0x8000();
07B5: 84                 CALT    ($0088)
07B6: 91                 CALT    ($00A2)
07B7: 8C                 CALT    ($0098)
07B8: 92                 CALT    ($00A4)
07B9: 95                 CALT    ($00AA)
07BA: 94                 CALT    ($00A8)
07BB: 99                 CALT    ($00B2)
07BC: 96                 CALT    ($00AC)
07BD: 91                 CALT    ($00A2)
07BE: 98                 CALT    ($00B0)
07BF: 96                 CALT    ($00AC)
07C0: 99                 CALT    ($00B2)
07C1: 9B                 CALT    ($00B6)
07C2: 9D                 CALT    ($00BA)
07C3: 92                 CALT    ($00A4)
07C4: 9F                 CALT    ($00BE)
07C5: 94                 CALT    ($00A8)
07C6: A9                 DCX     EA
07C7: 10                 EXA     
07C8: 8F                 CALT    ($009E)	rollover_DE_from_0x9000_to_0x8000();
07C9: A = C;
07CA: 98                 CALT    ($00B0)
07CB: 7C A0              CALF    $0CA0
07CD: 16 A4              XRI     A,$A4
07CF: 83                 CALT    ($0086)
07D0: 84                 CALT    ($0088)
07D1: HL = pop();
07D2: 86                 CALT    ($008C)
07D3: BC = pop();
07D4: 8D                 CALT    ($009A)	func_2089();
07D5: 84                 CALT    ($0088)
07D6: 8E                 CALT    ($009C)
07D7: 8C                 CALT    ($0098)
07D8: 91                 CALT    ($00A2)
07D9: 8A                 CALT    ($0094)
07DA: 92                 CALT    ($00A4)
07DB: 8B                 CALT    ($0096)
07DC: 94                 CALT    ($00A8)
07DD: 90                 CALT    ($00A0)
07DE: 95                 CALT    ($00AA)
07DF: 93                 CALT    ($00A6)	func_7ba4();
07E0: 99                 CALT    ($00B2)
07E1: 9B                 CALT    ($00B6)
07E2: 9D                 CALT    ($00BA)
07E3: 9A                 CALT    ($00B4)
07E4: 9E                 CALT    ($00BC)
07E5: 9F                 CALT    ($00BE)
07E6: BC = pop();
07E7: EA = pop();
07E8: A5                 DMOV    EA,BC
07E9: EA = DE;
07EA: EA = DE;
07EB: 9E                 CALT    ($00BC)
07EC: EA = HL;
07ED: 8F                 CALT    ($009E)	rollover_DE_from_0x9000_to_0x8000();
07EE: EA++;
07EF: DE = pop();
07F0: AD                 LDAX    (HL+B)
07F1: 15 9B 14           ORIW    VV:9B,$14
07F4: 9D                 CALT    ($00BA)
07F5: A = C;
07F6: AF 01              LDAX    (HL+$01)
07F8: 15 47 80           ORIW    VV:47,$80
07FB: 65 0C 00           NEIW    VV:0C,$00
07FE: return 0;
07FF: 34 15 08           LXI     HL,$0815
0802: 6A 0B              MVI     B,$0B
0804: 70 ED              NEAX    (HL+)
0806: goto 080A
0807: 52                 DCR     B
0808: FB                 JR      $0804
0809: return 0;
080A: HL--;
080B: 01 0C              LDAW    VV:0C
080D: 6A 0C              MVI     B,$0C
080F: 48 2E              MUL     B
0811: AE                 LDAX    (HL+EA)
0812: 63 15              STAW    VV:15
0814: return 0;
0815: 23                 DCX     DE
0816: 24 40 5B           LXI     DE,$5B40
0819: 5C 5D              BIT     4,VV:5D
081B: 5E 60              BIT     6,VV:60
081D: 7B 7C              CALF    $0B7C
081F: 7D 7E              CALF    $0D7E	93c06.instruction(WDS);
0821: 23                 DCX     DE
0822: 24 00 05           LXI     DE,$0500
0825: 0F                 MOV     A,L
0826: 10                 EXA     
0827: 5E 60              BIT     6,VV:60
0829: 1E                 MOV     H,A
082A: 02                 INX     SP
082B: 01 16              LDAW    VV:16
082D: 23                 DCX     DE
082E: 24 10 17           LXI     DE,$1710
0831: EAH = A;
0832: EAL = A;
0833: 5E 60              BIT     6,VV:60
0835: B = A;
0836: C = A;
0837: 1C                 MOV     D,A
0838: 11                 EXX     
0839: 06                 illegal 
083A: 24 40 5B           LXI     DE,$5B40
083D: 5C 5D              BIT     4,VV:5D
083F: 5E 60              BIT     6,VV:60
0841: 7B 7C              CALF    $0B7C
0843: 7D 7E              CALF    $0D7E	93c06.instruction(WDS);
0845: 23                 DCX     DE
0846: 24 40 12           LXI     DE,$1240
0849: 14 0D 5E           LXI     BC,$5E0D
084C: 60 13              XRA     C,A
084E: 15 0E 7E           ORIW    VV:0E,$7E
0851: 23                 DCX     DE
0852: A = C;
0853: E = A;
0854: 17 18              ORI     A,$18
0856: A = E;
0857: EAL = A;
0858: 1E                 MOV     H,A
0859: B = A;
085A: C = A;
085B: 0E                 MOV     A,H
085C: 1C                 MOV     D,A
085D: 23                 DCX     DE
085E: 24 40 05           LXI     DE,$0540
0861: 5C 1E              BIT     4,VV:1E
0863: 5E 02              BIT     6,VV:02
0865: 00                 NOP     
0866: 03                 DCX     SP
0867: 01 04              LDAW    VV:04
0869: A = D;
086A: 24 40 07           LXI     DE,$0740
086D: A = EAL;
086E: A = EAH;
086F: 5E 60              BIT     6,VV:60
0871: 16 0A              XRI     A,$0A
0873: 7D 7E              CALF    $0D7E	93c06.instruction(WDS);
0875: 23                 DCX     DE
0876: 24 40 5B           LXI     DE,$5B40
0879: 1F                 MOV     L,A
087A: 5D 5E              BIT     5,VV:5E
087C: 60 7B              EQA     C,A
087E: 7C 7D              CALF    $0C7D
0880: 7E 23              CALF    $0E23
0882: A = C;
0883: E = A;
0884: 12                 INX     BC
0885: 14 0D 19           LXI     BC,$190D
0888: 1E                 MOV     H,A
0889: 13                 DCX     BC
088A: 15 0E 1C           ORIW    VV:0E,$1C
088D: 23                 DCX     DE
088E: 24 1D 12           LXI     DE,$121D
0891: 14 0D 19           LXI     BC,$190D
0894: 1E                 MOV     H,A
0895: 13                 DCX     BC
0896: 15 0E 1C           ORIW    VV:0E,$1C
0899: 23                 DCX     DE
089A: 24 A0 07           LXI     DE,$07A0
089D: A = EAL;
089E: A = EAH;
089F: 1E                 MOV     H,A
08A0: 60 A1              ADDNC   A,A
08A2: A = B;
08A3: DE = pop();
08A4: HL = pop();
08A5: 23                 DCX     DE
08A6: 24 A0 07           LXI     DE,$07A0
08A9: A = EAL;
08AA: A = EAH;
08AB: 1E                 MOV     H,A
08AC: 1C                 MOV     D,A
08AD: BC = pop();
08AE: A = B;
08AF: DE = pop();
08B0: HL = pop();
08B1: 05 11 FB           ANIW    VV:11,$FB
08B4: 05 05 FE           ANIW    VV:05,$FE
08B7: A = VV[0x15];
08B9: 70 1F 08 98        LBCD    $9808
08BD: 40 C9 22           CALL    $22C9
08C0: HL = EA;
08C1: 70 3E 3B 99        SHLD    $993B
08C5: 70 3F 01 99        LHLD    $9901
08C9: EA += HL;
08CB: 70 3F 3D 99        LHLD    $993D
08CF: 74 AF              DGT     EA,HL
08D1: return 1;
08D2: 5F 05              BIT     7,VV:05
08D4: return 0;
08D5: 75 15 20           EQIW    VV:15,$20
08D8: goto 08DD
08D9: 15 05 01           ORIW    VV:05,$01
08DC: return 0;
08DD: push(EA);
08DE: 34 47 99           LXI     HL,$9947
08E1: EA = [HL];
08E3: 48 A0              DSLR    EA
08E5: 70 3F 3D 99        LHLD    $993D
08E9: EA += HL;
08EB: HL = EA;
08EC: EA = pop();
08ED: 74 AF              DGT     EA,HL
08EF: return 1;
08F0: 15 11 04           ORIW    VV:11,$04
08F3: return 0;
08F4: push(HL);
08F5: 40 A5 0E           CALL    $0EA5
08F8: HL = pop();
08F9: 40 FE 08           CALL    $08FE
08FC: 86                 CALT    ($008C)
08FD: return 0;
08FE: A = [HL++];
08FF: 67 00              NEI     A,$00
0901: return 0;
0902: 63 15              STAW    VV:15
0904: push(HL);
0905: 40 CD 05           CALL    $05CD
0908: HL = pop();
0909: F4                 JR      $08FE
090A: 34 D5 09           LXI     HL,$09D5
090D: 01 31              LDAW    VV:31
090F: 70 79 8A FF        MOV     ($FF8A),A
0913: 40 55 09           CALL    $0955
0916: 40 55 09           CALL    $0955
0919: 01 31              LDAW    VV:31
091B: B = A;
091C: 74 0A 0C           ANI     B,$0C
091F: 48 22              SLR     B
0921: 48 22              SLR     B
0923: 40 5E 09           CALL    $095E
0926: 5D 04              BIT     5,VV:04
0928: D0                 JR      $0939
0929: 01 04              LDAW    VV:04
092B: B = A;
092C: 74 0A 07           ANI     B,$07
092F: 40 5E 09           CALL    $095E
0932: 40 CF 09           CALL    $09CF
0935: 40 CF 09           CALL    $09CF
0938: CC                 JR      $0945
0939: 40 CF 09           CALL    $09CF
093C: 40 55 09           CALL    $0955
093F: 01 0C              LDAW    VV:0C
0941: B = A;
0942: 40 5E 09           CALL    $095E
0945: 01 32              LDAW    VV:32
0947: 70 79 8A FF        MOV     ($FF8A),A
094B: 40 55 09           CALL    $0955
094E: 40 55 09           CALL    $0955
0951: 40 55 09           CALL    $0955
0954: C0                 JR      $0955
0955: 70 69 8A FF        MOV     A,($FF8A)
0959: B = 0x01;
095B: 48 01              SLRC    A
095D: 52                 DCR     B
095E: push(BC);
095F: push(HL);
0960: 40 AD 09           CALL    $09AD
0963: HL = pop();
0964: BC = pop();
0965: 24 00 FF           LXI     DE,$FF00
0968: 40 BF 09           CALL    $09BF
096B: 40 C5 09           CALL    $09C5
096E: 24 14 FF           LXI     DE,$FF14
0971: 40 BF 09           CALL    $09BF
0974: 40 CD 09           CALL    $09CD
0977: A = [HL];
0978: 67 FF              NEI     A,$FF
097A: C6                 JR      $0981
097B: 24 25 FF           LXI     DE,$FF25
097E: 40 8E 09           CALL    $098E
0981: 69 00              MVI     A,$00
0983: [DE] = A;
0984: push(HL);
0985: 34 00 FF           LXI     HL,$FF00
0988: 40 F4 08           CALL    $08F4
098B: HL = pop();
098C: 4E 41              JRE     $09CF
098E: 40 BF 09           CALL    $09BF
0991: 22                 INX     DE
0992: 69 4F              MVI     A,$4F
0994: [DE++] = A;
0995: 70 69 8A FF        MOV     A,($FF8A)
0999: 44 46 46           LXI     EA,$4646
099C: 48 01              SLRC    A
099E: 44 4E 20           LXI     EA,$204E
09A1: [DE++] = EA;
09A3: 70 79 8A FF        MOV     ($FF8A),A
09A7: 22                 INX     DE
09A8: A = [HL];
09A9: 77 02              EQI     A,$02
09AB: E2                 JR      $098E
09AC: return 0;
09AD: 44 4E 00           LXI     EA,$004E
09B0: 34 02 FF           LXI     HL,$FF02
09B3: 69 00              MVI     A,$00
09B5: BE                 STAX    (HL+EA)
09B6: 69 20              MVI     A,$20
09B8: BC = EA;
09B9: 44 00 FF           LXI     EA,$FF00
09BC: 54 A7 05           JMP     $05A7

#if 0
09A0: 20 48              INRW    VV:48
09A2: 94                 CALT    ($00A8)
09A3: 70 79 8A FF        MOV     ($FF8A),A
09A7: 22                 INX     DE
09A8: A = [HL];
09A9: 77 02              EQI     A,$02
09AB: E2                 JR      $098E
09AC: return 0;
09AD: 44 4E 00           LXI     EA,$004E
09B0: 34 02 FF           LXI     HL,$FF02
09B3: 69 00              MVI     A,$00
09B5: BE                 STAX    (HL+EA)
09B6: 69 20              MVI     A,$20
09B8: BC = EA;
09B9: 44 00 FF           LXI     EA,$FF00
09BC: 54 A7 05           JMP     $05A7
#endif

09BF: A = [HL++];
09C0: 67 00              NEI     A,$00
09C2: return 0;
09C3: [DE++] = A;
09C4: FA                 JR      $09BF
09C5: 52                 DCR     B
09C6: C1                 JR      $09C8
09C7: return 0;
09C8: A = [HL++];
09C9: 77 00              EQI     A,$00
09CB: goto 09C8
09CC: F8                 JR      $09C5
09CD: A = 0x01;
09CF: 69 02              MVI     A,$02
09D1: 70 FD              EQAX    (HL+)
09D3: FD                 JR      $09D1
09D4: return 0;
09D5: 43                 INR     C
09D6: 68 61              MVI     V,$61
09D8: 72                 SOFTI   
09D9: 61                 DAA     
09DA: 63 74              STAW    VV:74
09DC: 65 72 20           NEIW    VV:72,$20
09DF: 50                 EXH     
09E0: 69 74              MVI     A,$74
09E2: 63 68              STAW    VV:68
09E4: 00                 NOP     
09E5: 31                 BLOCK   
09E6: HL++;
09E7: 20 43              INRW    VV:43
09E9: 50                 EXH     
09EA: 49 00              MVIX    BC,$00
09EC: 31                 BLOCK   
09ED: 30 20              DCRW    VV:20
09EF: 43                 INR     C
09F0: 50                 EXH     
09F1: 49 00              MVIX    BC,$00
09F3: 01 31              LDAW    VV:31
09F5: A = [HL++];
09F6: 31                 BLOCK   
09F7: 00                 NOP     
09F8: 02                 INX     SP
09F9: 53                 DCR     C
09FA: 68 61              MVI     V,$61
09FC: 70 65              illegal 
09FE: 20 6F              INRW    VV:6F
0A00: 66 20              SUI     A,$20
0A02: 5A 65              BIT     2,VV:65
0A04: 72                 SOFTI   
0A05: 6F 00              MVI     L,$00
0A07: 30 20              DCRW    VV:20
0A09: 28                 illegal 
0A0A: 53                 DCR     C
0A0B: 6C 61              MVI     D,$61
0A0D: 73                 illegal 
0A0E: 68 65              MVI     V,$65
0A10: 64 29 00           GTI     PB,$00
0A13: 30 20              DCRW    VV:20
0A15: 28                 illegal 
0A16: 55 6E 73           OFFIW   VV:6E,$73
0A19: 6C 61              MVI     D,$61
0A1B: 73                 illegal 
0A1C: 68 65              MVI     V,$65
0A1E: 64 29 00           GTI     PB,$00
0A21: 01 31              LDAW    VV:31
0A23: A = [HL++];
0A24: HL++;
0A25: 00                 NOP     
0A26: 02                 INX     SP
0A27: 50                 EXH     
0A28: 61                 DAA     
0A29: 67 65              NEI     A,$65
0A2B: 20 4C              INRW    VV:4C
0A2D: 65 6E 67           NEIW    VV:6E,$67
0A30: 74 68 00           NEI     V,$00
0A33: 37 30              LTI     A,$30
0A35: 2F                 LDAX    (HL-)
0A36: 36 20              SUINB   A,$20
0A38: 69 6E              MVI     A,$6E
0A3A: 63 68              STAW    VV:68
0A3C: 00                 NOP     
0A3D: 38                 illegal 
0A3E: 2E                 LDAX    (DE-)
0A3F: 35 20 69           LTIW    VV:20,$69
0A42: 6E 63              MVI     H,$63
0A44: 68 00              MVI     V,$00
0A46: 31                 BLOCK   
0A47: HL++;
0A48: 20 69              INRW    VV:69
0A4A: 6E 63              MVI     H,$63
0A4C: 68 00              MVI     V,$00
0A4E: 31                 BLOCK   
0A4F: 31                 BLOCK   
0A50: 20 69              INRW    VV:69
0A52: 6E 63              MVI     H,$63
0A54: 68 00              MVI     V,$00
0A56: 01 31              LDAW    VV:31
0A58: A = [HL++];
0A59: HL--;
0A5A: 00                 NOP     
0A5B: 31                 BLOCK   
0A5C: A = [HL++];
0A5D: 34 00 02           LXI     HL,$0200
0A60: 50                 EXH     
0A61: 43                 INR     C
0A62: 20 54              INRW    VV:54
0A64: 61                 DAA     
0A65: return; /* FROM INTERRUPT */
0A66: 6C 65              MVI     D,$65
0A68: 00                 NOP     
0A69: 55 6E 69           OFFIW   VV:6E,$69
0A6C: 74 65 64           SUI     E,$64
0A6F: 20 53              INRW    VV:53
0A71: 74 61 74           SUI     A,$74
0A74: 65 73 00           NEIW    VV:73,$00
0A77: 4D 75              illegal 
0A79: 6C 74              MVI     D,$74
0A7B: 69 6C              MVI     A,$6C
0A7D: 69 6E              MVI     A,$6E
0A7F: 67 75              NEI     A,$75
0A81: 61                 DAA     
0A82: 6C 00              MVI     D,$00
0A84: 50                 EXH     
0A85: 6F 72              MVI     L,$72
0A87: 74 75 67           SBI     E,$67
0A8A: 61                 DAA     
0A8B: 6C 00              MVI     D,$00
0A8D: 43                 INR     C
0A8E: 61                 DAA     
0A8F: 6E 61              MVI     H,$61
0A91: PB -= 0x2d; /* 0010 1101 */
0A94: 46 72              ADI     A,$72
0A96: 65 6E 63           NEIW    VV:6E,$63
0A99: 68 00              MVI     V,$00
0A9B: 4E 6F              JRE     $0B0C
0A9D: 72                 SOFTI   
0A9E: 77 61              EQI     A,$61
0AA0: 79 00              CALF    $0900
0AA2: 55 6E 69           OFFIW   VV:6E,$69
0AA5: 74 65 64           SUI     E,$64
0AA8: 20 53              INRW    VV:53
0AAA: 74 61 74           SUI     A,$74
0AAD: 65 73 00           NEIW    VV:73,$00
0AB0: 55 6E 69           OFFIW   VV:6E,$69
0AB3: 74 65 64           SUI     E,$64
0AB6: 20 53              INRW    VV:53
0AB8: 74 61 74           SUI     A,$74
0ABB: 65 73 00           NEIW    VV:73,$00
0ABE: 55 6E 69           OFFIW   VV:6E,$69
0AC1: 74 65 64           SUI     E,$64
0AC4: 20 53              INRW    VV:53
0AC6: 74 61 74           SUI     A,$74
0AC9: 65 73 00           NEIW    VV:73,$00
0ACC: 01 31              LDAW    VV:31
0ACE: A = [HL++];
0ACF: 35 00 31           LTIW    VV:00,$31
0AD2: A = [HL++];
0AD3: 36 00              SUINB   A,$00
0AD5: 31                 BLOCK   
0AD6: A = [HL++];
0AD7: 37 00              LTI     A,$00
0AD9: 31                 BLOCK   
0ADA: A = [HL++];
0ADB: 38                 illegal 
0ADC: 00                 NOP     
0ADD: 02                 INX     SP
0ADE: 43                 INR     C
0ADF: 68 61              MVI     V,$61
0AE1: 72                 SOFTI   
0AE2: 61                 DAA     
0AE3: 63 74              STAW    VV:74
0AE5: 65 72 20           NEIW    VV:72,$20
0AE8: 54 61 62           JMP     $6261
0AEB: 6C 65              MVI     D,$65
0AED: 00                 NOP     
0AEE: 47 72              ONI     A,$72
0AF0: 61                 DAA     
0AF1: 70 68 69 63        MOV     V,($6369)
0AF5: 73                 illegal 
0AF6: 00                 NOP     
0AF7: C9                 JR      $0B01
0AF8: F4                 JR      $0AED
0AF9: E1                 JR      $0ADB
0AFA: EC                 JR      $0AE7
0AFB: E9                 JR      $0AE5
0AFC: E3                 JR      $0AE0
0AFD: F3                 JR      $0AF1
0AFE: 00                 NOP     
0AFF: 01 31              LDAW    VV:31
0B01: A = [HL++];
0B02: 35 00 02           LTIW    VV:00,$02
0B05: 43                 INR     C
0B06: 6F 75              MVI     L,$75
0B08: 6E 74              MVI     H,$74
0B0A: 72                 SOFTI   
0B0B: 79 00              CALF    $0900
0B0D: 55 2E 53           OFFIW   VV:2E,$53
0B10: 2E                 LDAX    (DE-)
0B11: 41                 INR     A
0B12: 2E                 LDAX    (DE-)
0B13: 00                 NOP     
0B14: 46 72              ADI     A,$72
0B16: 61                 DAA     
0B17: 6E 63              MVI     H,$63
0B19: 65 00 47           NEIW    VV:00,$47
0B1C: 65 72 6D           NEIW    VV:72,$6D
0B1F: 61                 DAA     
0B20: 6E 79              MVI     H,$79
0B22: 00                 NOP     
0B23: 55 2E 4B           OFFIW   VV:2E,$4B
0B26: 2E                 LDAX    (DE-)
0B27: 00                 NOP     
0B28: 44 65 6E           LXI     EA,$6E65
0B2B: 6D 61              MVI     E,$61
0B2D: 72                 SOFTI   
0B2E: 6B 00              MVI     C,$00
0B30: 53                 DCR     C
0B31: 77 65              EQI     A,$65
0B33: 64 65 6E           SUI     PF,$6E
0B36: 00                 NOP     
0B37: 49 74              MVIX    BC,$74
0B39: 61                 DAA     
0B3A: 6C 79              MVI     D,$79
0B3C: 00                 NOP     
0B3D: 53                 DCR     C
0B3E: 70 61              ESUB    EA,A
0B40: 69 6E              MVI     A,$6E
0B42: 00                 NOP     
0B43: 01 31              LDAW    VV:31
0B45: A = [HL++];
0B46: 36 00              SUINB   A,$00
0B48: 31                 BLOCK   
0B49: A = [HL++];
0B4A: 37 00              LTI     A,$00
0B4C: 31                 BLOCK   
0B4D: A = [HL++];
0B4E: 38                 illegal 
0B4F: 00                 NOP     
0B50: 02                 INX     SP
0B51: 53                 DCR     C
0B52: 68 6F              MVI     V,$6F
0B54: 72                 SOFTI   
0B55: 74 20 54           ADINC   V,$54
0B58: 65 61 72           NEIW    VV:61,$72
0B5B: A = [HL++];
0B5C: 6F 66              MVI     L,$66
0B5E: 66 00              SUI     A,$00
0B60: 49 6E              MVIX    BC,$6E
0B62: 76 61              SBI     A,$61
0B64: 6C 69              MVI     D,$69
0B66: PA = 0x56; /* 01010110 */
0B69: 61                 DAA     
0B6A: 6C 69              MVI     D,$69
0B6C: PA = 0x01; /* 00000001 */
0B6F: HL++;
0B70: A = [HL++];
0B71: 31                 BLOCK   
0B72: 00                 NOP     
0B73: 02                 INX     SP
0B74: 43                 INR     C
0B75: 53                 DCR     C
0B76: 46 20              ADI     A,$20
0B78: 4D 6F              illegal 
0B7A: 64 65 00           SUI     PF,$00
0B7D: 56 61              ACI     A,$61
0B7F: 6C 69              MVI     D,$69
0B81: PA = 0x49; /* 01001010 */
0B84: 6E 76              MVI     H,$76
0B86: 61                 DAA     
0B87: 6C 69              MVI     D,$69
0B89: PA = 0x01; /* 00000001 */
0B8C: HL++;
0B8D: A = [HL++];
0B8E: HL++;
0B8F: 00                 NOP     
0B90: 02                 INX     SP
0B91: 53                 DCR     C
0B92: 6B 69              MVI     C,$69
0B94: 70 20              illegal 
0B96: 50                 EXH     
0B97: 65 72 66           NEIW    VV:72,$66
0B9A: 6F 72              MVI     L,$72
0B9C: 61                 DAA     
0B9D: 74 69 6F           NEI     A,$6F
0BA0: 6E 00              MVI     H,$00
0BA2: 31                 BLOCK   
0BA3: 20 69              INRW    VV:69
0BA5: 6E 63              MVI     H,$63
0BA7: 68 00              MVI     V,$00
0BA9: 4E 6F              JRE     $0C1A
0BAB: 6E 65              MVI     H,$65
0BAD: 00                 NOP     
0BAE: 01 32              LDAW    VV:32
0BB0: A = [HL++];
0BB1: HL--;
0BB2: 00                 NOP     
0BB3: 02                 INX     SP
0BB4: 41                 INR     A
0BB5: 75 74 6F           EQIW    VV:74,$6F
0BB8: 20 4C              INRW    VV:4C
0BBA: 46 00              ADI     A,$00
0BBC: 56 61              ACI     A,$61
0BBE: 6C 69              MVI     D,$69
0BC0: PA = 0x44; /* 01000100 */
0BC3: 65 70 65           NEIW    VV:70,$65
0BC6: 6E 64              MVI     H,$64
0BC8: 20 6F              INRW    VV:6F
0BCA: 6E 20              MVI     H,$20
0BCC: 49 2F              MVIX    BC,$2F
0BCE: 46 00              ADI     A,$00
0BD0: 01 32              LDAW    VV:32
0BD2: A = [HL++];
0BD3: 34 00 02           LXI     HL,$0200
0BD6: 44 72 61           LXI     EA,$6172
0BD9: 66 74              SUI     A,$74
0BDB: 20 50              INRW    VV:50
0BDD: 72                 SOFTI   
0BDE: 69 6E              MVI     A,$6E
0BE0: 74 20 53           ADINC   V,$53
0BE3: 70 65              illegal 
0BE5: 65 64 00           NEIW    VV:64,$00
0BE8: 4E 6F              JRE     $0C59
0BEA: 72                 SOFTI   
0BEB: 6D 61              MVI     E,$61
0BED: 6C 00              MVI     D,$00
0BEF: 48 69              SKNIT   FSR
0BF1: 67 68              NEI     A,$68
0BF3: 00                 NOP     
0BF4: 01 FF              LDAW    VV:FF
0BF6: 02                 INX     SP

0BF7:
	TMM |= 0xe0; /* 1110 0000 */
	             /* ff input clock source: upcounter 0 equals tm0 */
	             /* timer0: internal clock /12, count up */
	             /* timer1: upcounter0 = tm0, reset to 0 and stop counting */
	IRR &= ~INTFT1; /* clear FT1 interrupt flag */
	TM1  = 0x26;
	[9818] = 0x0c0f;
	TMM &= 0x3f; /* 0011 1111 */
	             /* timer1: count up, internal clock / 384 */
	MKL &= 0xfb; /* 1111 1011 */ /* activate INTT1 */
	return 0;

0C0F: 40 16 0C           CALL    $0C16
0C12: 11                 EXX     
0C13: 10                 EXA     
0C14: enable_interrupts();
0C15: return; /* FROM INTERRUPT */

0C16:
A = CR1;
if (VV[0x41] & 0x02) {
	if (A <= 0xb8) {
		VV[0x41] |= 0x01;
		0C48();
		0C9A();
		A = 0xC3;
		[0xC004] = 0xC3;
		reset();
	}
	VV[0x41] |= 0xfd;
	return;
}
if (A <= 0xb8)
	VV[0x41] |= 0x02;
return;

0C2A:
if (VV != 0x98)
	reset();
if (VV[0x41] & 0x01) {
	enable_interrupts();
	return; /* FROM INTERRUPT */
}
VV[0x41] |= 0x01;
0C48();
0C9A();
[0xC004] = 0xC3;
reset();

0C48:
	MKL    = 0xff; /* mask all interrupts */
	MKH    = 0xff; /* mask all interrupts */
	[0xc005] = 0x0000; /* Latches (and inverts) the data for pin 9 of the printhead. */
	[0xc007] = 0x0000; /* Latches the phase data for the CR motor. */
	EOM   = b10011001; /* to set LVx, output LVx */
	[VV:0x0f] &= 0x3f;
	[VV:0x01] &= 0xcf;
0C61: goto 0F9C;

0C64:
	VV[ADDRESS_93C06] = 0x00;
0C67:
	93c06.WEN();
	HL = 0x9847;
	B = 0x00;
	C = 0x07;
0C71:
	do {
		push(BC);
		93c06.READ();
		[HL++] = EA;
		BC = 0xffff;
		if (EA != BC)
			93c06.ERASE();
		if (VV[ADDRESS_93C06]++ == 0xff)
			BC = pop();
		B += EAL;
		B += EAH;
	} while (--C == 0xff);
	if (B != 0x1D) {
		if (VV[ADDRESS_93C06] <= 0x08)
			goto 0C67;
		0CD3();
	}
	93c06.WDS();
	return;

0C9A: 0CBF();
0C9D: 93c06.WEN();
0CA0: if (VV[ADDRESS_93C06] >= 0x09)
0CA3: 	VV[ADDRESS_93C06] = 0x00;
0CA6: HL = 0x9847;
0CA9: C = 0x07;
0CAB: push(BC);
0CAC: 48 85              LDEAX   (HL++)
0CAE: BC = 0xffff;
0CB1: if (EA != BC)
0CB3: 	93c06.WRITE();
0CB6: VV[ADDRESS_93C06]++;
0CB8: if (!VV[ADDRESS_93C06]) BC = pop();
if (!C--)
	goto 0CAB;
0CBB: 93c06.WDS();
0CBE: return 0;
0CBF: A = 0x00;
0CC1: HL = 0x9847;
0CC4: B = 0x0e;
0CC6: 70 C5              ADDX    (HL+)
0CC8: 52                 DCR     B
0CC9: goto 0CC6
0CCA: 6A 1D              MVI     B,$1D
0CCC: 60 62              SUB     B,A
0CCE: 70 7A 56 98        MOV     ($9856),B
0CD2: return 0;

0CD3: 1054();
0CD6: 93c06.WEN();
0CD9: 93c06.ERAL();
0CDC: 93c06.WDS();
memcpy(0x9847, 0x0D18, 0x0e);
0CE8: return 0;

0CE9: 1054();
0CEC: 93c06.WEN();
0CEF: 93c06.ERAL();
0CF2: 93c06.WDS();
HL = 0x9850;
0CF8: A = [HL++];
0CF9: push(VA);
0CFA: A = [HL++];
0CFB: push(VA);
0CFC: A = [HL++];
0CFD: push(VA);
0CFE: A = [HL++];
0CFF: push(VA);
0D00: A = [HL];
0D01: push(VA);
0D02: push(HL);
memcpy(0x9847, 0x0D18, 0x0e);
HL = pop();
[HL--] = pop();
[HL--] = pop();
[HL--] = pop();
[HL--] = pop();
[HL--] = pop();
[HL] = pop();
return 0;

0D18: DW: 00 00 00 00 00 00 90 12 00 2D 1F 39 37 23 00

/* 0D27 */
uint16_t 93c06.READ(void)
{
	93c06.instruction_addr(READ);
	93c06.DI = 0;
	93c06.clock();
	EA = 0x0000;

	for (i = 0; i < 0x10; i++) {
		EA = (EA<<1) & 93c06.DO;
		93c06.clock();
	}

	return EA;
}
/* 0D52 */
void 93c06.WRITE(void)
{
	93c06.instruction_addr(WRITE);
	93c06.send(EAH);
	93c06.send(EAL);
	93c06.DI = 0;
	93c06.CS = 0;
	delay(10);
	return;
}
/* 0D67 */
void 93c06.ERASE(void)
{
	93c06.instruction_addr(ERASE);
	93c06.DI = 0;
	93c06.CS = 0;
	delay(10);
	return;
}
/* 0D6B */
void 93c06.ERAL(void)
{
	93c06.instruction(ERAL);
	93c06.DI = 0;
	93c06.CS = 0;
	delay(10);
	return;
}
/* 0D6F */
void 93c06.WEN(void)
{
	93c06.instruction(WEN);
	93c06.DI = 0;
	93c06.CS = 0;
	nop();
	return;
}
/* 0D7A */
void 93c06.WDS(void)
{
	93c06.instruction(WDS);
	93c06.DI = 0;
	93c06.CS = 0;
	nop();
	return;
}

void 93c06.instruction(instruction)
{
	93c06.DI = 0;
	93c06.CS = 1;
	93c06.clock();
	93c06.DI = 1; /* start bit */
	93c06.clock();
	93c06.send(A);
	return;
}
void 93c06.instruction_addr(instruction)
{
	A |= VV[ADDRESS_93C06];
	93c06.instruction(A);
}

void 93c06.send(uint8_t A)
{
	B = 0x80;
	do {
		93c06.DI = 0;
		if (A & B)
			93c06.DI = 1;
		93c06.clock();
		B >>= 1;
	} while (B);
	return;
}

0DB9:
	40 E5 32           CALL    $32E5
	return 0;
	40 47 2D           CALL    $2D47
	40 E5 32           CALL    $32E5
	return 0;
	40 AD 09           CALL    $09AD
	34 0E 0E           LXI     HL,$0E0E
	40 F4 08           CALL    $08F4
	40 AD 09           CALL    $09AD
	40 34 0E           CALL    $0E34
	44 90 12           LXI     EA,$1290
	70 3F 77 9A        LHLD    $9A77
	74 E7              DSUB    EA,HL
	34 42 01           LXI     HL,$0142
	EA += HL;
	34 4D 98           LXI     HL,$984D
	48 93              STEAX   (HL)
	01 2C              LDAW    VV:2C
	48 3D              DIV     A
	77 00              EQI     A,$00
	EA++;
	40 75 0E           CALL    $0E75
	34 26 0E           LXI     HL,$0E26
	24 00 FF           LXI     DE,$FF00
	40 BF 09           CALL    $09BF
	A = B;
	40 45 0E           CALL    $0E45
	A = C;
	40 51 0E           CALL    $0E51
	A = 0x2e;
	[DE] = A;
	34 00 FF           LXI     HL,$FF00
	40 F4 08           CALL    $08F4
	40 7D 2D           CALL    $2D7D
	return 0;

0E0E: DW: 54 68 69 73 20 69 73 20 74 68 65 20 66 69
      DW: 72 73 74 20 6C 69 6E 65 2E 00
0E26: DW: 54 68 69 73 20 69 73 20 6C 69 6E 65 20 00

0E34:
	14 90 12           LXI     BC,$1290
	91                 CALT    ($00A2)
	14 1E 01           LXI     BC,$011E
	40 AE 2E           CALL    $2EAE
	54 AE 2D           JMP     $2DAE
	05 13 DF           ANIW    VV:13,$DF
	return 0;

0E45:
	40 59 0E           CALL    $0E59
	A = EAL;
	77 30              EQI     A,$30
	[DE++] = A;
	A = EAH;
	77 30              EQI     A,$30
	[DE++] = A;
	return 0;

0E51:
	40 59 0E           CALL    $0E59
	A = EAL;
	[DE++] = A;
	A = EAH;
	[DE++] = A;
	return 0;

0E59:
	EAH = A;
	48 21              SLR     A
	48 21              SLR     A
	48 21              SLR     A
	48 21              SLR     A
	40 6E 0E           CALL    $0E6E
	EAL = A;
	A = EAH;
	A &= 0x0f;
	40 6E 0E           CALL    $0E6E
	EAH = A;
	return 0;

0E6E:
	37 0A              LTI     A,$0A
	46 07              ADI     A,$07
	46 30              ADI     A,$30
	return 0;

0E75:
	24 00 00           LXI     DE,$0000
	69 02              MVI     A,$02
0E7A:
	6A 0A              MVI     B,$0A
0E7C: 48 3E              DIV     B
0E7E: 77 02              EQI     A,$02
0E80: C5                 JR      $0E86
0E81: push(VA);
0E82: A = B;
0E83: E = A;
0E84: VA = pop();
0E85: D6                 JR      $0E9C
0E86: 77 01              EQI     A,$01
0E88: CC                 JR      $0E95
0E89: push(VA);
0E8A: push(EA);
0E8B: 69 10              MVI     A,$10
0E8D: 48 2E              MUL     B
0E8F: 74 C6              DADD    EA,DE
0E91: DE = EA;
0E92: EA = pop();
0E93: VA = pop();
0E94: C7                 JR      $0E9C
0E95: 77 00              EQI     A,$00
0E97: goto 0E9C
0E98: push(VA);
0E99: A = B;
0E9A: 1C                 MOV     D,A
0E9B: VA = pop();
0E9C: 51                 DCR     A
0E9D: 4F DB              JRE     $0E7A
0E9F: EA = DE;
0EA0: BC = EA;
0EA1: return 0;
0EA2: 40 09 0F           CALL    $0F09
0EA5: 40 4B 2E           CALL    $2E4B
0EA8: 4E 18              JRE     $0EC2
0EAA: 40 0A 2F           CALL    $2F0A
0EAD: 54 2B 2C           JMP     $2C2B
0EB0: 48 44              SKIT    F2	/* ONLINE BUTTON */
0EB2: return 0;
0EB3: 5C 13              BIT     4,VV:13
0EB5: C5                 JR      $0EBB
0EB6: 40 EF 2F           CALL    $2FEF
0EB9: 88                 CALT    ($0090)
0EBA: return 0;
0EBB: 55 03 04           OFFIW   VV:03,$04
0EBE: 40 12 04           CALL    $0412
0EC1: 8B                 CALT    ($0096)
0EC2: 40 E9 2F           CALL    $2FE9
0EC5: 40 9C 0F           CALL    $0F9C
0EC8: 40 08 2E           CALL    $2E08
0ECB: 40 D0 31           CALL    $31D0
0ECE: 88                 CALT    ($0090)
0ECF: 40 37 2C           CALL    $2C37
0ED2: 48 44              SKIT    F2	/* ONLINE BUTTON */
0ED4: FA                 JR      $0ECF
0ED5: 55 13 20           OFFIW   VV:13,$20
0ED8: CC                 JR      $0EE5
0ED9: 40 08 2E           CALL    $2E08
0EDC: D6                 JR      $0EF3
0EDD: 40 EC 32           CALL    $32EC
0EE0: 90                 CALT    ($00A0)
0EE1: goto 0EE5
0EE2: 5E 13              BIT     6,VV:13
0EE4: CE                 JR      $0EF3
0EE5: 40 C0 2C           CALL    $2CC0
0EE8: 55 13 60           OFFIW   VV:13,$60
0EEB: E2                 JR      $0ECE
0EEC: 40 E5 32           CALL    $32E5
0EEF: 90                 CALT    ($00A0)
0EF0: C2                 JR      $0EF3
0EF1: 4F DB              JRE     $0ECE
0EF3: 05 13 BB           ANIW    VV:13,$BB
0EF6: 40 70 0F           CALL    $0F70
0EF9: 40 0A 2F           CALL    $2F0A
0EFC: 54 2B 2C           JMP     $2C2B
0EFF: 88                 CALT    ($0090)
0F00: return 0;
0F01: 40 13 10           CALL    $1013
0F04: goto 0F01
0F05: 48 44              SKIT    F2	/* ONLINE BUTTON */
0F07: 00                 NOP     
0F08: return 0;
0F09: 55 13 10           OFFIW   VV:13,$10
0F0C: return 0;
0F0D: 87                 CALT    ($008E)
0F0E: 4E 23              JRE     $0F33
0F10: 55 0B 02           OFFIW   VV:0B,$02
0F13: 55 0A 01           OFFIW   VV:0A,$01
0F16: goto 0F22
0F17: 40 51 10           CALL    $1051
0F1A: 15 4F 02           ORIW    VV:4F,$02
0F1D: 40 C9 15           CALL    $15C9
0F20: 4E 35              JRE     $0F57
0F22: 40 54 10           CALL    $1054
0F25: 05 4F FD           ANIW    VV:4F,$FD
0F28: 40 CD 15           CALL    $15CD
0F2B: 15 4F 01           ORIW    VV:4F,$01
0F2E: 40 2B 15           CALL    $152B
0F31: 4E 24              JRE     $0F57
0F33: 40 E4 0F           CALL    $0FE4
0F36: goto 0F3F;
0F37: 81                 CALT    ($0082)
0F38: 05 4F FE           ANIW    VV:4F,$FE
0F3B: 40 2F 15           CALL    $152F
0F3E: D8                 JR      $0F57
0F3F: 40 F2 0F           CALL    $0FF2
0F42: D7                 JR      $0F5A
0F43: 5A 0B              BIT     2,VV:0B
0F45: goto 0F50
0F46: 40 54 10           CALL    $1054
0F49: 05 4F FB           ANIW    VV:4F,$FB
0F4C: 40 FC 14           CALL    $14FC
0F4F: C7                 JR      $0F57
0F50: 81                 CALT    ($0082)
0F51: 15 4F 04           ORIW    VV:4F,$04
0F54: 40 F8 14           CALL    $14F8
0F57: 40 26 10           CALL    $1026
0F5A: return 0;
0F5B: 90                 CALT    ($00A0)
0F5C: D3                 JR      $0F70
0F5D: 40 EC 32           CALL    $32EC
0F60: 40 7D 2D           CALL    $2D7D
0F63: 40 E5 32           CALL    $32E5
0F66: 55 01 04           OFFIW   VV:01,$04
0F69: C6                 JR      $0F70
0F6A: 40 CF 32           CALL    $32CF
0F6D: 54 C2 0E           JMP     $0EC2
0F70: 15 14 40           ORIW    VV:14,$40
0F75: [0xC004] &= 0xB3;
0F76: 55 03 02           OFFIW   VV:03,$02
0F79: return 0;
0F7A:
0F7C: [0xC004] |= 0x10;
0F7D: 5F 11              BIT     7,VV:11
0F7F: CC                 JR      $0F8C
0F80: 55 11 40           OFFIW   VV:11,$40
0F83: return 0;
0F84: MKH &= 0xfd; /* 1111 1101 */
0F87: A = 0x11;
0F89: TXB = A;
0F8B: goto 0F99;
0F8C: 34 02 C0           LXI     HL,$C002
0F8F: A = [HL];
0F90: 57 80              OFFI    A,$80
0F92: return;
0F95: [0xC004] |= 0x20;
0F98: [0xC004] &= 0xDF;
0F99: goto 2305;

0F9C:
	func_2089();
[VV:0x14] &= 0xBF;
0FA2: [0xC004] &= 0xEF;
0FA3: 55 11 40           OFFIW   VV:11,$40
0FA6: goto 0FB1;
0FA7: A = 0x13;
0FA9: TXB = A;
0FAB: 40 0C 23           CALL    $230C
0FAE: delay(1);
0FB1: A = 0x40;
0FB3: HL = C004;
0FB6: 70 CB              ONAX    (HL)
0FB8: A = 0x04;
0FBA: A = 0x0c;
0FBC: [0xC004] |= A; return;

uint8_t read_stable_PA(void)
{
	do {
		B = PA;
		A = PA;
	} while (A != B);
	/* returns PA in A and B */
}
0FC8: A, B = read_stable_PA();
0FCB: push(BC);
0FCC: delay(10);
0FCF: A, B = read_stable_PA();
0FD2: BC = pop();
0FD3: 60 FA              EQA     A,B
0FD5: goto 0FC8;
0FD6: return;
0FD7: A = PC;
0FD9: A &= 0x3C;
0FDB: B = A;
0FDC: A = PC;
0FDE: A &= 0x3C;
0FE0: 60 FA              EQA     A,B
0FE2: goto 0FD7;
0FE3: return 0;
0FE4: A, B = read_stable_PA();
0FE7: 47 40              ONI     A,$40
0FE9: return 1;
0FEA: return 0;
0FEB: A, B = read_stable_PA();
0FEE: 47 80              ONI     A,$80
0FF0: return 1;
0FF1: return 0;
0FF2: 4C E2              MOV     A,CR2
0FF4: 57 80              OFFI    A,$80
0FF6: return 0;
0FF7: wait_for_AD();
0FFD: 4C E2              MOV     A,CR2
0FFF: 57 80              OFFI    A,$80
1001: return 0;
1002: return 1;
1003: 40 D7 0F           CALL    $0FD7
1006: 47 08              ONI     A,$08
1008: return 1;
1009: return 0;
100A: HL = 0FEB;
100D: HL = 0FE4;
1010: HL = 0FF2;
1013: HL = 1003;
1016: EA = HL;
1017: BC = EA;
1018: push(BC);
1019: 48 29              CALB    
101B: C2                 JR      $101E
101C: BC = pop();
101D: return 0;
101E: delay(10);
1021: BC = pop();
1022: 48 29              CALB    
1024: return 1;
1025: return 0;
1026: 40 0A 10           CALL    $100A
1029: goto 1026;
102A: 40 0D 10           CALL    $100D
102D: goto 1026;
102E: 40 10 10           CALL    $1010
1031: goto 1026;
1032: return;

1033: void beep_endlessly() {} /* HANG */

1044: HL = 0301;
1047: HL = 0400;
104A: HL = 0102;
104D: CF                 JR      $105D
104E: HL = 0403;
1051: HL = 0002;
1054: HL = 0001;
1057: HL = 0000;
VV[0x10] |= 0x04;

105D: push(HL);
func_7bb1();
1061: HL = pop();
1062: EA = HL;
1063: BC = EA;

1064: push(BC);
do {
	beep_60ms();
	if (VV[0x10] & 0x04) delay( 30);
	else                 delay(100);
} while (--C != 0xff);
1073: BC = pop();
1074: 52                 DCR     B
1075: goto 107A
VV[10] &= 0xfb; /* 1111 1011 */ /* unset 0x04 */
1079: return 0;
107A: push(BC);
if (VV[0x10] & 0x04) delay(100);
else                 delay(200);
1082: BC = pop();
1083: goto 1064;

1084: void beep_60ms() {}

109B: HL = 0xC004;
109E: A &= [HL];
10A0: goto 10A6;
10A1: HL = 0xC004;
10A4: A |= [HL];
10A6: [HL] = A;
10A7: return;

10A8: 34 30 98           LXI     HL,$9830
10AB: 69 03              MVI     A,$03
10AD: 3F                 STAX    (HL-)
10AE: 51                 DCR     A
10AF: FD                 JR      $10AD
10B0: return 0;
10B1: 8E                 CALT    ($009C)
10B2: 34 CD 10           LXI     HL,$10CD
10B5: 6A 03              MVI     B,$03
10B7: 70 EF              NEAX    (HL-)
10B9: goto 10BE
10BA: 52                 DCR     B
10BB: FB                 JR      $10B7
10BC: 8E                 CALT    ($009C)
10BD: return 0;
10BE: push(BC);
10BF: 8E                 CALT    ($009C)
10C0: BC = pop();
10C1: A &= 0x0f;
10C3: 34 2D 98           LXI     HL,$982D
10C6: 27 06              GTI     A,$06
10C8: BD                 STAX    (HL+B)
10C9: return 0;
10CA: 4B 4C              MVIX    HL,$4C
10CC: 59 5A              BIT     1,VV:5A
10CE: 01 2D              LDAW    VV:2D
10D0: DD                 JR      $10EE
10D1: 01 2E              LDAW    VV:2E
10D3: DA                 JR      $10EE
10D4: 01 2F              LDAW    VV:2F
10D6: D7                 JR      $10EE
10D7: 01 30              LDAW    VV:30
10D9: D4                 JR      $10EE
10DA: 8E                 CALT    ($009C)
10DB: A &= 0x0f;
10DD: 37 08              LTI     A,$08
10DF: return 0;
10E0: 67 07              NEI     A,$07
10E2: C9                 JR      $10EC
10E3: goto 10EE
10E4: 8E                 CALT    ($009C)
10E5: A &= 0x0f;
10E7: 15 12 08           ORIW    VV:12,$08
10EA: 37 02              LTI     A,$02
10EC: 4E A2              JRE     $1190
10EE: 77 02              EQI     A,$02
10F0: 67 03              NEI     A,$03
10F2: 15 12 04           ORIW    VV:12,$04
10F5: 67 05              NEI     A,$05
10F7: 15 12 60           ORIW    VV:12,$60
10FA: 67 06              NEI     A,$06
10FC: 15 12 20           ORIW    VV:12,$20
10FF: 48 25              SLL     A
1101: 48 25              SLL     A
1103: 34 09 13           LXI     HL,$1309
1106: 24 21 98           LXI     DE,$9821
1109: 48 8C              LDEAX   (HL+A)
110B: [DE++] = EA;
110D: 46 02              ADI     A,$02
110F: 48 8C              LDEAX   (HL+A)
1111: [DE] = EA;
1113: 40 83 12           CALL    $1283
1116: 4E 74              JRE     $118C
1118: 15 13 02           ORIW    VV:13,$02
111B: 40 FA 11           CALL    $11FA
111E: 86                 CALT    ($008C)
111F: 14 00 00           LXI     BC,$0000
1122: 70 3F 3D 99        LHLD    $993D
1126: EA = HL;
1127: 70 3F 01 99        LHLD    $9901
112B: 74 E7              DSUB    EA,HL
112D: 01 22              LDAW    VV:22
112F: 48 3D              DIV     A
1131: DE = EA;
1132: 34 41 99           LXI     HL,$9941
1135: EA = [HL];
1137: 74 AE              DGT     EA,DE
1139: goto 1144
113A: 15 12 10           ORIW    VV:12,$10
113D: 70 2E 41 99        SDED    $9941
1141: 74 E6              DSUB    EA,DE
1143: BC = EA;
1144: 70 1E 3F 99        SBCD    $993F
1148: 70 2F 41 99        LDED    $9941
114C: EA = DE;
114D: 01 22              LDAW    VV:22
114F: 84                 CALT    ($0088)
1150: 34 3B 99           LXI     HL,$993B
1153: 48 93              STEAX   (HL)
1155: 70 3F 41 99        LHLD    $9941
1159: EA = HL;
115A: 55 12 08           OFFIW   VV:12,$08
115D: 48 A4              DSLL    EA
115F: HL = EA;
1160: 44 00 10           LXI     EA,$1000
1163: 74 E7              DSUB    EA,HL
1165: 70 3F 15 99        LHLD    $9915
1169: 74 BF              DLT     EA,HL
116B: goto 1170
116C: push(EA);
	func_2089();
116E: EA = pop();
116F: F5                 JR      $1165
1170: 70 3F 01 99        LHLD    $9901
1174: 70 3E 55 99        SHLD    $9955
1178: 15 03 80           ORIW    VV:03,$80
117B: 15 05 02           ORIW    VV:05,$02
117E: 40 A6 11           CALL    $11A6
1181: 05 05 FD           ANIW    VV:05,$FD
1184: 34 3F 99           LXI     HL,$993F
1187: EA = [HL];
1189: 40 96 11           CALL    $1196
118C: 71 12 00           MVIW    VV:12,$00
118F: return 0;
1190: 40 83 12           CALL    $1283
1193: 00                 NOP     
1194: EA = HL;
1195: F3                 JR      $1189
1196: 55 12 08           OFFIW   VV:12,$08
1199: 48 A4              DSLL    EA
119B: HL = 0x0000;
119E: 74 EF              DNE     EA,HL
11A0: return 0;
11A1: push(EA);
11A2: 8E                 CALT    ($009C)
11A3: EA = pop();
11A4: A9                 DCX     EA
11A5: F5                 JR      $119B
11A6: 40 0B 12           CALL    $120B
11A9: return 0;
11AA: 8B                 CALT    ($0096)
11AB: 40 0C 1F           CALL    $1F0C
11AE: 70 1F 3B 99        LBCD    $993B
11B2: 34 01 99           LXI     HL,$9901
11B5: EA = [HL];
11B7: 74 C5              DADD    EA,BC
11B9: 48 93              STEAX   (HL)
11BB: 59 12              BIT     1,VV:12
11BD: 4E 2F              JRE     $11EE
11BF: 40 68 2B           CALL    $2B68
11C2: 40 13 2C           CALL    $2C13
11C5: 01 21              LDAW    VV:21
11C7: 63 20              STAW    VV:20
11C9: 01 22              LDAW    VV:22
11CB: 63 25              STAW    VV:25
11CD: 70 3F 23 98        LHLD    $9823
11D1: 70 3E 23 99        SHLD    $9923
11D5: 5A 12              BIT     2,VV:12
11D7: 34 05 C0           LXI     HL,$C005
11DA: 34 06 C0           LXI     HL,$C006
11DD: A = [HL];
11DE: 40 94 12           CALL    $1294
11E1: 15 12 80           ORIW    VV:12,$80
11E4: 05 00 FB           ANIW    VV:00,$FB
11E7: 92                 CALT    ($00A4)
11E8: 40 2D 1F           CALL    $1F2D
11EB: 40 0C 1F           CALL    $1F0C
11EE: 70 3F 3D 99        LHLD    $993D
11F2: 5C 12              BIT     4,VV:12
11F4: 70 3F 01 99        LHLD    $9901
11F8: 85                 CALT    ($008A)
11F9: return 0;
11FA: 70 3F 01 99        LHLD    $9901
11FE: EA = HL;
11FF: 01 22              LDAW    VV:22
1201: EA += A;
1203: 70 3F 3D 99        LHLD    $993D
1207: 74 AF              DGT     EA,HL
1209: return 1;
120A: return 0;
120B: 15 12 02           ORIW    VV:12,$02
120E: 70 1F 41 99        LBCD    $9941
1212: 70 2F 13 99        LDED    $9913
1216: A = [DE++];
1217: 8F                 CALT    ($009E)	rollover_DE_from_0x9000_to_0x8000();
1218: 77 00              EQI     A,$00
121A: 4E 21              JRE     $123D
121C: 5B 12              BIT     3,VV:12
121E: C5                 JR      $1224
121F: A = [DE++];
1220: 8F                 CALT    ($009E)	rollover_DE_from_0x9000_to_0x8000();
1221: 57 80              OFFI    A,$80
1223: D9                 JR      $123D
1224: 13                 DCX     BC
1225: EA = 0x0000;
1228: 74 FD              DEQ     EA,BC
122A: EB                 JR      $1216
122B: 05 12 FD           ANIW    VV:12,$FD
122E: 55 12 10           OFFIW   VV:12,$10
1231: goto 123D
1232: 70 2F 3B 99        LDED    $993B
1236: 40 0B 19           CALL    $190B
1239: D4                 JR      $124E
123A: 14 00 00           LXI     BC,$0000
123D: 70 3F 41 99        LHLD    $9941
1241: EA = HL;
1242: 74 E5              DSUB    EA,BC
1244: HL = EA;
1245: 70 3E 43 99        SHLD    $9943
1249: 70 1E 41 99        SBCD    $9941
124D: return 1;
124E: 34 3F 99           LXI     HL,$993F
1251: EA = [HL];
1253: 70 1F 41 99        LBCD    $9941
1257: 74 C5              DADD    EA,BC
1259: 48 93              STEAX   (HL)
125B: return 0;
125C: 70 2F 41 99        LDED    $9941
1260: EA = 0x0000;
1263: 74 EE              DNE     EA,DE
1265: return 0;
1266: 23                 DCX     DE
1267: 70 2E 41 99        SDED    $9941
126B: 40 27 21           CALL    $2127
126E: 00                 NOP     
126F: EA = 0x0000;
1272: EAH = A;
1273: 5B 12              BIT     3,VV:12
1275: C7                 JR      $127D
1276: push(EA);
1277: 40 27 21           CALL    $2127
127A: 00                 NOP     
127B: EA = pop();
127C: EAL = A;
127D: 34 25 99           LXI     HL,$9925
1280: 48 93              STEAX   (HL)
1282: return 1;
1283: 8E                 CALT    ($009C)
1284: 1F                 MOV     L,A
1285: push(HL);
1286: 9E                 CALT    ($00BC)
1287: HL = pop();
1288: 1E                 MOV     H,A
1289: EA = 0x0000;
128C: 74 EF              DNE     EA,HL
128E: return 0;
128F: 70 3E 41 99        SHLD    $9941
1293: return 1;
1294: 34 43 99           LXI     HL,$9943
1297: EA = [HL];
1299: 40 96 11           CALL    $1196
129C: 34 43 99           LXI     HL,$9943
129F: EA = [HL];
12A1: 01 22              LDAW    VV:22
12A3: 84                 CALT    ($0088)
12A4: 70 3F 03 99        LHLD    $9903
12A8: EA += HL;
12AA: BC = EA;
12AB: 70 1E 0B 99        SBCD    $990B
12AF: 34 41 99           LXI     HL,$9941
12B2: EA = [HL];
12B4: 55 12 08           OFFIW   VV:12,$08
12B7: 48 A4              DSLL    EA
12B9: BC = EA;
12BA: 13                 DCX     BC
12BB: 70 2F 13 99        LDED    $9913
12BF: EA = DE;
12C0: 74 C5              DADD    EA,BC
12C2: DE = EA;
12C3: 14 00 90           LXI     BC,$9000
12C6: 74 B5              DSUBNB  EA,BC
12C8: C6                 JR      $12CF
12C9: 14 00 80           LXI     BC,$8000
12CC: 74 C5              DADD    EA,BC
12CE: DE = EA;
12CF: 14 00 00           LXI     BC,$0000
12D2: 5B 12              BIT     3,VV:12
12D4: C7                 JR      $12DC
12D5: 2E                 LDAX    (DE-)
12D6: rollover_DE_from_0x7fff_to_0x8fff();
12D9: 57 80              OFFI    A,$80
12DB: C9                 JR      $12E5
12DC: 2E                 LDAX    (DE-)
12DD: rollover_DE_from_0x7fff_to_0x8fff();
12E0: 77 00              EQI     A,$00
12E2: C2                 JR      $12E5
12E3: 12                 INX     BC
12E4: ED                 JR      $12D2
12E5: 34 41 99           LXI     HL,$9941
12E8: EA = [HL];
12EA: 74 E5              DSUB    EA,BC
12EC: 48 93              STEAX   (HL)
12EE: 34 3F 99           LXI     HL,$993F
12F1: EA = [HL];
12F3: 74 C5              DADD    EA,BC
12F5: 48 93              STEAX   (HL)
12F7: A5                 DMOV    EA,BC
12F8: 01 22              LDAW    VV:22
12FA: 84                 CALT    ($0088)
12FB: BC = EA;
12FC: 34 01 99           LXI     HL,$9901
12FF: EA = [HL];
1301: 74 E5              DSUB    EA,BC
1303: 34 0D 99           LXI     HL,$990D
1306: 48 93              STEAX   (HL)
1308: return 0;
1309: 00                 NOP     
130A: EAH = A;
130B: 60 05              illegal 
130D: 01 0C              LDAW    VV:0C
130F: 60 05              illegal 
1311: 00                 NOP     
1312: A = D;
1313: push(VA);
1314: 02                 INX     SP
1315: 01 06              LDAW    VV:06
1317: push(VA);
1318: 02                 INX     SP
1319: 01 12              LDAW    VV:12
131B: 10                 EXA     
131C: A = EAH;
131D: 01 14              LDAW    VV:14
131F: F5                 JR      $1315
1320: A = EAH;
1321: 01 10              LDAW    VV:10
1323: 2A                 LDAX    (DE)
1324: 07 B1              ANI     A,$B1
1326: 9E                 CALT    ($00BC)
1327: BC = pop();
1328: 77 00              EQI     A,$00
132A: 67 30              NEI     A,$30
132C: return 0;
132D: 77 01              EQI     A,$01
132F: 67 31              NEI     A,$31
1331: return 1;
1332: HL = pop();
1333: return 0;
1334: 8E                 CALT    ($009C)
1335: A &= 0x7f;
1337: return 0;
1338: 55 02 08           OFFIW   VV:02,$08
133B: 55 02 04           OFFIW   VV:02,$04
133E: C9                 JR      $1348
133F: 40 77 13           CALL    $1377
1342: 67 11              NEI     A,$11
1344: 15 02 04           ORIW    VV:02,$04
1347: return 0;
1348: 40 63 13           CALL    $1363
134B: C1                 JR      $134D
134C: return 1;
134D: 67 7F              NEI     A,$7F
134F: 54 7C 13           JMP     $137C
1352: 36 07              SUINB   A,$07
1354: return 0;
1355: 34 DA 13           LXI     HL,$13DA
1358: 48 25              SLL     A
135A: 60 47              ADD     L,A
135C: 74 56 00           ACI     H,$00
135F: EA = [HL];
1361: 48 28              JEA     
1363: 40 77 13           CALL    $1377
1366: 67 7F              NEI     A,$7F
1368: return 0;
1369: 37 20              LTI     A,$20
136B: return 1;
136C: 5D 04              BIT     5,VV:04
136E: return 0;
136F: 77 15              EQI     A,$15
1371: return 0;
1372: 69 10              MVI     A,$10
1374: 63 15              STAW    VV:15
1376: return 1;
1377: 5C 04              BIT     4,VV:04
1379: A &= 0x7f;
137B: return 0;
137C: 55 05 80           OFFIW   VV:05,$80
137F: return 0;
1380: 44 79 9A           LXI     EA,$9A79
1383: 70 3F 39 99        LHLD    $9939
1387: 74 EF              DNE     EA,HL
1389: return 0;
138A: HL--;
138B: A = [HL];
138C: 57 01              OFFI    A,$01
138E: return 0;
138F: HL--;
1390: HL--;
1391: 70 3E 39 99        SHLD    $9939
1395: 40 36 1D           CALL    $1D36
1398: DE = EA;
1399: 34 01 99           LXI     HL,$9901
139C: EA = [HL];
139E: 74 E6              DSUB    EA,DE
13A0: 48 93              STEAX   (HL)
13A2: return 0;
13A3: 9E                 CALT    ($00BC)
13A4: 67 19              NEI     A,$19
13A6: CC                 JR      $13B3
13A7: 77 7F              EQI     A,$7F
13A9: 27 1F              GTI     A,$1F
13AB: 4E 25              JRE     $13D2
13AD: 27 2F              GTI     A,$2F
13AF: goto 13B3
13B0: 27 5A              GTI     A,$5A
13B2: CF                 JR      $13C2
13B3: 34 62 14           LXI     HL,$1462
13B6: B = A;
13B7: A = [HL++];
13B8: 67 00              NEI     A,$00
13BA: return 0;
13BB: 48 85              LDEAX   (HL++)
13BD: 60 FA              EQA     A,B
13BF: F7                 JR      $13B7
13C0: 48 28              JEA     
13C2: 66 30              SUI     A,$30
13C4: 34 0C 14           LXI     HL,$140C
13C7: 48 25              SLL     A
13C9: 60 47              ADD     L,A
13CB: 74 56 00           ACI     H,$00
13CE: EA = [HL];
13D0: 48 28              JEA     
13D2: A = VV[0x15];
13D4: 40 63 13           CALL    $1363
13D7: 4F 74              JRE     $134D
13D9: return 0;
13DA: 57 10              OFFI    A,$10
13DC: 54 16 8C           JMP     $8C16
13DF: EAH = A;
13E0: F7                 JR      $13D8
13E1: 16 2C              XRI     A,$2C
13E3: EAL = A;
13E4: 02                 INX     SP
13E5: 17 FD              ORI     A,$FD
13E7: 16 B6              XRI     A,$B6
13E9: 15 F8 14           ORIW    VV:F8,$14
13EC: DE = EA;
13ED: 14 B6 14           LXI     BC,$14B6
13F0: goto 13ED
13F1: 14 29 17           LXI     BC,$1729
13F4: EC                 JR      $13E1
13F5: 14 B6 14           LXI     BC,$14B6
13F8: DE = EA;
13F9: 14 B6 14           LXI     BC,$14B6
13FC: C5                 JR      $1402
13FD: 16 B6              XRI     A,$B6
13FF: 14 B6 14           LXI     BC,$14B6
1402: HL = pop();
1403: 13                 DCX     BC
1404: DE = EA;
1405: 14 B6 14           LXI     BC,$14B6
1408: DE = EA;
1409: 14 B6 14           LXI     BC,$14B6
140C: 43                 INR     C
140D: 17 45              ORI     A,$45
140F: 17 47              ORI     A,$47
1411: 17 4A              ORI     A,$4A
1413: 17 BD              ORI     A,$BD
1415: 15 C1 15           ORIW    VV:C1,$15
1418: D1                 JR      $142A
1419: 16 D5              XRI     A,$D5
141B: 16 4C              XRI     A,$4C
141D: 17 50              ORI     A,$50
141F: 17 B1              ORI     A,$B1
1421: EAL = A;
1422: DE = EA;
1423: 14 75 78           LXI     BC,$7875
1426: DE = EA;
1427: 14 B6 14           LXI     BC,$14B6
142A: push(BC);
142B: 10                 EXA     
142C: D9                 JR      $1446
142D: 16 37              XRI     A,$37
142F: 17 C9              ORI     A,$C9
1431: 17 6C              ORI     A,$6C
1433: 17 CC              ORI     A,$CC
1435: 17 00              ORI     A,$00
1437: 15 04 15           ORIW    VV:04,$15
143A: A = EAH;
143B: 15 0C 15           ORIW    VV:0C,$15
143E: BC = EA;
143F: 14 54 17           LXI     BC,$1754
1442: CE                 JR      $1451
1443: 10                 EXA     
1444: D1                 JR      $1456
1445: 10                 EXA     
1446: 10                 EXA     
1447: 15 A1 17           ORIW    VV:A1,$17
144A: DE = EA;
144B: 17 14              ORI     A,$14
144D: 15 89 16           ORIW    VV:89,$16
1450: 30 17              DCRW    VV:17
1452: EAH = A;
1453: 15 25 15           ORIW    VV:25,$15
1456: EAH = A;
1457: 17 B6              ORI     A,$B6
1459: 14 A5 15           LXI     BC,$15A5
145C: DE = EA;
145D: 14 D4 10           LXI     BC,$10D4
1460: D7                 JR      $1478
1461: 10                 EXA     
1462: EAL = A;
1463: 5D 17              BIT     5,VV:17
1465: 20 B5              INRW    VV:B5
1467: 14 21 B7           LXI     BC,$B721
146A: 14 24 B4           LXI     BC,$B424
146D: 14 25 E9           LXI     BC,$E925
1470: EAL = A;
1471: 26 F3              ADINC   A,$F3
1473: EAL = A;
1474: 2A                 LDAX    (DE)
1475: DA                 JR      $1490
1476: 10                 EXA     
1477: A = [HL++];
1478: D1                 JR      $148A
1479: 15 2F BF           ORIW    VV:2F,$BF
147C: 17 5C              ORI     A,$5C
147E: push(EA);
147F: 14 5E E4           LXI     BC,$E45E
1482: 10                 EXA     
1483: 61                 DAA     
1484: A = D;
1485: 16 62              XRI     A,$62
1487: DA                 JR      $14A2
1488: 17 65              ORI     A,$65
148A: EAL = A;
148B: EAH = A;
148C: 66 4F              SUI     A,$4F
148E: EAH = A;
148F: 69 B5              MVI     A,$B5
1491: 14 6A B5           LXI     BC,$B56A
1494: 14 6B C5           LXI     BC,$C56B
1497: 15 6C AB           ORIW    VV:6C,$AB
149A: 16 6D              XRI     A,$6D
149C: BC = EA;
149D: 14 70 B5           LXI     BC,$B570
14A0: 14 72 B5           LXI     BC,$B572
14A3: 14 73 34           LXI     BC,$3473
14A6: 16 74              XRI     A,$74
14A8: 02                 INX     SP
14A9: 16 77              XRI     A,$77
14AB: BC = EA;
14AC: 14 78 29           LXI     BC,$2978
14AF: 15 7C DA           ORIW    VV:7C,$DA
14B2: 7C 00              CALF    $0C00
14B4: 8E                 CALT    ($009C)
14B5: 8E                 CALT    ($009C)
14B6: return 0;
14B7: 8E                 CALT    ($009C)
14B8: 05 0A 43           ANIW    VV:0A,$43
14BB: 05 0B 7B           ANIW    VV:0B,$7B
14BE: 05 02 FD           ANIW    VV:02,$FD
14C1: 05 02 FE           ANIW    VV:02,$FE
14C4: 57 01              OFFI    A,$01
14C6: 15 0A 80           ORIW    VV:0A,$80
14C9: 57 04              OFFI    A,$04
14CB: 15 0B 04           ORIW    VV:0B,$04
14CE: 57 08              OFFI    A,$08
14D0: 15 0A 04           ORIW    VV:0A,$04
14D3: 57 10              OFFI    A,$10
14D5: 15 0A 20           ORIW    VV:0A,$20
14D8: 47 20              ONI     A,$20
14DA: C6                 JR      $14E1
14DB: 15 02 01           ORIW    VV:02,$01
14DE: 15 0A 08           ORIW    VV:0A,$08
14E1: 57 40              OFFI    A,$40
14E3: 15 0B 80           ORIW    VV:0B,$80
14E6: 57 80              OFFI    A,$80
14E8: 15 0A 10           ORIW    VV:0A,$10
14EB: DB                 JR      $1507
14EC: 58 02              BIT     0,VV:02
14EE: 59 02              BIT     1,VV:02
14F0: D6                 JR      $1507
14F1: 05 02 FD           ANIW    VV:02,$FD
14F4: 05 0A F7           ANIW    VV:0A,$F7
14F7: CF                 JR      $1507
14F8: 15 0B 04           ORIW    VV:0B,$04
14FB: goto 1507
14FC: 05 0B FB           ANIW    VV:0B,$FB
14FF: C7                 JR      $1507
1500: 15 0A 04           ORIW    VV:0A,$04
1503: goto 1507
1504: 05 0A FB           ANIW    VV:0A,$FB
1507: DC                 JR      $1524
1508: 15 0A 20           ORIW    VV:0A,$20
150B: D8                 JR      $1524
150C: 05 0A DF           ANIW    VV:0A,$DF
150F: D4                 JR      $1524
1510: 15 0A 80           ORIW    VV:0A,$80
1513: D0                 JR      $1524
1514: 05 0A 7F           ANIW    VV:0A,$7F
1517: CC                 JR      $1524
1518: 82                 CALT    ($0084)
1519: goto 151E
151A: 05 0B DF           ANIW    VV:0B,$DF
151D: goto 1521
151E: 15 0B 20           ORIW    VV:0B,$20
1521: 15 0B 40           ORIW    VV:0B,$40
1524: D1                 JR      $1536
1525: 05 0B BF           ANIW    VV:0B,$BF
1528: CD                 JR      $1536
1529: 82                 CALT    ($0084)
152A: goto 152F
152B: 15 0B 02           ORIW    VV:0B,$02
152E: C7                 JR      $1536
152F: 05 0B FD           ANIW    VV:0B,$FD
1532: goto 1536
1533: 15 07 80           ORIW    VV:07,$80
1536: 01 07              LDAW    VV:07
1538: 70 1F 0A 98        LBCD    $980A
153C: A &= 0xbf; /* 1011 1111 */
153E: 57 80              OFFI    A,$80
1540: 17 40              ORI     A,$40
1542: 74 4A 02           ONI     B,$02
1545: 74 5B 04           OFFI    C,$04
1548: 74 0A FB           ANI     B,$FB
154B: 74 4B A4           ONI     C,$A4
154E: 74 5A 46           OFFI    B,$46
1551: C5                 JR      $1557
1552: 47 20              ONI     A,$20
1554: 55 05 80           OFFIW   VV:05,$80
1557: A &= 0xbf; /* 1011 1111 */
1559: 45 07 40           ONIW    VV:07,$40
155C: C5                 JR      $1562
155D: 47 40              ONI     A,$40
155F: 4E 38              JRE     $1599
1561: goto 1566
1562: 57 40              OFFI    A,$40
1564: 4E 33              JRE     $1599
1566: 74 5A 06           OFFI    B,$06
1569: goto 156E
156A: 74 4B 04           ONI     C,$04
156D: C9                 JR      $1577
156E: 45 08 04           ONIW    VV:08,$04
1571: 55 09 06           OFFIW   VV:09,$06
1574: goto 157F
1575: 4E 22              JRE     $1599
1577: 55 08 04           OFFIW   VV:08,$04
157A: DE                 JR      $1599
157B: 55 09 06           OFFIW   VV:09,$06
157E: DA                 JR      $1599
157F: 74 4A 02           ONI     B,$02
1582: goto 1587
1583: 59 09              BIT     1,VV:09
1585: D3                 JR      $1599
1586: D7                 JR      $159E
1587: 55 09 02           OFFIW   VV:09,$02
158A: CE                 JR      $1599
158B: 74 5B 04           OFFI    C,$04
158E: C7                 JR      $1596
158F: 74 5A 04           OFFI    B,$04
1592: 5A 08              BIT     2,VV:08
1594: C9                 JR      $159E
1595: goto 1599
1596: 5A 09              BIT     2,VV:09
1598: C5                 JR      $159E
1599: push(VA);
159A: push(BC);
159B: 8B                 CALT    ($0096)
159C: BC = pop();
159D: VA = pop();
159E: 63 07              STAW    VV:07
15A0: 70 1E 08 98        SBCD    $9808
15A4: return 0;
15A5: 82                 CALT    ($0084)
15A6: C7                 JR      $15AE
15A7: 15 02 01           ORIW    VV:02,$01
15AA: 15 0A 08           ORIW    VV:0A,$08
15AD: C6                 JR      $15B4
15AE: 05 02 FC           ANIW    VV:02,$FC
15B1: 05 0A F7           ANIW    VV:0A,$F7
15B4: 4F 80              JRE     $1536
15B6: 15 02 02           ORIW    VV:02,$02
15B9: 14 08 00           LXI     BC,$0008
15BC: CF                 JR      $15CC
15BD: 14 00 80           LXI     BC,$8000
15C0: goto 15CC
15C1: 14 00 80           LXI     BC,$8000
15C4: goto 15D0
15C5: 14 01 00           LXI     BC,$0001
15C8: goto 15D4
15C9: 14 01 00           LXI     BC,$0001
15CC: C9                 JR      $15D6
15CD: 14 01 00           LXI     BC,$0001
15D0: D8                 JR      $15E9
15D1: 14 10 00           LXI     BC,$0010
15D4: 82                 CALT    ($0084)
15D5: D3                 JR      $15E9
15D6: 34 0A 98           LXI     HL,$980A
15D9: EA = [HL];
15DB: 74 9D              DOR     EA,BC
15DD: 48 93              STEAX   (HL)
15DF: 34 08 98           LXI     HL,$9808
15E2: EA = [HL];
15E4: 74 9D              DOR     EA,BC
15E6: 48 93              STEAX   (HL)
15E8: return 0;
15E9: 44 FF FF           LXI     EA,$FFFF
15EC: 74 95              DXR     EA,BC
15EE: BC = EA;
15EF: 34 0A 98           LXI     HL,$980A
15F2: EA = [HL];
15F4: 74 8D              DAN     EA,BC
15F6: 48 93              STEAX   (HL)
15F8: 34 08 98           LXI     HL,$9808
15FB: EA = [HL];
15FD: 74 8D              DAN     EA,BC
15FF: 48 93              STEAX   (HL)
1601: return 0;
1602: 82                 CALT    ($0084)
1603: goto 1608
1604: 15 04 20           ORIW    VV:04,$20
1607: return 0;
1608: 05 04 DF           ANIW    VV:04,$DF
160B: return 0;
160C: 8E                 CALT    ($009C)
160D: A &= 0x0f;
160F: 37 04              LTI     A,$04
1611: return 0;
1612: 6B 00              MVI     C,$00
1614: 67 01              NEI     A,$01
1616: 6B 10              MVI     C,$10
1618: 67 02              NEI     A,$02
161A: 6B 20              MVI     C,$20
161C: 67 03              NEI     A,$03
161E: 6B 80              MVI     C,$80
1620: 01 05              LDAW    VV:05
1622: 07 B0              ANI     A,$B0
1624: 60 EB              NEA     A,C
1626: return 0;
1627: push(BC);
1628: 86                 CALT    ($008C)
1629: BC = pop();
162A: 01 05              LDAW    VV:05
162C: 07 4F              ANI     A,$4F
162E: 60 9B              ORA     A,C
1630: 63 05              STAW    VV:05
1632: 4F 80              JRE     $15B4
1634: 82                 CALT    ($0084)
1635: goto 1641
1636: 55 07 20           OFFIW   VV:07,$20
1639: return 0;
163A: 40 4B 16           CALL    $164B
163D: 15 07 20           ORIW    VV:07,$20
1640: F1                 JR      $1632
1641: 5D 07              BIT     5,VV:07
1643: return 0;
1644: 40 4B 16           CALL    $164B
1647: 05 07 DF           ANIW    VV:07,$DF
164A: E7                 JR      $1632
164B: 55 08 04           OFFIW   VV:08,$04
164E: return 0;
164F: 45 09 06           ONIW    VV:09,$06
1652: 8B                 CALT    ($0096)
1653: return 0;
1654: 55 05 B0           OFFIW   VV:05,$B0
1657: return 0;
1658: 8B                 CALT    ($0096)
1659: 5F 03              BIT     7,VV:03
165B: CF                 JR      $166B
165C: 05 03 7F           ANIW    VV:03,$7F
165F: 70 3F 55 99        LHLD    $9955
1663: EA = HL;
1664: 70 3F 01 99        LHLD    $9901
1668: 74 AF              DGT     EA,HL
166A: goto 1675
166B: 97                 CALT    ($00AE)
166C: DE = EA;
166D: 34 01 99           LXI     HL,$9901
1670: EA = [HL];
1672: 74 B6              DSUBNB  EA,DE
1674: return 0;
1675: 70 1F 05 99        LBCD    $9905
1679: 74 BD              DLT     EA,BC
167B: C1                 JR      $167D
167C: return 0;
167D: HL = EA;
167E: 85                 CALT    ($008A)
167F: return 0;
1680: 70 1F 08 98        LBCD    $9808
1684: 40 C9 22           CALL    $22C9
1687: HL = EA;
1688: return 0;
1689: 40 82 18           CALL    $1882
168C: return 0;
168D: 70 2F 05 99        LDED    $9905
1691: 74 B6              DSUBNB  EA,DE
1693: return 0;
1694: 24 1F 01           LXI     DE,$011F
1697: 74 AE              DGT     EA,DE
1699: return 0;
169A: EA = HL;
169B: 24 81 4C           LXI     DE,$4C81
169E: 5B 4F              BIT     3,VV:4F
16A0: 24 01 2D           LXI     DE,$2D01
16A3: 74 BE              DLT     EA,DE
16A5: return 0;
16A6: 70 3E 3D 99        SHLD    $993D
16AA: D9                 JR      $16C4
16AB: 40 82 18           CALL    $1882
16AE: return 0;
16AF: 70 2F 3D 99        LDED    $993D
16B3: EA = DE;
16B4: 74 B7              DSUBNB  EA,HL
16B6: return 0;
16B7: 24 1F 01           LXI     DE,$011F
16BA: 74 AE              DGT     EA,DE
16BC: return 0;
16BD: 70 3E 05 99        SHLD    $9905
16C1: 05 03 EF           ANIW    VV:03,$EF
16C4: goto 16C9
16C5: 55 05 80           OFFIW   VV:05,$80
16C8: return 0;
16C9: 40 0B 17           CALL    $170B
16CC: 05 11 FE           ANIW    VV:11,$FE
16CF: 9D                 CALT    ($00BA)
16D0: return 0;
16D1: 15 04 10           ORIW    VV:04,$10
16D4: return 0;
16D5: 05 04 EF           ANIW    VV:04,$EF
16D8: return 0;
16D9: 40 75 78           CALL    $7875
16DC: 40 68 2B           CALL    $2B68
func_7bb1();
16E2: 44 00 98           LXI     EA,$9800
16E5: 14 0D 00           LXI     BC,$000D
16E8: 9C                 CALT    ($00B8)
16E9: 44 57 98           LXI     EA,$9857
16EC: 14 B2 00           LXI     BC,$00B2
16EF: 9C                 CALT    ($00B8)
16F0: 15 14 20           ORIW    VV:14,$20
16F3: EA = pop();
16F4: 54 95 01           JMP     $0195
16F7: 98                 CALT    ($00B0)
16F8: 83                 CALT    ($0086)
16F9: 40 82 2B           CALL    $2B82
16FC: goto 1707
16FD: 98                 CALT    ($00B0)
16FE: 5F 02              BIT     7,VV:02
1700: C6                 JR      $1707
1701: F6                 JR      $16F8
1702: 98                 CALT    ($00B0)
1703: 40 6F 2B           CALL    $2B6F
1706: 83                 CALT    ($0086)
1707: 55 11 01           OFFIW   VV:11,$01
170A: return 0;
170B: 70 3F 05 99        LHLD    $9905
170F: 70 3E 01 99        SHLD    $9901
1713: 70 3E 03 99        SHLD    $9903
1717: return 0;
1718: 82                 CALT    ($0084)
1719: C7                 JR      $1721
171A: 5B 00              BIT     3,VV:00
171C: 8B                 CALT    ($0096)
171D: 15 00 08           ORIW    VV:00,$08
1720: return 0;
1721: 55 00 08           OFFIW   VV:00,$08
1724: 8B                 CALT    ($0096)
1725: 05 00 F7           ANIW    VV:00,$F7
1728: return 0;
1729: 5B 02              BIT     3,VV:02
172B: return 0;
172C: 05 02 FB           ANIW    VV:02,$FB
172F: return 0;
1730: 9E                 CALT    ($00BC)
1731: 37 0D              LTI     A,$0D
1733: return 0;
1734: 63 0C              STAW    VV:0C
1736: return 0;
1737: 9E                 CALT    ($00BC)
1738: 37 56              LTI     A,$56
173A: return 0;
173B: 6A 03              MVI     B,$03
173D: 48 2E              MUL     B
173F: A = EAL;
1740: 63 2C              STAW    VV:2C
1742: return 0;
1743: 69 1B              MVI     A,$1B
1745: 69 15              MVI     A,$15
1747: 69 24              MVI     A,$24
1749: F6                 JR      $1740
174A: 8E                 CALT    ($009C)
174B: F4                 JR      $1740
174C: 15 01 04           ORIW    VV:01,$04
174F: return 0;
1750: 05 01 FB           ANIW    VV:01,$FB
1753: return 0;
1754: 8B                 CALT    ($0096)
1755: 8E                 CALT    ($009C)
1756: 14 00 00           LXI     BC,$0000
1759: C = A;
175A: 54 88 2B           JMP     $2B88
175D: 9E                 CALT    ($00BC)
175E: 67 30              NEI     A,$30
1760: C7                 JR      $1768
1761: 77 34              EQI     A,$34
1763: return 0;
1764: 15 02 20           ORIW    VV:02,$20
1767: return 0;
1768: 05 02 DF           ANIW    VV:02,$DF
176B: return 0;
176C: 9E                 CALT    ($00BC)
176D: 70 6A 2C 98        MOV     B,($982C)
1771: 75 15 00           EQIW    VV:15,$00
1774: C6                 JR      $177B
1775: 8E                 CALT    ($009C)
1776: 37 17              LTI     A,$17
1778: return 0;
1779: 6A D8              MVI     B,$D8
177B: 48 2E              MUL     B
177D: HL = 0x0000;
1780: 74 EF              DNE     EA,HL
1782: return 0;
1783: 40 F3 32           CALL    $32F3
1786: 48 93              STEAX   (HL)
1788: 34 31 99           LXI     HL,$9931
178B: EA = [HL];
178D: 34 2F 99           LXI     HL,$992F
1790: 48 93              STEAX   (HL)
1792: HL = 0x0000;
1795: 70 3E 2B 99        SHLD    $992B
1799: 70 3E 07 99        SHLD    $9907
179D: 71 0D 00           MVIW    VV:0D,$00
17A0: return 0;
17A1: 9E                 CALT    ($00BC)
17A2: 67 00              NEI     A,$00
17A4: return 0;
17A5: B = A;
17A6: 01 2C              LDAW    VV:2C
17A8: 48 2E              MUL     B
17AA: BC = EA;
17AB: 34 31 99           LXI     HL,$9931
17AE: EA = [HL];
17B0: 74 FD              DEQ     EA,BC
17B2: 74 B5              DSUBNB  EA,BC
17B4: return 0;
17B5: goto 17B9
17B6: 44 FF FF           LXI     EA,$FFFF
17B9: 34 2F 99           LXI     HL,$992F
17BC: 48 93              STEAX   (HL)
17BE: return 0;
17BF: 9E                 CALT    ($00BC)
17C0: 37 08              LTI     A,$08
17C2: return 0;
17C3: 15 03 20           ORIW    VV:03,$20
17C6: 63 0E              STAW    VV:0E
17C8: return 0;
17C9: 69 00              MVI     A,$00
17CB: D2                 JR      $17DE
17CC: 15 03 30           ORIW    VV:03,$30
17CF: 97                 CALT    ($00AE)
17D0: 34 57 98           LXI     HL,$9857
17D3: 48 95              STEAX   (HL++)
17D5: 14 20 00           LXI     BC,$0020
17D8: 4E 20              JRE     $17FA
17DA: 9E                 CALT    ($00BC)
17DB: 37 08              LTI     A,$08
17DD: return 0;
17DE: 6A 11              MVI     B,$11
17E0: 48 2E              MUL     B
17E2: 15 03 20           ORIW    VV:03,$20
17E5: 40 C0 00           CALL    $00C0
17E8: 74 98 0D           ORAW    VV:0D
17EB: 63 0D              STAW    VV:0D
17ED: 34 79 98           LXI     HL,$9879
17F0: EA += HL;
17F2: HL = EA;
17F3: 01 2C              LDAW    VV:2C
17F5: 3D                 STAX    (HL+)
17F6: 6B 10              MVI     C,$10
17F8: 6A 00              MVI     B,$00
17FA: push(BC);
17FB: push(HL);
17FC: 8E                 CALT    ($009C)
17FD: HL = pop();
17FE: BC = pop();
17FF: 53                 DCR     C
1800: C1                 JR      $1802
1801: CF                 JR      $1811
1802: 67 00              NEI     A,$00
1804: C6                 JR      $180B
1805: 60 AA              GTA     A,B
1807: goto 180B
1808: 3D                 STAX    (HL+)
1809: B = A;
180A: EF                 JR      $17FA
180B: 4B 00              MVIX    HL,$00
180D: return 0;
180E: push(BC);
180F: 8E                 CALT    ($009C)
1810: BC = pop();
1811: 67 00              NEI     A,$00
1813: return 0;
1814: 60 AA              GTA     A,B
1816: return 0;

1817: B = A;
1818: F5                 JR      $180E
1819: 82                 CALT    ($0084)
181A: D7                 JR      $1832
181B: 9E                 CALT    ($00BC)
181C: B = A;
181D: 01 2C              LDAW    VV:2C
181F: 48 2E              MUL     B
1821: BC = EA;
1822: 40 F3 32           CALL    $32F3
1825: EA = [HL];
1827: 74 AD              DGT     EA,BC
1829: return 0;
182A: 70 1E 07 99        SBCD    $9907
182E: 05 03 DF           ANIW    VV:03,$DF
1831: return 0;
1832: 9E                 CALT    ($00BC)
1833: push(VA);
1834: 97                 CALT    ($00AE)
1835: VA = pop();
1836: 84                 CALT    ($0088)
1837: BC = EA;
1838: 24 1F 01           LXI     DE,$011F
183B: 74 AE              DGT     EA,DE
183D: return 0;
183E: 24 F5 0B           LXI     DE,$0BF5
1841: 74 BE              DLT     EA,DE
1843: return 0;
1844: 70 1E 09 99        SBCD    $9909
1848: 05 03 DF           ANIW    VV:03,$DF
184B: 15 03 10           ORIW    VV:03,$10
184E: return 0;
184F: 82                 CALT    ($0084)
1850: D1                 JR      $1862
1851: 8B                 CALT    ($0096)
1852: 9E                 CALT    ($00BC)
1853: B = A;
1854: 01 2C              LDAW    VV:2C
1856: 48 2E              MUL     B
1858: 14 00 00           LXI     BC,$0000
185B: 74 ED              DNE     EA,BC
185D: return 0;
185E: BC = EA;
185F: 54 88 2B           JMP     $2B88
1862: 55 05 80           OFFIW   VV:05,$80
1865: return 0;
1866: 9E                 CALT    ($00BC)
1867: 67 00              NEI     A,$00
1869: return 0;
186A: push(VA);
186B: 8B                 CALT    ($0096)
186C: 97                 CALT    ($00AE)
186D: VA = pop();
186E: 84                 CALT    ($0088)
186F: 70 2F 01 99        LDED    $9901
1873: 74 C6              DADD    EA,DE
1875: 70 2F 3D 99        LDED    $993D
1879: 74 BE              DLT     EA,DE
187B: 54 F7 16           JMP     $16F7
187E: HL = EA;
187F: 54 0F 17           JMP     $170F
1882: 97                 CALT    ($00AE)
1883: push(EA);
1884: 8E                 CALT    ($009C)
1885: EA = pop();
1886: 84                 CALT    ($0088)
1887: 48 1A              SKN     CY
1889: return 0;
188A: HL = EA;
188B: return 1;
188C: 55 05 80           OFFIW   VV:05,$80
188F: return 0;
1890: 5C 03              BIT     4,VV:03
1892: 4E 54              JRE     $18E8
1894: 5D 03              BIT     5,VV:03
1896: 4E 2D              JRE     $18C5
1898: 34 57 98           LXI     HL,$9857
189B: B = 0x01;
189D: 42                 INR     B
189E: 74 3A 23           LTI     B,$23
18A1: return 0;
18A2: AD                 LDAX    (HL+B)
18A3: 67 00              NEI     A,$00
18A5: return 0;
18A6: push(BC);
18A7: EA = [HL];
18A9: 84                 CALT    ($0088)
18AA: BC = pop();
18AB: 48 1A              SKN     CY
18AD: return 0;
18AE: 70 2F 05 99        LDED    $9905
18B2: 74 C6              DADD    EA,DE
18B4: 70 2F 3D 99        LDED    $993D
18B8: 74 BE              DLT     EA,DE
18BA: return 0;
18BB: 70 2F 01 99        LDED    $9901
18BF: 74 AE              DGT     EA,DE
18C1: 4F DA              JRE     $189D
18C3: 4E 29              JRE     $18EE
18C5: 70 1F 09 99        LBCD    $9909
18C9: EA = 0x0000;
18CC: 74 ED              DNE     EA,BC
18CE: return 0;
18CF: 34 05 99           LXI     HL,$9905
18D2: EA = [HL];
18D4: 74 C5              DADD    EA,BC
18D6: 70 2F 3D 99        LDED    $993D
18DA: 22                 INX     DE
18DB: 74 BE              DLT     EA,DE
18DD: 54 F7 16           JMP     $16F7
18E0: 70 2F 01 99        LDED    $9901
18E4: 74 AE              DGT     EA,DE
18E6: ED                 JR      $18D4
18E7: C6                 JR      $18EE
18E8: 97                 CALT    ($00AE)
18E9: 69 08              MVI     A,$08
18EB: 84                 CALT    ($0088)
18EC: BC = EA;
18ED: E1                 JR      $18CF
18EE: 05 03 7F           ANIW    VV:03,$7F
18F1: HL = EA;
18F2: 70 1F 03 99        LBCD    $9903
18F6: A5                 DMOV    EA,BC
18F7: 74 EE              DNE     EA,DE
18F9: CF                 JR      $1909
18FA: EA = HL;
18FB: 74 E6              DSUB    EA,DE
18FD: DE = EA;
18FE: 70 2E 3B 99        SDED    $993B
1902: 40 0B 19           CALL    $190B
1905: return 0;
1906: push(HL);
1907: 8B                 CALT    ($0096)
1908: HL = pop();
1909: 85                 CALT    ($008A)
190A: return 0;
190B: 5E 07              BIT     6,VV:07
190D: CC                 JR      $191A
190E: EA = DE;
190F: 69 10              MVI     A,$10
1911: 48 3D              DIV     A
1913: 67 00              NEI     A,$00
1915: D3                 JR      $1929
1916: 55 11 20           OFFIW   VV:11,$20
1919: return 1;
191A: EA = DE;
191B: 5A 09              BIT     2,VV:09
191D: 69 0C              MVI     A,$0C
191F: 69 06              MVI     A,$06
1921: 48 3D              DIV     A
1923: 77 00              EQI     A,$00
1925: return 1;
1926: 05 07 BF           ANIW    VV:07,$BF
1929: 54 91 22           JMP     $2291
192C: 98                 CALT    ($00B0)
192D: 83                 CALT    ($0086)
192E: 40 0B 17           CALL    $170B
1931: 5D 03              BIT     5,VV:03
1933: 4E 44              JRE     $1979
1935: 01 0E              LDAW    VV:0E
1937: 40 C0 00           CALL    $00C0
193A: 74 C8 0D           ONAW    VV:0D
193D: 4E 44              JRE     $1983
193F: 01 0E              LDAW    VV:0E
1941: 6A 11              MVI     B,$11
1943: 48 2E              MUL     B
1945: 34 79 98           LXI     HL,$9879
1948: EA += HL;
194A: HL = EA;
194B: 70 2F 2B 99        LDED    $992B
194F: A = [HL++];
1950: B = A;
1951: 6B 10              MVI     C,$10
1953: 53                 DCR     C
1954: C1                 JR      $1956
1955: DA                 JR      $1970
1956: A = [HL++];
1957: 67 00              NEI     A,$00
1959: D6                 JR      $1970
195A: 48 2E              MUL     B
195C: 74 AE              DGT     EA,DE
195E: F4                 JR      $1953
195F: 40 EC 32           CALL    $32EC
1962: C7                 JR      $196A
1963: 70 1F 2F 99        LBCD    $992F
1967: 74 BD              DLT     EA,BC
1969: CC                 JR      $1976
196A: 74 E6              DSUB    EA,DE
196C: BC = EA;
196D: 54 88 2B           JMP     $2B88
1970: 74 6B 0F           NEI     C,$0F
1973: 54 FD 16           JMP     $16FD
1976: 54 6F 2B           JMP     $2B6F
1979: 70 1F 07 99        LBCD    $9907
197D: A5                 DMOV    EA,BC
197E: 14 00 00           LXI     BC,$0000
1981: 74 ED              DNE     EA,BC
1983: 54 82 2B           JMP     $2B82
1986: BC = EA;
1987: push(EA);
1988: 40 F3 32           CALL    $32F3
198B: EA = [HL];
198D: DE = EA;
198E: EA = pop();
198F: 74 BE              DLT     EA,DE
1991: E4                 JR      $1976
1992: 70 2F 2B 99        LDED    $992B
1996: 74 EE              DNE     EA,DE
1998: goto 199D
1999: 74 BE              DLT     EA,DE
199B: 4F CD              JRE     $196A
199D: 74 C5              DADD    EA,BC
199F: E7                 JR      $1987

19A0: HL = 0xFF00;
19A3: B  = 0x0c;
19A5: 40 DD 19           CALL    $19DD
19A8: HL = 0xFF48;
19AB: B  = 0x1d;
19AD: 40 DD 19           CALL    $19DD
19B0: return 0;

19B1: 8B                 CALT    ($0096)
19B2: 9E                 CALT    ($00BC)
19B3: push(VA);
19B4: 9E                 CALT    ($00BC)
19B5: push(VA);
19B6: 9E                 CALT    ($00BC)
19B7: C = A;
19B8: VA = pop();
19B9: B = A;
19BA: VA = pop();
19BB: 51                 DCR     A
19BC: return 0;
19BD: 53                 DCR     C
19BE: return 0;
19BF: 74 3A 02           LTI     B,$02
19C2: return 0;
19C3: 05 04 F7           ANIW    VV:04,$F7
19C6: 74 6A 01           NEI     B,$01
19C9: 15 04 08           ORIW    VV:04,$08
19CC: 59 09              BIT     1,VV:09
19CE: 69 0C              MVI     A,$0C
19D0: 69 1D              MVI     A,$1D
19D2: B = A;
19D3: 59 09              BIT     1,VV:09
19D5: 34 00 FF           LXI     HL,$FF00
19D8: 34 48 FF           LXI     HL,$FF48
19DB: 69 FF              MVI     A,$FF
19DD: 69 00              MVI     A,$00
19DF: 6B 05              MVI     C,$05
19E1: 3B                 STAX    (HL)
19E2: EA = HL;
19E3: 70 42              EADD    EA,B
19E5: HL = EA;
19E6: 53                 DCR     C
19E7: F9                 JR      $19E1
19E8: return 0;
19E9: 82                 CALT    ($0084)
19EA: goto 19EF
19EB: 15 04 80           ORIW    VV:04,$80
19EE: return 0;
19EF: 05 04 7F           ANIW    VV:04,$7F
19F2: return 0;
19F3: 8B                 CALT    ($0096)
19F4: 9E                 CALT    ($00BC)
19F5: push(VA);
19F6: 8E                 CALT    ($009C)
19F7: push(VA);
19F8: 8E                 CALT    ($009C)
19F9: C = A;
19FA: VA = pop();
19FB: B = A;
19FC: VA = pop();
19FD: 77 00              EQI     A,$00
19FF: return 0;
1A00: A = C;
1A01: 74 32 3A           SUINB   B,$3A
1A04: DA                 JR      $1A1F
1A05: 37 40              LTI     A,$40
1A07: D7                 JR      $1A1F
1A08: 36 3A              SUINB   A,$3A
1A0A: D2                 JR      $1A1D
1A0B: 60 B2              SUBNB   A,B
1A0D: return 0;
1A0E: C = A;
1A0F: push(BC);
1A10: 59 09              BIT     1,VV:09
1A12: 40 42 1A           CALL    $1A42
1A15: 40 58 1A           CALL    $1A58
1A18: BC = pop();
1A19: 42                 INR     B
1A1A: 53                 DCR     C
1A1B: F3                 JR      $1A0F
1A1C: return 0;
1A1D: 46 3A              ADI     A,$3A
1A1F: 74 42 3A           ADI     B,$3A
1A22: 60 B2              SUBNB   A,B
1A24: return 0;
1A25: 59 09              BIT     1,VV:09
1A27: D2                 JR      $1A3A
1A28: C = A;
1A29: push(BC);
1A2A: 8E                 CALT    ($009C)
1A2B: 8E                 CALT    ($009C)
1A2C: push(VA);
1A2D: 8E                 CALT    ($009C)
1A2E: VA = pop();
1A2F: 6A 03              MVI     B,$03
1A31: 48 2E              MUL     B
1A33: 40 9B 11           CALL    $119B
1A36: BC = pop();
1A37: 53                 DCR     C
1A38: F0                 JR      $1A29
1A39: return 0;
1A3A: 41                 INR     A
1A3B: 6A 0C              MVI     B,$0C
1A3D: 48 2E              MUL     B
1A3F: 54 9B 11           JMP     $119B
1A42: 40 C2 1A           CALL    $1AC2
1A45: push(HL);
1A46: 8E                 CALT    ($009C)
1A47: 07 80              ANI     A,$80
1A49: 17 0B              ORI     A,$0B
1A4B: HL = pop();
1A4C: 3D                 STAX    (HL+)
1A4D: 6B 0A              MVI     C,$0A
1A4F: push(HL);
1A50: push(BC);
1A51: 8E                 CALT    ($009C)
1A52: BC = pop();
1A53: HL = pop();
1A54: 3D                 STAX    (HL+)
1A55: 53                 DCR     C
1A56: F8                 JR      $1A4F
1A57: return 1;
1A58: 40 C2 1A           CALL    $1AC2
1A5B: push(HL);
1A5C: 8E                 CALT    ($009C)
1A5D: 8E                 CALT    ($009C)
1A5E: push(VA);
1A5F: 8E                 CALT    ($009C)
1A60: VA = pop();
1A61: HL = pop();
1A62: 67 00              NEI     A,$00
1A64: return 0;
1A65: 37 0C              LTI     A,$0C
1A67: 69 0C              MVI     A,$0C
1A69: 3D                 STAX    (HL+)
1A6A: push(HL);
1A6B: HL++;
1A6C: HL++;
1A6D: C = A;
1A6E: 6A 10              MVI     B,$10
1A70: 60 62              SUB     B,A
1A72: 4E 2C              JRE     $1AA0
1A74: push(BC);
1A75: push(HL);
1A76: 8E                 CALT    ($009C)
1A77: EAH = A;
1A78: push(EA);
1A79: 8E                 CALT    ($009C)
1A7A: EA = pop();
1A7B: EAL = A;
1A7C: 6B 07              MVI     C,$07
1A7E: 48 A4              DSLL    EA
1A80: 48 35              RLL     A
1A82: 48 A4              DSLL    EA
1A84: 48 36              RLL     B
1A86: 53                 DCR     C
1A87: F6                 JR      $1A7E
1A88: HL = pop();
1A89: 3D                 STAX    (HL+)
1A8A: A = B;
1A8B: BF 0D              STAX    (HL+$0D)
1A8D: push(HL);
1A8E: 8E                 CALT    ($009C)
1A8F: 34 4D 99           LXI     HL,$994D
1A92: 6B 01              MVI     C,$01
1A94: EA = [HL];
1A96: 48 25              SLL     A
1A98: 48 B4              DRLL    EA
1A9A: 48 95              STEAX   (HL++)
1A9C: 53                 DCR     C
1A9D: F6                 JR      $1A94
1A9E: HL = pop();
1A9F: BC = pop();
1AA0: 53                 DCR     C
1AA1: 4F D1              JRE     $1A74
1AA3: DE = pop();
1AA4: push(BC);
1AA5: 34 4D 99           LXI     HL,$994D
1AA8: 48 85              LDEAX   (HL++)
1AAA: C2                 JR      $1AAD
1AAB: 48 A4              DSLL    EA
1AAD: 52                 DCR     B
1AAE: goto 1AAB
1AAF: A = EAH;
1AB0: [DE++] = A;
1AB1: A = EAL;
1AB2: [DE++] = A;
1AB3: BC = pop();
1AB4: EA = [HL];
1AB6: C2                 JR      $1AB9
1AB7: 48 A4              DSLL    EA
1AB9: 52                 DCR     B
1ABA: goto 1AB7
1ABB: A = EAH;
1ABC: BB 0C              STAX    (DE+$0C)
1ABE: A = EAL;
1ABF: BB 0D              STAX    (DE+$0D)
1AC1: return 0;
1AC2: 59 09              BIT     1,VV:09
1AC4: 69 0C              MVI     A,$0C
1AC6: 69 1D              MVI     A,$1D
1AC8: 59 09              BIT     1,VV:09
1ACA: 34 00 FF           LXI     HL,$FF00
1ACD: 34 48 FF           LXI     HL,$FF48
1AD0: 48 2E              MUL     B
1AD2: EA += HL;
1AD4: HL = EA;
1AD5: return 0;
1AD6: 70 6A 15 98        MOV     B,($9815)
1ADA: 5F 04              BIT     7,VV:04
1ADC: return 0;
1ADD: 74 3A 3A           LTI     B,$3A
1AE0: 74 3A 40           LTI     B,$40
1AE3: return 0;
1AE4: 74 62 3A           SUI     B,$3A
1AE7: 40 C2 1A           CALL    $1AC2
1AEA: A = [HL];
1AEB: 67 FF              NEI     A,$FF
1AED: goto 1AF8
1AEE: 05 09 7F           ANIW    VV:09,$7F
1AF1: 77 00              EQI     A,$00
1AF3: return 1;
1AF4: 71 15 20           MVIW    VV:15,$20
1AF7: return 0;
1AF8: 05 08 FE           ANIW    VV:08,$FE
1AFB: 55 04 08           OFFIW   VV:04,$08
1AFE: 15 08 01           ORIW    VV:08,$01
1B01: return 0;
1B02: 15 05 04           ORIW    VV:05,$04

1B05: 70 3F 39 99        LHLD    $9939
1B09: 44 79 9A           LXI     EA,$9A79
1B0C: 74 BF              DLT     EA,HL
1B0E: 4E A8              JRE     $1BB8
1B10: 40 0C 1F           CALL    $1F0C
1B13: 5F 06              BIT     7,VV:06
1B15: C9                 JR      $1B1F
1B16: VV[0x06] &= 0xef; /* 1110 1111 */
1B19: 5D 06              BIT     5,VV:06
1B1B: goto 1B1F
1B1C: VV[0x06] |= 0x10; /* 0001 0000 */
1B1F: 40 4E 30           CALL    $304E
1B22: 40 AE 1F           CALL    $1FAE
1B25: 40 BC 1B           CALL    $1BBC
1B28: 05 10 AF           ANIW    VV:10,$AF
1B2B: 15 10 01           ORIW    VV:10,$01
1B2E: 71 2A 10           MVIW    VV:2A,$10
1B31: 71 2B 00           MVIW    VV:2B,$00
1B34: 8C                 CALT    ($0098)
1B35: 4E 62              JRE     $1B99
1B37: 40 68 2B           CALL    $2B68
1B3A: 40 13 2C           CALL    $2C13
1B3D: 40 D5 7B           CALL    $7BD5
1B40: 15 13 02           ORIW    VV:13,$02
1B43: 40 D9 1E           CALL    $1ED9
1B46: 05 10 FE           ANIW    VV:10,$FE
1B49: 5B 11              BIT     3,VV:11
1B4B: D4                 JR      $1B60
1B4C: 15 10 40           ORIW    VV:10,$40
1B4F: 71 2A 20           MVIW    VV:2A,$20
1B52: 71 2B 00           MVIW    VV:2B,$00
1B55: 8C                 CALT    ($0098)
1B56: C9                 JR      $1B60
1B57: 14 01 00           LXI     BC,$0001
1B5A: 40 A6 2E           CALL    $2EA6
1B5D: 40 D9 1E           CALL    $1ED9
1B60: 5C 11              BIT     4,VV:11
1B62: 4E 35              JRE     $1B99
1B64: 15 10 10           ORIW    VV:10,$10
1B67: 05 10 BF           ANIW    VV:10,$BF
1B6A: 71 2A 00           MVIW    VV:2A,$00
1B6D: 71 2B 10           MVIW    VV:2B,$10
1B70: 8C                 CALT    ($0098)
1B71: 4E 26              JRE     $1B99
1B73: 14 0C 00           LXI     BC,$000C
1B76: 75 26 00           EQIW    VV:26,$00
1B79: 14 0B 00           LXI     BC,$000B
1B7C: 40 A6 2E           CALL    $2EA6
1B7F: 40 D9 1E           CALL    $1ED9
1B82: 5B 11              BIT     3,VV:11
1B84: D4                 JR      $1B99
1B85: 15 10 40           ORIW    VV:10,$40
1B88: 71 2A 20           MVIW    VV:2A,$20
1B8B: 71 2B 10           MVIW    VV:2B,$10
1B8E: 8C                 CALT    ($0098)
1B8F: C9                 JR      $1B99
1B90: 14 01 00           LXI     BC,$0001
1B93: 40 A6 2E           CALL    $2EA6
1B96: 40 D9 1E           CALL    $1ED9
1B99: 55 05 08           OFFIW   VV:05,$08
1B9C: D2                 JR      $1BAF
1B9D: 55 05 30           OFFIW   VV:05,$30
1BA0: 5A 05              BIT     2,VV:05
1BA2: D1                 JR      $1BB4
1BA3: 70 3F 01 99        LHLD    $9901
1BA7: EA = HL;
1BA8: 70 3F 03 99        LHLD    $9903
1BAC: 74 EF              DNE     EA,HL
1BAE: C5                 JR      $1BB4
1BAF: 70 3F 3D 99        LHLD    $993D
1BB3: 85                 CALT    ($008A)
1BB4: 9D                 CALT    ($00BA)
1BB5: VV[0x06] |= 0x10; /* 0001 0000 */
1BB8: 05 05 FB           ANIW    VV:05,$FB
1BBB: return 0;
1BBC: 05 05 F7           ANIW    VV:05,$F7
1BBF: 05 11 FE           ANIW    VV:11,$FE
1BC2: 55 05 30           OFFIW   VV:05,$30
1BC5: goto 1C75
1BC7: 5F 05              BIT     7,VV:05
1BC9: return 0;
1BCA: 55 05 02           OFFIW   VV:05,$02
1BCD: return 0;
1BCE: 5B 03              BIT     3,VV:03
1BD0: 65 33 00           NEIW    VV:33,$00
1BD3: return 0;
1BD4: 05 05 BF           ANIW    VV:05,$BF
1BD7: 55 11 04           OFFIW   VV:11,$04
1BDA: DE                 JR      $1BF9
1BDB: 40 79 1D           CALL    $1D79
1BDE: 48 1A              SKN     CY
1BE0: DF                 JR      $1C00
1BE1: 48 A4              DSLL    EA
1BE3: BC = EA;
1BE4: 70 3F 3D 99        LHLD    $993D
1BE8: EA = HL;
1BE9: 70 3F 03 99        LHLD    $9903
1BED: 74 E7              DSUB    EA,HL
1BEF: 74 B5              DSUBNB  EA,BC
1BF1: return 0;
1BF2: 12                 INX     BC
1BF3: 74 B5              DSUBNB  EA,BC
1BF5: return 0;
1BF6: 15 05 40           ORIW    VV:05,$40
1BF9: 40 2A 1C           CALL    $1C2A
1BFC: 65 33 00           NEIW    VV:33,$00
1BFF: return 0;
1C00: 40 79 1D           CALL    $1D79
1C03: 70 3F 47 99        LHLD    $9947
1C07: EA += HL;
1C09: 01 25              LDAW    VV:25
1C0B: 48 3D              DIV     A
1C0D: push(EA);
1C0E: 70 3F 3D 99        LHLD    $993D
1C12: EA = HL;
1C13: 70 61              ESUB    EA,A
1C15: HL = EA;
1C16: 70 3E 01 99        SHLD    $9901
1C1A: EA = pop();
1C1B: 01 33              LDAW    VV:33
1C1D: 48 3D              DIV     A
1C1F: DE = EA;
1C20: 70 2E 53 99        SDED    $9953
1C24: 63 34              STAW    VV:34
1C26: 15 05 08           ORIW    VV:05,$08
1C29: return 0;
1C2A: 70 3F 39 99        LHLD    $9939
1C2E: 70 3E 51 99        SHLD    $9951
1C32: HL--;
1C33: HL--;
1C34: HL--;
1C35: A = [HL];
1C36: 48 8F 01           LDEAX   (HL+$01)
1C39: BC = EA;
1C3A: 40 C9 22           CALL    $22C9
1C3D: BC = EA;
1C3E: 24 01 99           LXI     DE,$9901
1C41: EA = [DE];
1C43: 74 E5              DSUB    EA,BC
1C45: [DE] = EA;
1C47: A = [HL];
1C48: 67 20              NEI     A,$20
1C4A: C9                 JR      $1C54
1C4B: 55 05 40           OFFIW   VV:05,$40
1C4E: goto 1C64
1C4F: 15 11 01           ORIW    VV:11,$01
1C52: 4F DE              JRE     $1C32
1C54: 15 05 40           ORIW    VV:05,$40
1C57: 24 47 99           LXI     DE,$9947
1C5A: EA = [DE];
1C5C: 74 E5              DSUB    EA,BC
1C5E: [DE] = EA;
1C60: 30 33              DCRW    VV:33
1C62: 4F CE              JRE     $1C32
1C64: HL++;
1C65: HL++;
1C66: HL++;
1C67: 70 3E 39 99        SHLD    $9939
1C6B: 24 01 99           LXI     DE,$9901
1C6E: EA = [DE];
1C70: 74 C5              DADD    EA,BC
1C72: [DE] = EA;
1C74: return 0;
1C75: 5A 05              BIT     2,VV:05
1C77: return 0;
1C78: 40 79 1D           CALL    $1D79
1C7B: 5D 05              BIT     5,VV:05
1C7D: 48 A0              DSLR    EA
1C7F: DE = EA;
1C80: 34 03 99           LXI     HL,$9903
1C83: EA = [HL];
1C85: 74 C6              DADD    EA,DE
1C87: 48 93              STEAX   (HL)
1C89: 34 01 99           LXI     HL,$9901
1C8C: EA = [HL];
1C8E: 74 C6              DADD    EA,DE
1C90: 48 93              STEAX   (HL)
1C92: return 0;
1C93: 34 33 98           LXI     HL,$9833
1C96: 48 85              LDEAX   (HL++)
1C98: 48 93              STEAX   (HL)
1C9A: 40 B1 1C           CALL    $1CB1
1C9D: return 0;
1C9E: 40 DC 1C           CALL    $1CDC
1CA1: 55 07 40           OFFIW   VV:07,$40
1CA4: goto 1CB0
1CA5: 6A 48              MVI     B,$48
1CA7: 34 0D 99           LXI     HL,$990D
1CAA: EA = [HL];
1CAC: 70 42              EADD    EA,B
1CAE: 48 93              STEAX   (HL)
1CB0: return 1;
1CB1: 70 1F 03 99        LBCD    $9903
1CB5: 34 79 9A           LXI     HL,$9A79
1CB8: 70 2F 39 99        LDED    $9939
1CBC: 70 1E 0B 99        SBCD    $990B
1CC0: 70 3E 33 99        SHLD    $9933
1CC4: EA = HL;
1CC5: 74 BE              DLT     EA,DE
1CC7: return 0;
1CC8: 40 00 1D           CALL    $1D00
1CCB: return 1;
1CCC: push(DE);
1CCD: 40 3E 1D           CALL    $1D3E
1CD0: DE = pop();
1CD1: 70 1F 0B 99        LBCD    $990B
1CD5: 74 C5              DADD    EA,BC
1CD7: BC = EA;
1CD8: HL++;
1CD9: HL++;
1CDA: HL++;
1CDB: E0                 JR      $1CBC
1CDC: 70 1F 01 99        LBCD    $9901
1CE0: 70 3F 39 99        LHLD    $9939
1CE4: 70 1E 0D 99        SBCD    $990D
1CE8: 70 3E 35 99        SHLD    $9935
1CEC: HL--;
1CED: HL--;
1CEE: HL--;
1CEF: 40 00 1D           CALL    $1D00
1CF2: return 0;
1CF3: 40 51 1D           CALL    $1D51
1CF6: 70 1F 0D 99        LBCD    $990D
1CFA: DE = EA;
1CFB: A5                 DMOV    EA,BC
1CFC: 74 E6              DSUB    EA,DE
1CFE: BC = EA;
1CFF: E4                 JR      $1CE4
1D00: 70 1F 2A 98        LBCD    $982A
1D04: 48 8F 01           LDEAX   (HL+$01)
1D07: 58 10              BIT     0,VV:10
1D09: goto 1D0E
1D0A: 74 DD              DOFF    EA,BC
1D0C: return 0;
1D0D: C5                 JR      $1D13
1D0E: 74 8D              DAN     EA,BC
1D10: 74 FD              DEQ     EA,BC
1D12: return 1;
1D13: AF 02              LDAX    (HL+$02)
1D15: 57 01              OFFI    A,$01
1D17: return 1;
1D18: A = [HL];
1D19: 77 20              EQI     A,$20
1D1B: return 0;
1D1C: A = EAL;
1D1D: 57 10              OFFI    A,$10
1D1F: return 0;
1D20: return 1;
1D21: 5B 05              BIT     3,VV:05
1D23: return 0;
1D24: AF 02              LDAX    (HL+$02)
1D26: 57 01              OFFI    A,$01
1D28: return 0;
1D29: A = [HL];
1D2A: 77 20              EQI     A,$20
1D2C: return 0;
1D2D: 70 2F 45 99        LDED    $9945
1D31: EA = DE;
1D32: 74 BF              DLT     EA,HL
1D34: return 0;
1D35: return 1;
1D36: A = [HL];
1D37: 48 8F 01           LDEAX   (HL+$01)
1D3A: BC = EA;
1D3B: 54 C9 22           JMP     $22C9
1D3E: 40 21 1D           CALL    $1D21
1D41: F4                 JR      $1D36
1D42: 70 1F 53 99        LBCD    $9953
1D46: 70 2F 36 98        LDED    $9836
1D4A: EA = 0x0000;
1D4D: 74 EE              DNE     EA,DE
1D4F: DB                 JR      $1D6B
1D50: D4                 JR      $1D65
1D51: 40 21 1D           CALL    $1D21
1D54: E1                 JR      $1D36
1D55: 70 1F 53 99        LBCD    $9953
1D59: 70 2F 35 98        LDED    $9835
1D5D: EA = DE;
1D5E: 70 2F 36 98        LDED    $9836
1D62: 74 FE              DEQ     EA,DE
1D64: C6                 JR      $1D6B
1D65: 23                 DCX     DE
1D66: 70 2E 36 98        SDED    $9836
1D6A: 12                 INX     BC
1D6B: 01 25              LDAW    VV:25
1D6D: A5                 DMOV    EA,BC
1D6E: 84                 CALT    ($0088)
1D6F: 70 2F 35 98        LDED    $9835
1D73: 23                 DCX     DE
1D74: 70 2E 35 98        SDED    $9835
1D78: return 0;
1D79: 70 3F 3D 99        LHLD    $993D
1D7D: EA = HL;
1D7E: 70 3F 01 99        LHLD    $9901
1D82: 74 E7              DSUB    EA,HL
1D84: return 0;
1D85: 70 3F 25 99        LHLD    $9925
1D89: 70 3E 05 C0        SHLD    $C005
1D8D: 64 83 07           MVI     EOM,$07
1D90: 4C E1              MOV     A,CR1
1D92: EA = 0x0000;
1D95: EAL = A;
1D96: 48 A4              DSLL    EA
1D98: 37 DB              LTI     A,$DB
1D9A: C7                 JR      $1DA2
1D9B: EA += A;
1D9D: BC = EA;
1D9E: 44 34 04           LXI     EA,$0434
1DA1: C9                 JR      $1DAB
1DA2: 37 FB              LTI     A,$FB
1DA4: 54 67 78           JMP     $7867
1DA7: BC = EA;
1DA8: 44 5E 03           LXI     EA,$035E
1DAB: 74 E5              DSUB    EA,BC
1DAD: BC = EA;
1DAE: 48 C0              DMOV    EA,ECNT
1DB0: 74 C5              DADD    EA,BC
1DB2: 70 1F 23 99        LBCD    $9923
1DB6: 74 BD              DLT     EA,BC
1DB8: 74 E5              DSUB    EA,BC
1DBA: ETM0 = EA;
1DBC: 5D 10              BIT     5,VV:10
1DBE: CD                 JR      $1DCC
1DBF: 70 3F 23 99        LHLD    $9923
1DC3: EA = HL;
1DC4: 48 D3              DMOV    ETM1,EA
1DC6: 48 46              SKIT    FE1
1DC8: 00                 NOP     
1DC9: 05 10 DF           ANIW    VV:10,$DF
1DCC: 11                 EXX     
1DCD: 10                 EXA     
1DCE: enable_interrupts();
1DCF: push(EA);
1DD0: push(HL);
1DD1: push(VA);
1DD2: push(BC);
1DD3: push(DE);
1DD4: 40 22 23           CALL    $2322
1DD7: 40 46 1E           CALL    $1E46
1DDA: 40 5E 1E           CALL    $1E5E
1DDD: DE = pop();
1DDE: BC = pop();
1DDF: VA = pop();
1DE0: HL = pop();
1DE1: EA = pop();
1DE2: return; /* FROM INTERRUPT */
1DE3: 70 3F 25 99        LHLD    $9925
1DE7: 70 3E 05 C0        SHLD    $C005
1DEB: 64 83 07           MVI     EOM,$07
1DEE: 4C E1              MOV     A,CR1
1DF0: EA = 0x0000;
1DF3: EAL = A;
1DF4: 48 A4              DSLL    EA
1DF6: 37 DB              LTI     A,$DB
1DF8: CC                 JR      $1E05
1DF9: 27 D0              GTI     A,$D0
1DFB: 44 A0 01           LXI     EA,$01A0
1DFE: EA += A;
1E00: BC = EA;
1E01: 44 10 04           LXI     EA,$0410
1E04: C9                 JR      $1E0E
1E05: 37 FB              LTI     A,$FB
1E07: 54 67 78           JMP     $7867
1E0A: BC = EA;
1E0B: 44 39 03           LXI     EA,$0339
1E0E: 74 E5              DSUB    EA,BC
1E10: BC = EA;
1E11: 48 C0              DMOV    EA,ECNT
1E13: 74 C5              DADD    EA,BC
1E15: 70 1F 23 99        LBCD    $9923
1E19: 74 BD              DLT     EA,BC
1E1B: 74 E5              DSUB    EA,BC
1E1D: ETM0 = EA;
1E1F: 5D 10              BIT     5,VV:10
1E21: CD                 JR      $1E2F
1E22: 70 3F 23 99        LHLD    $9923
1E26: EA = HL;
1E27: 48 D3              DMOV    ETM1,EA
1E29: 48 46              SKIT    FE1
1E2B: 00                 NOP     
1E2C: 05 10 DF           ANIW    VV:10,$DF
1E2F: 11                 EXX     
1E30: 10                 EXA     
1E31: enable_interrupts();
1E32: push(EA);
1E33: push(HL);
1E34: push(VA);
1E35: push(BC);
1E36: push(DE);
1E37: 40 22 23           CALL    $2322
1E3A: 40 46 1E           CALL    $1E46
1E3D: 40 5E 1E           CALL    $1E5E
1E40: DE = pop();
1E41: BC = pop();
1E42: VA = pop();
1E43: HL = pop();
1E44: EA = pop();
1E45: return; /* FROM INTERRUPT */
1E46: MKL |= 0x40; /* 0100 0000 */ /* mask INTE1 */
1E49: 48 45              SKIT    FE0
1E4B: 00                 NOP     
1E4C: MKL &= 0xdf; /* 1101 1111 */ /* activate INTE0 */
1E4F: 34 78 1E           LXI     HL,$1E78
1E52: 70 3E 1B 98        SHLD    $981B
1E56: 34 04 7A           LXI     HL,$7A04
1E59: 70 3E 18 98        SHLD    $9818
1E5D: return 0;
1E5E: 55 10 02           OFFIW   VV:10,$02
1E61: 30 29              DCRW    VV:29
1E63: return 0;
1E64: 71 29 02           MVIW    VV:29,$02
1E67: 70 3F 23 99        LHLD    $9923
1E6B: EA = HL;
1E6C: 5F 12              BIT     7,VV:12
1E6E: C5                 JR      $1E74
1E6F: EA++;
1E70: 5E 12              BIT     6,VV:12
1E72: EA++;
1E73: C1                 JR      $1E75
1E74: A9                 DCX     EA
1E75: 48 D3              DMOV    ETM1,EA
1E77: return 0;
1E78: MKL |= 0x20; /* 0010 0000 */ /* mask INTE0 */
1E7B: 64 83 99           MVI     EOM,$99
1E7E: HL = 0x0000;
1E81: 70 3E 05 C0        SHLD    $C005
1E85: 05 10 7D           ANIW    VV:10,$7D
1E88: 05 0F FD           ANIW    VV:0F,$FD
1E8B: 11                 EXX     
1E8C: 10                 EXA     
1E8D: enable_interrupts();
1E8E: return; /* FROM INTERRUPT */
1E8F: 70 1F 21 99        LBCD    $9921
1E93: A5                 DMOV    EA,BC
1E94: 70 1F 27 99        LBCD    $9927
1E98: 74 C5              DADD    EA,BC
1E9A: 48 D3              DMOV    ETM1,EA
1E9C: EA++;
1E9D: EA++;
1E9E: ETM0 = EA;
1EA0: 55 06 10           OFFIW   VV:06,$10
1EA3: CF                 JR      $1EB3
1EA4: 34 85 1D           LXI     HL,$1D85
1EA7: 70 3E 1B 98        SHLD    $981B
1EAB: 34 5A 7A           LXI     HL,$7A5A
1EAE: 70 3E 18 98        SHLD    $9818
1EB2: CE                 JR      $1EC1
1EB3: 34 E3 1D           LXI     HL,$1DE3
1EB6: 70 3E 1B 98        SHLD    $981B
1EBA: 34 5A 7A           LXI     HL,$7A5A
1EBD: 70 3E 18 98        SHLD    $9818
1EC1:
	ETMM = 0x0c; /* 0000 1100 */ /*  */
1EC5: 15 10 20           ORIW    VV:10,$20
1EC8: 48 46              SKIT    FE1
1ECA: 00                 NOP     
1ECB: 48 45              SKIT    FE0
1ECD: 00                 NOP     
1ECE: 40 22 23           CALL    $2322
1ED1: 00                 NOP     
1ED2: MKL &= 0xbf; /* 1011 1111 */ /* activate INTE1 */
1ED5: 15 10 80           ORIW    VV:10,$80
1ED8: return 0;
1ED9: 40 11 1F           CALL    $1F11
1EDC: 34 00 90           LXI     HL,$9000
1EDF: 70 3E 5D 99        SHLD    $995D
1EE3: 70 3E 5F 99        SHLD    $995F
1EE7: HL = 0x0000;
1EEA: 70 3E 25 99        SHLD    $9925
1EEE: 55 00 04           OFFIW   VV:00,$04
1EF1: 40 D2 2A           CALL    $2AD2
1EF4: 59 09              BIT     1,VV:09
1EF6: 69 00              MVI     A,$00
1EF8: 69 1E              MVI     A,$1E
1EFA: 63 3E              STAW    VV:3E
1EFC: 92                 CALT    ($00A4)
1EFD: 40 2D 1F           CALL    $1F2D
1F00: 40 4C 23           CALL    $234C
1F03: C1                 JR      $1F05
1F04: FB                 JR      $1F00
1F05: 5A 00              BIT     2,VV:00
1F07: 40 D2 2A           CALL    $2AD2
1F0A: return 0;
1F0B:
	func_2089();
1F0C: 55 0F 02           OFFIW   VV:0F,$02
1F0F: FB                 JR      $1F0B
1F10: return 0;
1F11: 70 3F 33 99        LHLD    $9933
1F15: 5A 00              BIT     2,VV:00
1F17: D0                 JR      $1F28
1F18: 70 2F 35 99        LDED    $9935
1F1C: EA = DE;
1F1D: HL--;
1F1E: HL--;
1F1F: HL--;
1F20: 70 3E 35 99        SHLD    $9935
1F24: HL = EA;
1F25: HL--;
1F26: HL--;
1F27: HL--;
1F28: 70 3E 37 99        SHLD    $9937
1F2C: return 0;
1F2D: func_1F75();
1F30: 5A 00              BIT     2,VV:00
1F32: D6                 JR      $1F49
1F33: 70 3F 0D 99        LHLD    $990D
1F37: EA = HL;
1F38: 70 61              ESUB    EA,A
1F3A: 69 18              MVI     A,$18
1F3C: 48 3D              DIV     A
1F3E: 44 18 00           LXI     EA,$0018
1F41: 77 00              EQI     A,$00
1F43: 48 A4              DSLL    EA
1F45: 70 61              ESUB    EA,A
1F47: BC = EA;
1F48: CE                 JR      $1F57
1F49: 70 3F 0B 99        LHLD    $990B
1F4D: EA = HL;
1F4E: EA += A;
1F50: 6B 18              MVI     C,$18
1F52: 48 3F              DIV     C
1F54: 74 43 18           ADI     C,$18
1F57: 40 93 1F           CALL    $1F93
1F5A: 48 2F              MUL     C
1F5C: 34 27 99           LXI     HL,$9927
1F5F: 48 93              STEAX   (HL)
1F61: 71 29 02           MVIW    VV:29,$02
1F64: 5F 12              BIT     7,VV:12
1F66: C7                 JR      $1F6E
1F67: 55 12 20           OFFIW   VV:12,$20
1F6A: 15 10 02           ORIW    VV:10,$02
1F6D: C6                 JR      $1F74
1F6E: 55 07 40           OFFIW   VV:07,$40
1F71: 15 10 02           ORIW    VV:10,$02
1F74: return 0;

void func_1F75(void)
{
	if (VV[0x00] & 0x02) HL = 0x9850;
	else                 HL = 0x1F89;
	A = [HL+[9820]];
	if (VV[0x00] & 0x04)
		A += VV[0x25];
	return;
}

1F89: DW: 0A 01 10 0A 01 2D 20 39 2D 20 34 9A 1F 01 20 AC
1F99: DW: B8 39 73 24 2B 56

int func_1F9F(void)
{
	if (234C())
		return 1;
	if (VV[0x40] & 0x40)
		return 1;
	if (!VV[0x3e]--)
		return 0;
	VV[0x3e] = 0x00;
	return 1;
}

1FAE:
	55 06 10           OFFIW   VV:06,$10
	goto 1FEA;
59 09              BIT     1,VV:09
55 09 04           OFFIW   VV:09,$04
	goto 1FC9;
55 07 40           OFFIW   VV:07,$40
	goto 1FCC;
	if (VV[0x07] & 0x20) HL = 0x200b;
	if (VV[0x08] & 0x04) HL = 0x200b;
	HL = 0x2007;
1FC9: HL = 0x200f;
1FCC: HL = 0x2013;
1FCF: A = [HL++];

	push(VA);
	A &= 0x7f; /* 0111 1111 */
	VV[0x20] = A;
	A = [HL++];
	VV[0x25] = A;
	EA = [HL];
	HL = 0x9923;
	[HL] = EA;
	VA = pop();
	if (A & 0x80) HL = 0xc006;
	else          HL = 0xc005;
	A = [HL];
	return;

1FEA:
	59 09              BIT     1,VV:09
	55 09 04           OFFIW   VV:09,$04
	goto 2001;
	55 07 40           OFFIW   VV:07,$40
	goto 1FCC;
	5D 07              BIT     5,VV:07
	55 08 04           OFFIW   VV:08,$04
	HL = 0x2017;
	HL = 0x201b;
	2001: HL = 0x201f;
	54 CF 1F           JMP     1FCF

2007: 80                 CALT    ($0080)
2008: A = D;
2009: push(VA);
200A: 02                 INX     SP
200B: 01 0C              LDAW    VV:0C
200D: 60 05              illegal 
200F: 81                 CALT    ($0082)
2010: 06                 illegal 
2011: push(VA);
2012: 02                 INX     SP
2013: 82                 CALT    ($0084)
2014: 10                 EXA     
2015: 40 02 04           CALL    $0402
2018: A = D;
2019: 00                 NOP     
201A: 04 83 0C           LXI     SP,$0C83
201D: 00                 NOP     
201E: 02                 INX     SP
201F: 84                 CALT    ($0088)
2020: 06                 illegal 
2021: 00                 NOP     
2022: 02                 INX     SP
2023: 34 11 99           LXI     HL,$9911
2026: 44 00 80           LXI     EA,$8000
2029: 48 95              STEAX   (HL++)
202B: 48 95              STEAX   (HL++)
202D: 44 00 10           LXI     EA,$1000
2030: 48 93              STEAX   (HL)
2032: return;
2033: 45 11 80           ONIW    VV:11,$80
2036: return 0;
2037: 34 01 C0           LXI     HL,$C001
203A: A = [HL];
203B: 70 FB              EQAX    (HL)
203D: goto 203A
203E: 6B 4E              MVI     C,$4E
2040: 47 01              ONI     A,$01
2042: 74 0B FB           ANI     C,$FB
2045: 47 10              ONI     A,$10
2047: 74 1B 10           ORI     C,$10
204A: 47 08              ONI     A,$08
204C: 74 1B 20           ORI     C,$20
204F: 07 66              ANI     A,$66
2051: 48 21              SLR     A
2053: B = A;
2054: 07 03              ANI     A,$03
2056: 48 22              SLR     B
2058: 48 22              SLR     B
205A: A |= B;
205C: 27 03              GTI     A,$03
205E: 74 1B 01           ORI     C,$01
2061: 34 79 20           LXI     HL,$2079
2064: A = [HL+A];
2065: 4D DA              MOV     TM0,A
2067: A = C;
2068: 4D CA              MOV     SML,A
206A: 69 0C              MVI     A,$0C
206C: 4D C9              MOV     SMH,A
206E: 69 93              MVI     A,$93
2070: 4D CD              MOV     TMM,A
2072: 64 8D EC           ANI     TMM,$EC
2075: 48 4B              SKIT    ER
2077: 00                 NOP     
2078: return 0;
2079: 80                 CALT    ($0080)
207A: 57 47              OFFI    A,$47
207C: 40 C0 80           CALL    $80C0
207F: 40 20 15           CALL    $1520
2082: 10                 EXA     
2083: A = EAH;
2084: 04 80 20           LXI     SP,$2080
2087: 10                 EXA     
###00002088: 04 5F 11           LXI     SP,$115F

void func_2089(void)
{
	if ( (VV[0x11] & 0x80)) return;
	if (!(VV[0x11] & 0x40)) return;
	if ( (VV[0x11] & 0x20)) return;
	if (!([0xC002] & 0x80)) return;

	disable_interrupts();
	EA = [0xc002];
	A  = [0xc004];
	[0xc004] = (A |= 0x20); /* 0010 0000 */
	[0xc004] = (A &= 0xfe); /* 1111 1110 */
	enable_interrupts();
	[0xc004] = (A &= 0xdf); /* 1101 1111 */
	DE = [0x9911];
	[DE++] = EAH;
	rollover_DE_from_0x9000_to_0x8000();
	[0x9911] = DE;
	disable_interrupts();
	[0x9915]--;
	if (EA == 0x0000) {
		VV[0x11] |= 0x02;
		[0xC004] &= 0xFD; /* 1111 1101 */
	}
	enable_interrupts();
}

20CE: push(VA);
20CF: 4C D9              MOV     A,RXB
20D1: MKH |= 0x02; /* 0000 0010 */
20D4: enable_interrupts();
20D5: 59 11              BIT     1,VV:11
20D7: 48 6B              SKNIT   ER
20D9: 4E 32              JRE     $210D
20DB: push(EA);
20DC: push(DE);
20DD: push(HL);
20DE: 70 2F 11 99        LDED    $9911
20E2: [DE++] = A;
20E3: rollover_DE_from_0x9000_to_0x8000();
20E4: 70 2E 11 99        SDED    $9911
20E8: disable_interrupts();
20E9: DE = 0x9915;
20EC: EA = [DE];
20EE: A9                 DCX     EA
20EF: [DE] = EA;
20F1: HL = 0x0000;
20F4: 74 EF              DNE     EA,HL
20F6: 15 11 02           ORIW    VV:11,$02
20F9: enable_interrupts();
20FA: 34 00 01           LXI     HL,$0100
20FD: 74 FF              DEQ     EA,HL
20FF: goto 210A
2100: 15 11 40           ORIW    VV:11,$40
2103: 40 0C 23           CALL    $230C
2106: 69 13              MVI     A,$13
2108: TXB = A;
210A: HL = pop();
210B: DE = pop();
210C: EA = pop();
210D: VA = pop();
MKH &= 0xfd; /* 1111 1101 */
return; /* FROM INTERRUPT */

2112:
	40 A5 0E           CALL    $0EA5
	func_2089();

2116:
	40 27 21           CALL    $2127
	F8                 JR      $2112
	return 0;

211B:
int func_211B(void)
{
	return ([0x9915] == 0x1000);
}

2127:
	MKH |= 0x02; /* 0000 0010 */
	if (func_211B()) {
		MKH &= 0xfd; /* 1111 1101 */
		return 0;
	}
	DE = 0x9915;
	EA = [DE];
	EA++;
	[DE] = EA;
	05 11 FD           ANIW    VV:11,$FD
	5F 11              BIT     7,VV:11
	40 08 23           CALL    $2308
	70 2F 13 99        LDED    $9913
	A = [DE++];
	63 15              STAW    VV:15
	rollover_DE_from_0x9000_to_0x8000();
	70 2E 13 99        SDED    $9913
	MKH &= 0xfd; /* 1111 1101 */
	5E 11              BIT     6,VV:11
	goto 2169
	DE = 0x9915;
	EA = [DE];
	HL = 0x0210;
	if (EA != HL)
		goto 2169;
	VV[0x11] &= 0xbf; /* 1011 1111 */
	A = 0x11;
	TXB = A;
	40 05 23           CALL    $2305
2169:
	40 E9 2F           CALL    $2FE9
	A = VV[0x15];
	return 1;

216F: 70 3F 01 99        LHLD    $9901
2173: 70 3E 03 99        SHLD    $9903
2177: 15 03 08           ORIW    VV:03,$08
217A: 05 11 C3           ANIW    VV:11,$C3
217D: HL = 0x0000;
2180: 70 3E 47 99        SHLD    $9947
2184: 71 33 00           MVIW    VV:33,$00
2187: 34 79 9A           LXI     HL,$9A79
218A: 70 3E 45 99        SHLD    $9945
218E: 58 11              BIT     0,VV:11
2190: 4E 5C              JRE     $21EE
2192: 70 2F 51 99        LDED    $9951
2196: EA = DE;
2197: 70 2F 39 99        LDED    $9939
219B: 22                 INX     DE
219C: 22                 INX     DE
219D: 22                 INX     DE
219E: 74 E6              DSUB    EA,DE
21A0: 69 03              MVI     A,$03
21A2: 48 3D              DIV     A
21A4: BC = EA;
21A5: 34 79 9A           LXI     HL,$9A79
21A8: EA = 0x0000;
21AB: 4E 2F              JRE     $21DC
21AD: push(BC);
21AE: push(EA);
21AF: A = [DE++];
21B0: 48 84              LDEAX   (DE++)
21B2: 77 20              EQI     A,$20
21B4: goto 21B9
21B5: EA = pop();
21B6: BC = pop();
21B7: 4E 23              JRE     $21DC
21B9: 3D                 STAX    (HL+)
21BA: push(VA);
21BB: 59 02              BIT     1,VV:02
21BD: goto 21C2
21BE: A = EAL;
21BF: 07 F7              ANI     A,$F7
21C1: EAL = A;
21C2: 48 95              STEAX   (HL++)
21C4: 05 03 F7           ANIW    VV:03,$F7
21C7: A = EAH;
21C8: 57 10              OFFI    A,$10
21CA: 15 11 10           ORIW    VV:11,$10
21CD: A = EAL;
21CE: 57 20              OFFI    A,$20
21D0: 15 11 08           ORIW    VV:11,$08
21D3: VA = pop();
21D4: BC = EA;
21D5: 40 C9 22           CALL    $22C9
21D8: BC = pop();
21D9: 74 C5              DADD    EA,BC
21DB: BC = pop();
21DC: 53                 DCR     C
21DD: 4F CE              JRE     $21AD
21DF: 70 2F 05 99        LDED    $9905
21E3: 70 2E 03 99        SDED    $9903
21E7: 74 C6              DADD    EA,DE
21E9: DE = EA;
21EA: 70 2E 01 99        SDED    $9901
21EE: 70 3E 39 99        SHLD    $9939
21F2: return 0;

void rollover_DE_from_0x9000_to_0x8000(void)
{
	EA = 0x9000;
	if (EA == DE)
		DE = 0x8000;
}

void rollover_DE_from_0x7fff_to_0x8fff(void)
{
	EA = 0x7fff;
	if (EA == DE)
		DE = 0x8fff;
}

2205: 70 1F 39 99        LBCD    $9939
2209: EA = 0x9DA9;
220C: 74 AD              DGT     EA,BC
220E: return 0;
220F: return 1;
2210: 70 3F 39 99        LHLD    $9939
2214: EA = 0x9A79;
2217: 74 BF              DLT     EA,HL
2219: return 1;
221A: return 0;
221B: 40 05 22           CALL    $2205
221E: 8B                 CALT    ($0096)
221F: 05 03 7F           ANIW    VV:03,$7F
2222: 34 01 99           LXI     HL,$9901
2225: EA = [HL];
2227: 70 2F 3B 99        LDED    $993B
222B: 74 C6              DADD    EA,DE
222D: 48 93              STEAX   (HL)
222F: 55 09 10           OFFIW   VV:09,$10
2232: 15 11 10           ORIW    VV:11,$10
2235: 55 08 20           OFFIW   VV:08,$20
2238: 15 11 08           ORIW    VV:11,$08
223B: 34 08 98           LXI     HL,$9808
223E: EA = [HL];
2240: 70 3F 39 99        LHLD    $9939
2244: A = VV[0x15];
2246: 55 05 80           OFFIW   VV:05,$80
2249: 40 54 22           CALL    $2254
224C: 3D                 STAX    (HL+)
224D: 48 95              STEAX   (HL++)
224F: 70 3E 39 99        SHLD    $9939
2253: return 0;
2254: 77 20              EQI     A,$20
2256: D7                 JR      $226E
2257: 5B 03              BIT     3,VV:03
2259: C5                 JR      $225F
225A: 70 3E 45 99        SHLD    $9945
225E: return 0;
225F: push(EA);
2260: push(HL);
2261: 34 47 99           LXI     HL,$9947
2264: EA = [HL];
2266: 74 C6              DADD    EA,DE
2268: 48 93              STEAX   (HL)
226A: 20 33              INRW    VV:33
226C: HL = pop();
226D: EA = pop();
226E: 05 03 F7           ANIW    VV:03,$F7
2271: return 0;

int func_2272(void)
{
	EA = [0x9935];
	HL = [0x9937];
	if (EA == HL)
		return 0;
	if (VV[0x00] & 0x04) {
		A  = [HL++];
		EA = [HL  ];
		HL -= 4;
	} else {
		A  = [HL++];
		EA = [HL++];
	}
	[0x9937] = HL;
	return 1;
}

2291: push(EA);
2292: 40 05 22           CALL    $2205
2295: 8B                 CALT    ($0096)
2296: EA = pop();
2297: 55 07 40           OFFIW   VV:07,$40
229A: 15 11 20           ORIW    VV:11,$20
229D: 01 09              LDAW    VV:09
229F: 17 01              ORI     A,$01
22A1: 70 3F 39 99        LHLD    $9939
22A5: 48 95              STEAX   (HL++)
22A7: 3D                 STAX    (HL+)
22A8: 70 3E 39 99        SHLD    $9939
22AC: 70 3E 45 99        SHLD    $9945
22B0: 34 01 99           LXI     HL,$9901
22B3: EA = [HL];
22B5: 70 2F 3B 99        LDED    $993B
22B9: 74 C6              DADD    EA,DE
22BB: 48 93              STEAX   (HL)
22BD: HL = 0x0000;
22C0: 70 3E 33 98        SHLD    $9833
22C4: 70 3E 47 99        SHLD    $9947
22C8: return 0;
22C9: push(BC);
22CA: 40 E6 22           CALL    $22E6
22CD: 55 07 40           OFFIW   VV:07,$40
22D0: C7                 JR      $22D8
22D1: 74 5A 04           OFFI    B,$04
22D4: 69 06              MVI     A,$06
22D6: 69 0C              MVI     A,$0C
22D8: 69 10              MVI     A,$10
22DA: 84                 CALT    ($0088)
22DB: BC = pop();
22DC: 74 5A 01           OFFI    B,$01
22DF: return 0;
22E0: 74 5B 08           OFFI    C,$08
22E3: 48 A4              DSLL    EA
22E5: return 0;
22E6: 74 4A 01           ONI     B,$01
22E9: goto 22EE
22EA: EAL = A;
22EB: A = C;
22EC: EAH = A;
22ED: return 0;
22EE: 55 07 40           OFFIW   VV:07,$40
22F1: C7                 JR      $22F9
22F2: 74 5B 80           OFFI    C,$80
22F5: 69 0A              MVI     A,$0A
22F7: 69 0C              MVI     A,$0C
22F9: 69 09              MVI     A,$09
22FB: 74 5A 04           OFFI    B,$04
22FE: 46 02              ADI     A,$02
EA = 0x0000;
EAL = A;
return 0;

2305:
[0xC004] &= 0xFE;
2308:
[0xC004] |= 0x02;
return 0;

230C:
230E: [0xC004] |= 0x01;
2312: return 0;
2313: 34 00 04           LXI     HL,$0400
2316: 70 3E 5B 99        SHLD    $995B
231A: 44 00 90           LXI     EA,$9000
231D: 14 FE 07           LXI     BC,$07FE
2320: 9C                 CALT    ($00B8)
2321: return 0;
2322: 55 12 80           OFFIW   VV:12,$80
2325: 54 5C 12           JMP     $125C
2328: 24 5B 99           LXI     DE,$995B
232B: EA = [DE];
232D: 34 00 04           LXI     HL,$0400
2330: 74 EF              DNE     EA,HL
2332: return 0;
2333: EA++;
2334: [DE] = EA;
2336: 70 2F 5F 99        LDED    $995F
233A: EA = [DE];
233C: 34 25 99           LXI     HL,$9925
233F: 48 93              STEAX   (HL)
2341: EA = 0x0000;
2344: [DE++] = EA;
2346: 9A                 CALT    ($00B4)
2347: 70 2E 5F 99        SDED    $995F
234B: return 1;

234C:
	VV[0x40] &= 0xBF;
	EA = 0x0100;
	DE = [0x995B];
74 AE              DGT     EA,DE
	goto 235D;
	VV[0x40] |= 0x40;
	return 1;
235D:
	55 40 10           OFFIW   VV:40,0x10
	goto 237A;
	VV[0x40] = 0x00;
	A = 0x00;
	[0xc000] = A;
	VV[0x3c] = A;
	VV[0x3d] = A;
	if (!func_2272())
		return 0;
	HL = 0x9837;
	[HL++] =  A;
	[HL  ] = EA; /* VV[0x38] */
	BC = EA;
237A:
	func_2436();
	4E 21              JRE     $23A0
	37 B0              LTI     A,$B0
	37 B3              LTI     A,$B3
	goto 2387;
	VV[0x40] |= 0x80;
2387:
	func_22E6();
	55 39 02           OFFIW   VV:39,$02
	48 25              SLL     A
	63 3A              STAW    VV:3A
	40 D0 24           CALL    $24D0
	34 65 99           LXI     HL,$9965
	40 86 26           CALL    $2686
	40 EF 25           CALL    $25EF
	40 2A 26           CALL    $262A
23A0:
	01 3A              LDAW    VV:3A
	36 01              SUINB   A,$01
	return 1;
	74 C0 3D           ADDW    VV:3D
	63 3A              STAW    VV:3A
	70 2F 5D 99        LDED    $995D
	65 37 20           NEIW    VV:37,$20
	4E 2B              JRE     $23DE
	5A 00              BIT     2,VV:00
	D1                 JR      $23C7
	40 18 24           CALL    $2418
	70 3F 59 99        LHLD    $9959
23BD:
	HL--;
	HL--;
	EA = [HL];
	BC = EA;
	40 F1 23           CALL    $23F1
	F7                 JR      $23BD
	D2                 JR      $23D9
23C7:
	58 40              BIT     0,VV:40
	34 65 99           LXI     HL,$9965
	34 ED 99           LXI     HL,$99ED
23CF:
	48 85              LDEAX   (HL++)
	BC = EA;
40 F1 23           CALL    $23F1
23D5: F9                 JR      $23CF
23D6: 40 18 24           CALL    $2418
23D9: 70 2E 5D 99        SDED    $995D
23DD: return 1;
23DE: 55 00 04           OFFIW   VV:00,$04
23E1: 40 18 24           CALL    $2418
23E4: 14 00 00           LXI     BC,$0000
23E7: 40 F1 23           CALL    $23F1
23EA: F9                 JR      $23E4
23EB: 5A 00              BIT     2,VV:00
23ED: 40 18 24           CALL    $2418
23F0: E8                 JR      $23D9
23F1: 5C 38              BIT     4,VV:38
23F3: D1                 JR      $2405
23F4: 55 38 04           OFFIW   VV:38,$04
23F7: goto 2403
23F8: 5A 00              BIT     2,VV:00
23FA: C5                 JR      $2400
23FB: 74 5D 02           OFFI    E,$02
23FE: goto 2403
23FF: C5                 JR      $2405
2400: 74 4D 02           ONI     E,$02
2403: 6B 80              MVI     C,$80
2405: EA = [DE];
2407: 74 9D              DOR     EA,BC
2409: [DE++] = EA;
240B: 9A                 CALT    ($00B4)
240C: push(HL);
240D: 34 5B 99           LXI     HL,$995B
2410: disable_interrupts();
2411: 9F                 CALT    ($00BE)
2412: enable_interrupts();
2413: HL = pop();
2414: 30 3A              DCRW    VV:3A
2416: return 0;
2417: return 1;
2418: 01 3D              LDAW    VV:3D
241A: CD                 JR      $2428
241B: 23                 DCX     DE
241C: 23                 DCX     DE
241D: 9A                 CALT    ($00B4)
241E: 34 5B 99           LXI     HL,$995B
2421: disable_interrupts();
2422: EA = [HL];
2424: EA++;
2425: 48 93              STEAX   (HL)
2427: enable_interrupts();
2428: 51                 DCR     A
2429: F1                 JR      $241B
242A: return 0;
242B: 74 6C 98           NEI     D,$98
242E: 6C 90              MVI     D,$90
2430: 74 6C 8F           NEI     D,$8F
2433: 6C 97              MVI     D,$97
2435: return 0;

2436: 5C 40              BIT     4,VV:40
2438: goto 243F;
2439: 70 1F 61 99        LBCD    $9961
243D: goto 2482;
243F: 58 39              BIT     0,VV:39
2441: 55 10 50           OFFIW   VV:10,$50
	VV[0x38] &= 0xef;
2447: 58 39              BIT     0,VV:39
2449: goto 2457;
244A: 70 1F 37 98        LBCD    $9837
244E: A5                 DMOV    EA,BC
244F: 55 39 02           OFFIW   VV:39,$02
2452: 48 A4              DSLL    EA
2454: BC = EA;
2455: goto 2482;
2457: 55 05 08           OFFIW   VV:05,$08
245A: 77 20              EQI     A,$20
245C: goto 2462;
245D: 40 A0 24           CALL    $24A0
2460: goto 2482;
2462: 67 20              NEI     A,$20
2464: goto 2472;
2465: 5C 10              BIT     4,VV:10
2467: goto 246B;
2468: 5C 39              BIT     4,VV:39
246A: goto 2472;
246B: 55 10 40           OFFIW   VV:10,$40
246E: 55 38 20           OFFIW   VV:38,$20
2471: return 1;
2472: 40 E6 22           CALL    $22E6
2475: 55 39 02           OFFIW   VV:39,$02
2478: 48 25              SLL     A
247A: 55 38 08           OFFIW   VV:38,$08
247D: 48 25              SLL     A
247F: C = A;
2480: 6A 00              MVI     B,$00
2482: 74 7A 00           EQI     B,$00
2485: C5                 JR      $248B
2486: 05 40 EF           ANIW    VV:40,$EF
2489: A = C;
248A: C5                 JR      $2490
248B: 15 40 10           ORIW    VV:40,$10
248E: 69 FF              MVI     A,$FF
2490: 60 33              SUBNB   C,A
2492: 52                 DCR     B
2493: 70 1E 61 99        SBCD    $9961
2497: 63 3A              STAW    VV:3A
2499: VV[0x3d] = 0x00;
249C: VV[0x37] = 0x20;
249F: return 0;
24A0: 34 37 99           LXI     HL,$9937
24A3: EA = [HL];
24A5: 5A 00              BIT     2,VV:00
24A7: goto 24AC
24A8: EA++;
24A9: EA++;
24AA: EA++;
24AB: goto 24AF
24AC: A9                 DCX     EA
24AD: A9                 DCX     EA
24AE: A9                 DCX     EA
24AF: 70 3F 45 99        LHLD    $9945
24B3: 74 AF              DGT     EA,HL
24B5: return 1;
24B6: 34 53 99           LXI     HL,$9953
24B9: EA = [HL];
24BB: 5A 00              BIT     2,VV:00
24BD: C9                 JR      $24C7
24BE: 01 35              LDAW    VV:35
24C0: 74 A8 36           GTAW    VV:36
24C3: EA++;
24C4: 30 35              DCRW    VV:35
24C6: C7                 JR      $24CE
24C7: 65 36 00           NEIW    VV:36,$00
24CA: goto 24CE
24CB: EA++;
24CC: 30 36              DCRW    VV:36
24CE: BC = EA;
24CF: return 0;

24D0:
	if (VV[0x38] & 0x02)
		goto 2583;
	A = VV[0x37]
	EA = 0x3401; /* IMPORTANT */
	if (!(VV[0x38] & 0x40))
		EA = 0x3301;
	HL = EA = [EA + A + A];
	VV[0x3f] = [HL++];
	if (!(VV[0x39] & 0x02))
		goto 250A;
	if (  VV[0x38] & 0x01 )
		goto 250A;
	if (!(VV[0x3f] & 0x02))
		goto 250A;
	40 BF 25           CALL    $25BF
	func_26A6();
	func_26B0();
	EA = HL;
	A = VV[0x3b];
	if (B & 0x80)
		A += 0x03;
	EA += A;
	goto 2818;
250A:
	A = [HL];
	47 80              ONI     A,$80
	15 40 02           ORIW    VV:40,$02
	55 39 02           OFFIW   VV:39,$02
	D9                 JR      $252D
	55 39 80           OFFIW   VV:39,$80
	5B 3F              BIT     3,VV:3F
	D3                 JR      $252D
	5A 3F              BIT     2,VV:3F
	4E 5B              JRE     $2579
	5E 07              BIT     6,VV:07
2520:
	if (!(VV[0x38] & 0x80))
		goto 2579;
	71 3B 08           MVIW    VV:3B,$08
	40 C1 25           CALL    $25C1
	DD                 JR      $254A
252D:
	55 07 40           OFFIW   VV:07,$40
	5C 3F              BIT     4,VV:3F
	C7                 JR      $253A
	71 3B 08           MVIW    VV:3B,$08
	40 C5 25           CALL    $25C5
	D0                 JR      $254A
253A:
	5D 3F              BIT     5,VV:3F
	D0                 JR      $254D
	5E 07              BIT     6,VV:07
	55 38 80           OFFIW   VV:38,$80
	C1                 JR      $2544
	C9                 JR      $254D
2544:
	71 3B 09           MVIW    VV:3B,$09
	40 C7 25           CALL    $25C7
254A:
	54 C9 27           JMP     $27C9
254D:
	HL++;
	5E 3F              BIT     6,VV:3F
	DE                 JR      $256F
	71 3B 0B           MVIW    VV:3B,$0B
	A = [HL++];
	55 40 80           OFFIW   VV:40,$80
	DB                 JR      $2574
	55 38 80           OFFIW   VV:38,$80
	goto 2567
	5B 38              BIT     3,VV:38
	5E 07              BIT     6,VV:07
	D2                 JR      $2574
	44 00 20           LXI     EA,$2000
	EAL = A;
	goto 256A
2567:
	44 00 60           LXI     EA,$6000
256A:
	func_25E2(EA);
	4F DB              JRE     $254A
256F:
	71 3B 09           MVIW    VV:3B,$09
	HL++;
	A = [HL++];
2574:
	return func_25E2(A); /* lower byte only */
	4F D1              JRE     $254A
2579:
	40 C3 25           CALL    $25C3
	69 09              MVI     A,$09
	63 3B              STAW    VV:3B
	HL++;
	A = [HL++];
	F1                 JR      $2574
2583:
	70 6A 37 98        MOV     B,($9837)
	74 62 3A           SUI     B,$3A
	40 C2 1A           CALL    $1AC2
	59 39              BIT     1,VV:39
	4E 1C              JRE     $25AD
	A = [HL++];
	63 3B              STAW    VV:3B
	71 3C 00           MVIW    VV:3C,$00
	44 0E 00           LXI     EA,$000E
	EA += HL;
	24 E9 26           LXI     DE,$26E9
	5F 38              BIT     7,VV:38
	24 E8 26           LXI     DE,$26E8
	70 2E 63 99        SDED    $9963
	6A 80              MVI     B,$80
	54 18 28           JMP     $2818
25AD:
	71 3B 0B           MVIW    VV:3B,$0B
	A = [HL++];
	if (!(A & 0x80))
		VV[0x40] |= 0x02;
	44 00 20           LXI     EA,$2000
	func_25E2(EA);
	54 C9 27           JMP     $27C9
25BF:
	69 FC              MVI     A,$FC
25C1:
	69 F8              MVI     A,$F8
25C3:
	69 F0              MVI     A,$F0
25C5:
	69 E0              MVI     A,$E0
25C7:
	69 C0              MVI     A,$C0
	A &= VV[0x3f];
	A ^= 0xff;
	B = A;
	EA = HL;
	DE = 0x354F; /* IMPORTANT */
	for (int i = 0; i < 6; i++) {
		A = [DE++];
		if (B & 0x80)
			EA += A;
		B <<= 1;
	}
	HL = EA;
	return 0;

void func_25E2(EA)
{
	if (!(VV[0x07] & 0x40))
		if (!(VV[0x38] & 0x80))
			return;
	[C001] = EA;
	return;
}

25EF:
	if (!(VV[0x38] & 0x0c))
		return 0;
	EA = 0x0000;
	70 2F 59 99        LDED    $9959
	[DE++] = EA;
	[DE  ] = EA;
	34 65 99           LXI     HL,$9965
	24 ED 99           LXI     DE,$99ED
	push(DE);
	15 40 01           ORIW    VV:40,$01
	01 3A              LDAW    VV:3A
	B = A;
	55 38 08           OFFIW   VV:38,$08
	48 25              SLL     A
	63 3A              STAW    VV:3A
	A = B;
	74 C0 3D           ADDW    VV:3D
	14 00 00           LXI     BC,$0000
	59 39              BIT     1,VV:39
	C6                 JR      $2622
	5A 38              BIT     2,VV:38
	goto 2622
	40 BF 28           CALL    $28BF
2622:
	40 BC 28           CALL    $28BC
2625: HL = pop();
2626: 40 86 26           CALL    $2686
2629: return 0;
262A: 55 39 02           OFFIW   VV:39,$02
262D: 5F 39              BIT     7,VV:39
262F: return 0;
2630: 58 40              BIT     0,VV:40
2632: C7                 JR      $263A
2633: 24 65 99           LXI     DE,$9965
2636: 34 ED 99           LXI     HL,$99ED
2639: C6                 JR      $2640
263A: 24 ED 99           LXI     DE,$99ED
263D: 34 65 99           LXI     HL,$9965
2640: push(HL);
2641: push(HL);
2642: push(DE);
2643: 01 3A              LDAW    VV:3A
2645: 74 C0 3D           ADDW    VV:3D
2648: 51                 DCR     A
2649: 63 3B              STAW    VV:3B
264B: C = A;
264C: HL++;
264D: A = [HL++];
264E: [DE++] = A;
264F: 53                 DCR     C
2650: FB                 JR      $264C
2651: HL = pop();
2652: 44 44 00           LXI     EA,$0044
2655: EA += HL;
2657: 14 42 00           LXI     BC,$0042
265A: 9C                 CALT    ($00B8)
265B: push(EA);
265C: B = 0x01;
265E: EA++;
265F: DE = EA;
2660: push(HL);
2661: 01 3B              LDAW    VV:3B
2663: C = A;
2664: A = [HL++];
2665: 60 8A              ANA     A,B
2667: 70 9A              ORAX    (DE)
2669: [DE++] = A;
266A: 53                 DCR     C
266B: F8                 JR      $2664
266C: HL = pop();
266D: 48 26              SLL     B
266F: 48 0A              SK      CY
2671: EC                 JR      $265E
2672: HL = pop();
2673: DE = pop();
2674: 01 3B              LDAW    VV:3B
2676: C = A;
2677: A = [HL++];
2678: 22                 INX     DE
2679: [DE++] = A;
267A: 53                 DCR     C
267B: FB                 JR      $2677
267C: 6B 07              MVI     C,$07
267E: 69 00              MVI     A,$00
2680: [DE++] = A;
2681: A = [HL++];
2682: [DE++] = A;
2683: 53                 DCR     C
2684: F9                 JR      $267E
2685: HL = pop();
2686: 69 00              MVI     A,$00
2688: 70 79 00 C0        MOV     ($C000),A
268C: EA = DE;
268D: 74 E7              DSUB    EA,HL
268F: A = EAL;
2690: 48 21              SLR     A
2692: B = A;
2693: 01 3A              LDAW    VV:3A
2695: 60 B2              SUBNB   A,B
2697: C5                 JR      $269D
2698: 51                 DCR     A
2699: 40 EA 2A           CALL    $2AEA
269C: goto 26A1
269D: 48 3A              NEGA    
269F: 63 3D              STAW    VV:3D
26A1: 70 2E 59 99        SDED    $9959
26A5: return;

void func_26A6(void)
{
	B = A = [HL++];
	A &= 0x1f; /* 0001 1111 */
	VV[0x3C] = A;
	A = [HL++];
	VV[0x3B] = A;
	return;
}

void func_26B0(void)
{
	if (!(VV[0x38] & 0x80)) {
		HL += 3;
		[0x9963] = DE;
		return;
	}
	if (!(B & 0x40)) {
		[0x9963] = HL;
		HL += 3;
		return;
	}
	if (B & 0x80)
		A += 0x03;
	A <<= 1;
	A += 0x03;
	EA = HL;
	EA += A;
	HL = EA;
	func_26A6();
	[0x9963] = DE;
	return;
}

26DB: push(HL);
26DC: 70 3F 63 99        LHLD    $9963
26E0: 24 01 C0           LXI     DE,$C001
26E3: 6B 02              MVI     C,$02
26E5: 31                 BLOCK   
26E6: HL = pop();
26E7: return;
26E8: 00                 NOP     
26E9: 00                 NOP     
26EA: 00                 NOP     
26EB: 1F                 MOV     L,A
26EC: 55 39 40           OFFIW   VV:39,$40
26EF: 4E 32              JRE     $2723
26F1: 55 10 40           OFFIW   VV:10,$40
26F4: HL = EA;
26F5: 44 ED 99           LXI     EA,$99ED
26F8: 69 00              MVI     A,$00
26FA: 70 79 00 C0        MOV     ($C000),A
26FE: 74 4A 80           ONI     B,$80
2701: goto 270C
2702: 6B 01              MVI     C,$01
2704: 59 38              BIT     1,VV:38
2706: 6B 02              MVI     C,$02
2708: 24 01 C0           LXI     DE,$C001
270B: 31                 BLOCK   
270C: DE = EA;
270D: 01 3B              LDAW    VV:3B
270F: C = A;
2710: EA = 0x0000;
2713: CD                 JR      $2721
2714: 70 69 00 C0        MOV     A,($C000)
2718: [DE++] = A;
2719: A = [HL++];
271A: [DE++] = A;
271B: 55 38 02           OFFIW   VV:38,$02
271E: [DE++] = EA;
2720: 53                 DCR     C
2721: F2                 JR      $2714
2722: return;
2723: push(BC);
2724: push(EA);
2725: 44 65 99           LXI     EA,$9965
2728: 40 F8 26           CALL    $26F8
272B: HL = pop();
272C: BC = pop();
272D: 44 ED 99           LXI     EA,$99ED
2730: 40 F8 26           CALL    $26F8
2733: 34 65 99           LXI     HL,$9965
2736: 24 ED 99           LXI     DE,$99ED
2739: 70 6B 3B 98        MOV     C,($983B)
273D: 55 38 02           OFFIW   VV:38,$02
2740: 48 27              SLL     C
2742: 5E 10              BIT     6,VV:10
2744: 4E 72              JRE     $27B8
2746: 4E 35              JRE     $277D
2748: push(BC);
2749: 6A 00              MVI     B,$00
274B: HL++;
274C: AB 01              LDAX    (DE+$01)
274E: C = A;
274F: A = [HL++];
2750: 47 40              ONI     A,$40
2752: 74 5B 80           OFFI    C,$80
2755: 74 1A 80           ORI     B,$80
2758: 47 20              ONI     A,$20
275A: 74 5B 20           OFFI    C,$20
275D: 74 1A 40           ORI     B,$40
2760: 47 08              ONI     A,$08
2762: 74 5B 10           OFFI    C,$10
2765: 74 1A 20           ORI     B,$20
2768: 74 5B 04           OFFI    C,$04
276B: 74 1A 10           ORI     B,$10
276E: 57 01              OFFI    A,$01
2770: 74 1A 08           ORI     B,$08
2773: 2A                 LDAX    (DE)
2774: 57 80              OFFI    A,$80
2776: 74 1A 04           ORI     B,$04
2779: 40 BC 27           CALL    $27BC
277C: BC = pop();
277D: 53                 DCR     C
277E: 4F C8              JRE     $2748
2780: return 0;
2781: push(BC);
2782: 6A 00              MVI     B,$00
2784: A = [HL++];
2785: 57 80              OFFI    A,$80
2787: 74 1A 04           ORI     B,$04
	AB 01              LDAX    (DE+$01)
	C = A;
	A = [HL++];
	57 80              OFFI    A,$80
	74 1A 80           ORI     B,$80
	74 5B 40           OFFI    C,$40
	74 1A 40           ORI     B,$40
	57 10              OFFI    A,$10
	74 1A 20           ORI     B,$20
	47 04              ONI     A,$04
	74 5B 08           OFFI    C,$08
	74 1A 10           ORI     B,$10
	47 02              ONI     A,$02
	74 5B 02           OFFI    C,$02
	74 1A 08           ORI     B,$08
	74 5B 01           OFFI    C,$01
	74 1A 04           ORI     B,$04
	40 BC 27           CALL    $27BC
	BC = pop();
27B8:
	53                 DCR     C
	4F C6              JRE     $2781
	return 0;

27BC:
	EA = 0x0000;
	A = B;
	EAH = A;
	5D 39              BIT     5,VV:39
	40 49 00           CALL    $0049
	[DE++] = EA;
	return 0;

27C9: 45 40 80           ONIW    VV:40,$80
27CC: 55 39 40           OFFIW   VV:39,$40
27CF: goto 27DA
27D0: 59 39              BIT     1,VV:39
27D2: C7                 JR      $27DA
27D3: 5C 10              BIT     4,VV:10
27D5: 5E 10              BIT     6,VV:10
27D7: C2                 JR      $27DA
27D8: 4E 75              JRE     $284F
27DA: 24 65 99           LXI     DE,$9965
27DD: 6A 00              MVI     B,$00
27DF: 40 E8 27           CALL    $27E8
27E2: 40 03 28           CALL    $2803
27E5: return 0;
27E6: 63 3B              STAW    VV:3B
27E8: D6                 JR      $27FF
27E9:
	A = B;
	A ^= 0xff;
	70 8D              ANAX    (HL+)
	70 6B 00 C0        MOV     C,($C000)
	74 5B 80           OFFI    C,$80
	C9                 JR      $27FF
	B = A;
	9B                 CALT    ($00B6)
	59 39              BIT     1,VV:39
	goto 27FF
	69 00              MVI     A,$00
	B = A;
	9B                 CALT    ($00B6)
27FF:
	30 3B              DCRW    VV:3B
	E7                 JR      $27E9
	return 0;
2803:
	5E 07              BIT     6,VV:07
	5B 39              BIT     3,VV:39
	return 0;
	A = 0x01;
	55 39 04           OFFIW   VV:39,$04
	46 02              ADI     A,$02
	47 80              ONI     A,$80
	67 00              NEI     A,$00
	return 0;
	HL--;
	HL--;
	HL--;
	return 1;
2818:
	40 EC 26           CALL    $26EC
	40 DB 26           CALL    $26DB
	24 65 99           LXI     DE,$9965
	01 3C              LDAW    VV:3C
	51                 DCR     A
	40 EA 2A           CALL    $2AEA
	34 ED 99           LXI     HL,$99ED
	01 3B              LDAW    VV:3B
	48 25              SLL     A
	55 38 02           OFFIW   VV:38,$02
	63 3B              STAW    VV:3B
	14 FF FF           LXI     BC,$FFFF
	D3                 JR      $284A
2837:
	48 85              LDEAX   (HL++)
	70 69 00 C0        MOV     A,($C000)
	57 80              OFFI    A,$80
	goto 284A;
	74 8D              DAN     EA,BC
	[DE++] = EA;
	14 FF FF           LXI     BC,$FFFF
	74 95              DXR     EA,BC
	BC = EA;
284A:
	30 3B              DCRW    VV:3B
	goto 2837;
	return 0;
284F:
	24 ED 99           LXI     DE,$99ED
2852: 70 6B 3B 98        MOV     C,($983B)
2856: 53                 DCR     C
2857: 31                 BLOCK   
2858: 40 03 28           CALL    $2803
285B: goto 2864;
285C: C = A;
285D: 74 C0 3B           ADDW    VV:3B
2860: 63 3B              STAW    VV:3B
2862: 53                 DCR     C
2863: 31                 BLOCK   
2864: 34 ED 99           LXI     HL,$99ED
2867: 24 65 99           LXI     DE,$9965
286A: EA = 0x0000;
286D: 30 3B              DCRW    VV:3B
286F: A = [HL++];
2870: B = A;
2871: 70 6B 00 C0        MOV     C,($C000)
2875: 74 4B 80           ONI     C,$80
2878: D0                 JR      $2889
2879: 30 3B              DCRW    VV:3B
287B: F3                 JR      $286F
287C: return 0;
287D: 40 65 29           CALL    $2965
2880: 40 09 29           CALL    $2909
2883: 9B                 CALT    ($00B6)
2884: EAH = A;
2885: A = B;
2886: EAL = A;
2887: A = C;
2888: B = A;
2889: 75 3B 00           EQIW    VV:3B,$00
288C: goto 2890
288D: 6B 00              MVI     C,$00
288F: CD                 JR      $289D
2890: A = [HL++];
2891: 70 6B 00 C0        MOV     C,($C000)
2895: 74 4B 80           ONI     C,$80
2898: goto 289C
2899: 30 3B              DCRW    VV:3B
289B: ED                 JR      $2889
289C: C = A;
289D: 40 58 29           CALL    $2958
28A0: 40 09 29           CALL    $2909
28A3: 9B                 CALT    ($00B6)
28A4: EAH = A;
28A5: 30 3B              DCRW    VV:3B
28A7: 4F D4              JRE     $287D
28A9: return 0;
28AA: 48 85              LDEAX   (HL++)
28AC: push(EA);
28AD: 74 9D              DOR     EA,BC
28AF: [DE++] = EA;
28B1: 5B 38              BIT     3,VV:38
28B3: C7                 JR      $28BB
28B4: 5A 38              BIT     2,VV:38
28B6: EA = 0x0000;
28B9: [DE++] = EA;
28BB: BC = pop();
28BC: 51                 DCR     A
28BD: EC                 JR      $28AA
28BE: return 0;
28BF: 41                 INR     A
28C0: 70 1E 57 99        SBCD    $9957
28C4: A5                 DMOV    EA,BC
28C5: push(EA);
28C6: 48 85              LDEAX   (HL++)
28C8: push(EA);
28C9: 74 9D              DOR     EA,BC
28CB: 5B 38              BIT     3,VV:38
28CD: D3                 JR      $28E1
28CE: 70 1F 57 99        LBCD    $9957
28D2: push(BC);
28D3: BC = EA;
28D4: 70 1E 57 99        SBCD    $9957
28D8: BC = pop();
28D9: 74 9D              DOR     EA,BC
28DB: [DE++] = EA;
28DD: EA = 0x0000;
28E0: goto 28EC
28E1: push(EA);
28E2: 14 FF FF           LXI     BC,$FFFF
28E5: EA = [HL];
28E7: 74 95              DXR     EA,BC
28E9: BC = pop();
28EA: 74 8D              DAN     EA,BC
28EC: [DE++] = EA;
28EE: EA = pop();
28EF: BC = pop();
28F0: 51                 DCR     A
28F1: 4F D2              JRE     $28C5
28F3: return 1;
28F4: 40 11 29           CALL    $2911
28F7: EA = 0x0000;
28FA: EAH = A;
28FB: 55 40 02           OFFIW   VV:40,$02
28FE: 48 A0              DSLR    EA
2900: 55 39 40           OFFIW   VV:39,$40
2903: 40 25 29           CALL    $2925
2906: [DE++] = EA;
2908: return 0;
2909: 5C 39              BIT     4,VV:39
290B: return 0;
290C: 57 02              OFFI    A,$02
290E: 17 01              ORI     A,$01
2910: return 0;
2911: 55 10 10           OFFIW   VV:10,$10
2914: 5C 39              BIT     4,VV:39
2916: return 0;
2917: 55 40 80           OFFIW   VV:40,$80
291A: C7                 JR      $2922
291B: 47 01              ONI     A,$01
291D: 69 00              MVI     A,$00
291F: 69 0F              MVI     A,$0F
2921: return 0;
2922: A &= 0x0f;
2924: return 0;
2925: push(BC);
2926: 6B 00              MVI     C,$00
2928: 55 10 40           OFFIW   VV:10,$40
292B: 48 A4              DSLL    EA
292D: A = EAH;
292E: 57 80              OFFI    A,$80
2930: 74 1B 80           ORI     C,$80
2933: 57 20              OFFI    A,$20
2935: 74 1B 40           ORI     C,$40
2938: 57 08              OFFI    A,$08
293A: 74 1B 20           ORI     C,$20
293D: 57 02              OFFI    A,$02
293F: 74 1B 10           ORI     C,$10
2942: 55 10 40           OFFIW   VV:10,$40
2945: C6                 JR      $294C
2946: A = EAL;
2947: 57 80              OFFI    A,$80
2949: 74 1B 08           ORI     C,$08
294C: EA = 0x0000;
294F: A = C;
2950: EAH = A;
2951: 5D 39              BIT     5,VV:39
2953: 40 47 00           CALL    $0047
2956: BC = pop();
2957: return 0;
2958: push(DE);
2959: push(HL);
295A: 40 8C 29           CALL    $298C
295D: 40 B8 29           CALL    $29B8
2960: 60 9C              ORA     A,D
2962: HL = pop();
2963: DE = pop();
2964: return 0;
2965: push(DE);
2966: push(HL);
2967: A = B;
2968: 40 B8 29           CALL    $29B8
296B: 1C                 MOV     D,A
296C: A = C;
296D: A &= 0x7f;
296F: A = [HL+A];
2970: 74 4B 80           ONI     C,$80
2973: A &= 0x7f;
2975: D |= A;
2977: 74 14 FF           XRI     D,$FF
297A: A = B;
297B: 48 25              SLL     A
297D: 60 8B              ANA     A,C
297F: 1E                 MOV     H,A
2980: A = C;
2981: 48 25              SLL     A
2983: 60 8A              ANA     A,B
2985: 60 9E              ORA     A,H
2987: 60 8C              ANA     A,D
2989: HL = pop();
298A: DE = pop();
298B: return 0;

298C:
void func_298C(void)
{
	A = EAL;
	48 25              SLL     A
	60 8B              ANA     A,C
	1C                 MOV     D,A
	A = EAL;
	E = A;
	A = C;
	48 25              SLL     A
	60 8D              ANA     A,E
	D |= A;
	A = B;
	48 25              SLL     A
	A |= B;
	E = A;
	push(BC);
	HL = 0x2A52;
	A = EAL;
	40 C4 29           CALL    $29C4
	E |= A;
	A = C;
	40 C4 29           CALL    $29C4
	A |= E;
	A ^= 0xff;
	60 0C              ANA     D,A
	BC = pop();
	A = B;
	return;
}

29B8:
void func_29B8(void)
{
	HL = 0x29D2;
	A &= 0x7f;
	A = [HL+A];
	if (!(B & 0x80))
		A &= 0x7f; /* 0111 1111 */
	return;
}

29C4:
void func_29C4(void)
{
	if (A == 0x7c)
		A = 0xfc;
	B = A;
	A &= 0x7f;
	A = [HL+A];
	if (!(B & 0x80))
		A &= 0xbf; /* 1011 1111 */
	return;
}

29D2: DW: 00 00 00 02 00 00 04 06 00 00 00 02 08 08 0C 0E
29E2: DW: 00 00 00 02 00 00 04 06 10 10 10 12 18 18 1C 1E
29F2: DW: 00 00 00 02 00 00 04 06 00 00 00 02 08 08 0C 0E
2A02: DW: 20 20 20 22 20 20 24 26 30 30 30 32 38 38 3C 3E
2A12: DW: 80 80 80 82 80 80 84 86 80 80 80 82 88 88 8C 8E
2A22: DW: 80 80 80 82 80 80 84 86 90 90 90 92 98 98 9C 9E
2A32: DW: C0 C0 C0 C2 C0 C0 C4 C6 C0 C0 C0 C2 C8 C8 CC CE
2A42: DW: E0 E0 E0 E2 E0 E0 E4 E6 F0 F0 F0 F2 F8 F8 FC FE

2A52: DW: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04
2A62: DW: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 0C
2A72: DW: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04
2A82: DW: 00 00 00 00 00 00 00 00 00 00 00 00 18 10 18 1C
2A92: DW: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04
2AA2: DW: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 0C
2AB2: DW: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04
2AC2: DW: 40 40 40 40 40 40 40 40 60 60 60 60 78 70 78 7C

2AD2: 55 07 40           OFFIW   VV:07,$40
2AD5: C7                 JR      $2ADD
2AD6: 45 09 06           ONIW    VV:09,$06
2AD9: 69 06              MVI     A,$06
2ADB: 69 0C              MVI     A,$0C
2ADD: 69 00              MVI     A,$00
2ADF: 40 97 24           CALL    $2497
	VV[0x38] &= 0xef;
2AE5: 40 A0 23           CALL    $23A0
2AE8: 00                 NOP     
2AE9: return 0;
2AEA: EA = 0x0000;
2AED: 70 6A 00 C0        MOV     B,($C000)
2AF1: 74 5A 80           OFFI    B,$80
2AF4: C2                 JR      $2AF7
2AF5: [DE++] = EA;
2AF7: 51                 DCR     A
2AF8: F4                 JR      $2AED
2AF9: return 0;

2AFA: 40 8F 2E           CALL    $2E8F
2AFD: 69 20              MVI     A,$20
2AFF: 69 00              MVI     A,$00
2B01: B = A;
2B02: 70 6B 4F 98        MOV     C,($984F)
2B06: push(BC);
2B07: 90                 CALT    ($00A0)
2B08: 69 00              MVI     A,$00
2B0A: 69 10              MVI     A,$10
2B0C: BC = pop();
2B0D: A |= B;
2B0F: B = A;
2B10: 60 93              XRA     A,C
2B12: 47 30              ONI     A,$30
2B14: D8                 JR      $2B2D
2B15: 74 0B 4F           ANI     C,$4F
2B18: A = B;
2B19: 60 9B              ORA     A,C
2B1B: 63 4F              STAW    VV:4F
2B1D: 14 00 00           LXI     BC,$0000
2B20: 70 1E 4B 98        SBCD    $984B
2B24: 5D 4F              BIT     5,VV:4F
2B26: C6                 JR      $2B2D
2B27: 5C 4F              BIT     4,VV:4F
2B29: 15 14 02           ORIW    VV:14,$02
2B2C: C6                 JR      $2B33
2B2D: 55 4F 10           OFFIW   VV:4F,$10
2B30: 15 14 02           ORIW    VV:14,$02
2B33: 40 BF 32           CALL    $32BF
2B36: 69 05              MVI     A,$05
2B38: 70 79 07 C0        MOV     ($C007),A
2B3C: PC |= 0x04; /* 0000 0100 */
2B3F: delay(30);
2B42: PC &= 0xfb; /* 1111 1011 */
2B45: delay(25);
2B48: 5C 4F              BIT     4,VV:4F
2B4A: 55 4F 20           OFFIW   VV:4F,$20
2B4D: 69 0C              MVI     A,$0C
2B4F: 69 24              MVI     A,$24
2B51: 40 12 30           CALL    $3012
2B54: 40 1C 30           CALL    $301C
2B57: 15 13 02           ORIW    VV:13,$02
2B5A: 71 2C 24           MVIW    VV:2C,$24
2B5D: 14 00 00           LXI     BC,$0000
2B60: 70 1E 2B 99        SBCD    $992B
2B64: 71 26 00           MVIW    VV:26,$00
2B67: return 0;
2B68: 01 26              LDAW    VV:26
2B6A: 67 00              NEI     A,$00
2B6C: return 0;
2B6D: 4E 31              JRE     $2BA0
2B6F: 40 EC 32           CALL    $32EC
2B72: 54 79 2D           JMP     $2D79
2B75: 40 F3 32           CALL    $32F3
2B78: EA = [HL];
2B7A: 70 3F 2B 99        LHLD    $992B
2B7E: 74 E7              DSUB    EA,HL
2B80: BC = EA;
2B81: C6                 JR      $2B88
2B82: 70 6B 2C 98        MOV     C,($982C)
2B86: 6A 00              MVI     B,$00
2B88: push(BC);
2B89: 55 14 40           OFFIW   VV:14,$40
2B8C: 40 13 2C           CALL    $2C13
2B8F: 40 B0 31           CALL    $31B0
2B92: BC = pop();
2B93: 40 B8 2B           CALL    $2BB8
2B96: 01 26              LDAW    VV:26
2B98: A5                 DMOV    EA,BC
2B99: 70 61              ESUB    EA,A
2B9B: 48 0A              SK      CY
2B9D: D4                 JR      $2BB2
2B9E: 60 E3              SUB     A,C
2BA0: 46 0C              ADI     A,$0C
2BA2: 5D 4F              BIT     5,VV:4F
2BA4: 46 18              ADI     A,$18
2BA6: C = A;
2BA7: 6A 80              MVI     B,$80
2BA9: 91                 CALT    ($00A2)
2BAA: 44 0C 00           LXI     EA,$000C
2BAD: 5D 4F              BIT     5,VV:4F
2BAF: 44 24 00           LXI     EA,$0024
2BB2: BC = EA;
2BB3: 91                 CALT    ($00A2)
2BB4: 71 26 00           MVIW    VV:26,$00
2BB7: return 0;
2BB8: 05 03 FE           ANIW    VV:03,$FE
2BBB: 40 F3 32           CALL    $32F3
2BBE: EA = [HL];
2BC0: DE = EA;
2BC1: 34 2B 99           LXI     HL,$992B
2BC4: EA = [HL];
2BC6: 74 C5              DADD    EA,BC
2BC8: 74 BE              DLT     EA,DE
2BCA: CE                 JR      $2BD9
2BCB: 55 4F 20           OFFIW   VV:4F,$20
2BCE: 4E 2E              JRE     $2BFE
2BD0: 70 3F 2F 99        LHLD    $992F
2BD4: 74 BF              DLT     EA,HL
2BD6: DD                 JR      $2BF4
2BD7: 4E 25              JRE     $2BFE
2BD9: 05 13 FD           ANIW    VV:13,$FD
2BDC: push(HL);
2BDD: HL = 0x0000;
2BE0: 70 3E 75 9A        SHLD    $9A75
2BE4: HL = pop();
2BE5: 40 E5 32           CALL    $32E5
2BE8: C7                 JR      $2BF0
2BE9: HL = pop();
2BEA: 71 26 00           MVIW    VV:26,$00
2BED: 54 7D 2D           JMP     $2D7D
2BF0: 74 E6              DSUB    EA,DE
2BF2: 4F D4              JRE     $2BC8
2BF4: HL = EA;
2BF5: EA = DE;
2BF6: 74 E7              DSUB    EA,HL
2BF8: 74 C5              DADD    EA,BC
2BFA: BC = EA;
2BFB: EA = 0x0000;
2BFE: 34 2B 99           LXI     HL,$992B
2C01: 48 93              STEAX   (HL)
2C03: 34 4B 98           LXI     HL,$984B
2C06: EA = [HL];
2C08: 74 C5              DADD    EA,BC
2C0A: A = EAH;
2C0B: 57 C0              OFFI    A,$C0
2C0D: 44 FF 3F           LXI     EA,$3FFF
2C10: 48 93              STEAX   (HL)
2C12: return 0;
2C13: 40 08 2E           CALL    $2E08
2C16: D0                 JR      $2C27
2C17: 40 EC 32           CALL    $32EC
2C1A: 54 47 2D           JMP     $2D47
2C1D: 55 01 04           OFFIW   VV:01,$04
2C20: C6                 JR      $2C27
2C21: 40 7D 2D           CALL    $2D7D
2C24: 54 07 2D           JMP     $2D07
2C27: 05 14 FD           ANIW    VV:14,$FD
2C2A: return 0;
2C2B: 40 CF 32           CALL    $32CF
2C2E: 5E 14              BIT     6,VV:14
2C30: return 0;
2C31: 40 4E 10           CALL    $104E
2C34: 54 C2 0E           JMP     $0EC2
2C37: 40 CF 32           CALL    $32CF
2C3A: 40 4B 2E           CALL    $2E4B
2C3D: 00                 NOP     
2C3E: 90                 CALT    ($00A0)
2C3F: CC                 JR      $2C4C
2C40: 15 13 04           ORIW    VV:13,$04
2C43: 55 13 20           OFFIW   VV:13,$20
2C46: 40 C4 32           CALL    $32C4
2C49: 05 13 DF           ANIW    VV:13,$DF
2C4C: 14 E4 0F           LXI     BC,$0FE4
2C4F: 99                 CALT    ($00B2)
2C50: 40 79 2C           CALL    $2C79
2C53: 14 EB 0F           LXI     BC,$0FEB
2C56: 99                 CALT    ($00B2)
2C57: 40 A4 2C           CALL    $2CA4
2C5A: 14 F2 0F           LXI     BC,$0FF2
2C5D: 99                 CALT    ($00B2)
2C5E: 40 B2 2C           CALL    $2CB2
2C61: 54 B9 32           JMP     $32B9
2C64: 59 14              BIT     1,VV:14
2C66: C6                 JR      $2C6D
2C67: 5D 4F              BIT     5,VV:4F
2C69: return 0;
2C6A: 90                 CALT    ($00A0)
2C6B: return 0;
2C6C: return 1;
2C6D: 5A 13              BIT     2,VV:13
2C6F: return 1;
2C70: 90                 CALT    ($00A0)
2C71: return 0;
2C72: 5D 4F              BIT     5,VV:4F
2C74: 40 08 2E           CALL    $2E08
2C77: return 1;
2C78: return 0;
2C79: 40 64 2C           CALL    $2C64
2C7C: 4E 52              JRE     $2CD0
2C7E: 05 13 FB           ANIW    VV:13,$FB
2C81: 15 13 01           ORIW    VV:13,$01
2C84: 40 82 2B           CALL    $2B82
2C87: 40 7E 30           CALL    $307E
2C8A: 40 E4 0F           CALL    $0FE4
2C8D: return 0;
2C8E: 70 1F 0F 99        LBCD    $990F
2C92: 44 06 00           LXI     EA,$0006
2C95: 74 AD              DGT     EA,BC
2C97: F2                 JR      $2C8A
2C98: 40 E5 32           CALL    $32E5
2C9B: E8                 JR      $2C84
2C9C: 59 14              BIT     1,VV:14
2C9E: 40 08 2E           CALL    $2E08
2CA1: E2                 JR      $2C84
2CA2: 4E D9              JRE     $2D7D
2CA4: 40 EC 32           CALL    $32EC
2CA7: goto 2CB2
2CA8: 40 64 2C           CALL    $2C64
2CAB: C9                 JR      $2CB5
2CAC: 05 13 FB           ANIW    VV:13,$FB
2CAF: 54 6F 2B           JMP     $2B6F
2CB2: 55 14 02           OFFIW   VV:14,$02
2CB5: DA                 JR      $2CD0
2CB6: 5A 13              BIT     2,VV:13
2CB8: C5                 JR      $2CBE
2CB9: 90                 CALT    ($00A0)
2CBA: goto 2CD0
2CBB: 5D 4F              BIT     5,VV:4F
2CBD: DC                 JR      $2CDA
2CBE: 4E B9              JRE     $2D79
2CC0: 5D 13              BIT     5,VV:13
2CC2: C9                 JR      $2CCC
2CC3: 40 EC 32           CALL    $32EC
2CC6: 4E B1              JRE     $2D79
2CC8: 05 13 DF           ANIW    VV:13,$DF
2CCB: return 0;
2CCC: 40 08 2E           CALL    $2E08
2CCF: return 0;
2CD0: 40 EC 32           CALL    $32EC
2CD3: 4E 72              JRE     $2D47
2CD5: 55 4F 20           OFFIW   VV:4F,$20
2CD8: 4E 81              JRE     $2D5B
2CDA: 90                 CALT    ($00A0)
2CDB: 40 91 2D           CALL    $2D91
2CDE: 90                 CALT    ($00A0)
2CDF: 4E 22              JRE     $2D03
2CE1: 14 D0 02           LXI     BC,$02D0
2CE4: 59 14              BIT     1,VV:14
2CE6: 40 6F 2D           CALL    $2D6F
2CE9: 91                 CALT    ($00A2)
2CEA: 14 AC 02           LXI     BC,$02AC
2CED: 40 D2 2E           CALL    $2ED2
2CF0: D6                 JR      $2D07
2CF1: 40 D0 31           CALL    $31D0
2CF4: 14 B2 80           LXI     BC,$80B2
2CF7: 91                 CALT    ($00A2)
2CF8: 70 1F 47 98        LBCD    $9847
2CFC: 44 42 00           LXI     EA,$0042
2CFF: 74 C5              DADD    EA,BC
2D01: BC = EA;
2D02: 91                 CALT    ($00A2)
2D03: 40 25 2D           CALL    $2D25
2D06: goto 2D1C
2D07: 40 C4 32           CALL    $32C4
2D0A: 59 14              BIT     1,VV:14
2D0C: 4E 97              JRE     $2DA5
2D0E: 55 14 40           OFFIW   VV:14,$40
2D11: 15 13 40           ORIW    VV:13,$40
2D14: 5E 14              BIT     6,VV:14
2D16: 15 13 80           ORIW    VV:13,$80
2D19: 54 2B 2C           JMP     $2C2B
2D1C: 05 13 3B           ANIW    VV:13,$3B
2D1F: 5D 4F              BIT     5,VV:4F
2D21: 15 14 10           ORIW    VV:14,$10
2D24: return 0;
2D25: 40 B9 32           CALL    $32B9
2D28: 05 14 FD           ANIW    VV:14,$FD
2D2B: 90                 CALT    ($00A0)
2D2C: C1                 JR      $2D2E
2D2D: return 1;
2D2E: 14 00 00           LXI     BC,$0000
2D31: 70 1E 2B 99        SBCD    $992B
2D35: 70 1E 29 99        SBCD    $9929
2D39: 70 1E 4B 98        SBCD    $984B
2D3D: 71 26 00           MVIW    VV:26,$00
2D40: 05 13 FD           ANIW    VV:13,$FD
2D43: 05 14 FD           ANIW    VV:14,$FD
2D46: return 0;
2D47: 59 14              BIT     1,VV:14
2D49: 40 79 2D           CALL    $2D79
2D4C: 90                 CALT    ($00A0)
2D4D: CD                 JR      $2D5B
2D4E: 14 B6 8A           LXI     BC,$8AB6
2D51: 91                 CALT    ($00A2)
2D52: 14 DE 01           LXI     BC,$01DE
2D55: 40 D2 2E           CALL    $2ED2
2D58: 4F AD              JRE     $2D07
2D5A: goto 2D5F
2D5B: 90                 CALT    ($00A0)
2D5C: C2                 JR      $2D5F
2D5D: 4F A8              JRE     $2D07
2D5F: 40 D0 31           CALL    $31D0
2D62: 70 1F 43 98        LBCD    $9843
2D66: 44 81 01           LXI     EA,$0181
2D69: 74 C5              DADD    EA,BC
2D6B: BC = EA;
2D6C: 91                 CALT    ($00A2)
2D6D: 4F 94              JRE     $2D03
2D6F: 14 AE 04           LXI     BC,$04AE
2D72: 40 E5 32           CALL    $32E5
2D75: 14 93 03           LXI     BC,$0393
2D78: return 0;
2D79: 5D 4F              BIT     5,VV:4F
2D7B: 4E 14              JRE     $2D91
2D7D: 40 08 2E           CALL    $2E08
2D80: 40 D0 31           CALL    $31D0
2D83: 14 20 25           LXI     BC,$2520
2D86: 40 E5 32           CALL    $32E5
2D89: 14 D0 0B           LXI     BC,$0BD0
2D8C: 91                 CALT    ($00A2)
2D8D: 40 6F 2D           CALL    $2D6F
2D90: CD                 JR      $2D9E
2D91: 90                 CALT    ($00A0)
2D92: C1                 JR      $2D94
2D93: E9                 JR      $2D7D
2D94: 40 D0 31           CALL    $31D0
2D97: 14 80 8D           LXI     BC,$8D80
2D9A: 91                 CALT    ($00A2)
2D9B: 14 70 00           LXI     BC,$0070
2D9E: 40 AE 2E           CALL    $2EAE
2DA1: CC                 JR      $2DAE
2DA2: 05 14 EF           ANIW    VV:14,$EF
2DA5: 05 13 DF           ANIW    VV:13,$DF
2DA8: 15 14 02           ORIW    VV:14,$02
2DAB: 54 BF 32           JMP     $32BF
2DAE: 15 13 20           ORIW    VV:13,$20
2DB1: 40 E5 32           CALL    $32E5
2DB4: C7                 JR      $2DBC
2DB5: 40 25 2D           CALL    $2D25
2DB8: 15 13 02           ORIW    VV:13,$02
2DBB: C6                 JR      $2DC2
2DBC: 40 B9 32           CALL    $32B9
2DBF: 40 C5 2D           CALL    $2DC5
2DC2: 54 2B 2C           JMP     $2C2B
2DC5: 5D 4F              BIT     5,VV:4F
2DC7: DC                 JR      $2DE4
2DC8: 44 D0 0B           LXI     EA,$0BD0
2DCB: 70 3F 2B 99        LHLD    $992B
2DCF: EA += HL;
2DD1: 01 26              LDAW    VV:26
2DD3: EA += A;
2DD5: 70 3F 2D 99        LHLD    $992D
2DD9: 74 BF              DLT     EA,HL
2DDB: C2                 JR      $2DDE
2DDC: 4E 21              JRE     $2DFF
2DDE: 74 E7              DSUB    EA,HL
2DE0: 74 BF              DLT     EA,HL
2DE2: FB                 JR      $2DDE
2DE3: DB                 JR      $2DFF
2DE4: 70 3F 2B 99        LHLD    $992B
2DE8: EA = HL;
2DE9: 01 26              LDAW    VV:26
2DEB: EA += A;
2DED: 34 80 0D           LXI     HL,$0D80
2DF0: 74 B7              DSUBNB  EA,HL
2DF2: C1                 JR      $2DF4
2DF3: goto 2DFF
2DF4: 70 3F 31 99        LHLD    $9931
2DF8: 24 00 00           LXI     DE,$0000
2DFB: 74 A7              DADDNC  EA,HL
2DFD: C1                 JR      $2DFF
2DFE: goto 2DFB
2DFF: HL = EA;
2E00: 70 3E 2B 99        SHLD    $992B
2E04: 71 26 00           MVIW    VV:26,$00
2E07: return 0;

2E08:
	disable_interrupts();
	DE = [9929];
	HL = [990F];
	enable_interrupts();
	EA = 0x0000;
	74 FF              DEQ     EA,HL
	goto 2E21;
	EA = DE;
	01 26              LDAW    VV:26
	70 61              ESUB    EA,A
	48 1A              SKN     CY
	return 0;
	goto 2E28;
2E21:
	EA = DE;
	5F 01              BIT     7,VV:01
	goto 2E2F
	74 B7              DSUBNB  EA,HL
	return 0;
2E28:
	24 42 01           LXI     DE,$0142
	74 AE              DGT     EA,DE
	return 0;
	return 1;
2E2F:
	EA += HL;
	24 42 01           LXI     DE,$0142
	74 AE              DGT     EA,DE
	return 0;
	func_2089();
	goto 2E08;
2E3A:
	40 C8 0F           CALL    $0FC8
	goto 2E41
2E3E:
	A, B = read_stable_PA();
2E41:
	15 4F 10           ORIW    VV:4F,$10
	47 02              ONI     A,$02
	return 1;
	05 4F EF           ANIW    VV:4F,$EF
	return 0;

2E4B:
	40 8F 2E           CALL    $2E8F
	D9                 JR      $2E68
	55 4F 20           OFFIW   VV:4F,$20
	CD                 JR      $2E60
	5A 13              BIT     2,VV:13
	return 1;
	90                 CALT    ($00A0)
	C1                 JR      $2E59
	return 1;
2E59:
	81                 CALT    ($0082)
	F0                 JR      $2E4B
2E5B:
	81                 CALT    ($0082)
	40 8F 2E           CALL    $2E8F
	return 1;
2E60:
	40 7D 2E           CALL    $2E7D
	F7                 JR      $2E5B
	05 4F DF           ANIW    VV:4F,$DF
	D2                 JR      $2E7A
2E68:
	55 4F 20           OFFIW   VV:4F,$20
	return 1;
	C6                 JR      $2E73
2E6D:
	81                 CALT    ($0082)
	40 8F 2E           CALL    $2E8F
	C1                 JR      $2E73
	return 1;
2E73:
	40 7D 2E           CALL    $2E7D
	F6                 JR      $2E6D
	15 4F 20           ORIW    VV:4F,$20
2E7A:
	54 BF 32           JMP     $32BF
2E7D:
	40 08 2E           CALL    $2E08
2E80:
	C1                 JR      $2E82
	return 1;
2E82:
	70 1F 29 99        LBCD    $9929
	EA = 0x0000;
	74 FD              DEQ     EA,BC
	return 0;
	90                 CALT    ($00A0)
	return 0;
	return 1;

2E8F:
	40 9F 2E           CALL    $2E9F
	goto 2E97
	5D 4F              BIT     5,VV:4F
	return 1;
	goto 2E9B
2E97:
	55 4F 20           OFFIW   VV:4F,$20
	return 0;
2E9B:
	40 C8 0F           CALL    $0FC8
	goto 2EA2
2E9F:
	A, B = read_stable_PA();
2EA2:
	57 04              OFFI    A,$04
	return 0;
	return 1;

2EA6:
	A = C;
	74 C0 26           ADDW    VV:26
	63 26              STAW    VV:26
	91                 CALT    ($00A2)
	return 0;
2EAE:
	func_2089();
	34 0F 99           LXI     HL,$990F
	EA = [HL];
	24 00 00           LXI     DE,$0000
	74 AE              DGT     EA,DE
	return 0;
	5C 4F              BIT     4,VV:4F
	F1                 JR      $2EAE
	DE = EA;
2EBE:
	EA = [HL];
	74 EE              DNE     EA,DE
	FB                 JR      $2EBE
	5C 4F              BIT     4,VV:4F
	E8                 JR      $2EAE
	70 3F 0F 99        LHLD    $990F
	70 3E 77 9A        SHLD    $9A77
	40 F0 2E           CALL    $2EF0
	return 1;
2ED2:
	func_2089();
2ED3: 34 0F 99           LXI     HL,$990F
2ED6: EA = [HL];
2ED8: 24 00 00           LXI     DE,$0000
2EDB: 74 AE              DGT     EA,DE
2EDD: return 0;
2EDE: 55 4F 10           OFFIW   VV:4F,$10
2EE1: F0                 JR      $2ED2
2EE2: DE = EA;
2EE3: EA = [HL];
2EE5: 74 EE              DNE     EA,DE
2EE7: FB                 JR      $2EE3
2EE8: 55 4F 10           OFFIW   VV:4F,$10
2EEB: E6                 JR      $2ED2
2EEC: 40 F0 2E           CALL    $2EF0
2EEF: return 1;
2EF0: disable_interrupts();
2EF1: 55 01 10           OFFIW   VV:01,$10
2EF4: 55 01 22           OFFIW   VV:01,$22
2EF7: C6                 JR      $2EFE
2EF8: 70 1E 0F 99        SBCD    $990F
2EFC: enable_interrupts();
2EFD: return 0;
2EFE: enable_interrupts();
2EFF: 40 B9 32           CALL    $32B9
2F02: 55 01 80           OFFIW   VV:01,$80
2F05: 74 1A 80           ORI     B,$80
2F08: 91                 CALT    ($00A2)
2F09: return 0;
2F0A: 59 13              BIT     1,VV:13
2F0C: 55 03 02           OFFIW   VV:03,$02
2F0F: return 1;
2F10: 5C 13              BIT     4,VV:13
2F12: C7                 JR      $2F1A
2F13: 40 67 30           CALL    $3067
2F16: 40 B3 2F           CALL    $2FB3
2F19: DA                 JR      $2F34
2F1A: 45 0F C0           ONIW    VV:0F,$C0
2F1D: 55 01 30           OFFIW   VV:01,$30
2F20: return 1;
2F21: 40 EC 32           CALL    $32EC
2F24: 59 14              BIT     1,VV:14
2F26: 55 13 02           OFFIW   VV:13,$02
2F29: return 1;
2F2A: EA = 0x0000;
2F2D: 70 1F 2B 99        LBCD    $992B
2F31: 74 FD              DEQ     EA,BC
2F33: return 1;
2F34: 5C 13              BIT     4,VV:13
2F36: 55 4F 80           OFFIW   VV:4F,$80
2F39: C9                 JR      $2F43
2F3A: 40 EC 32           CALL    $32EC
2F3D: D4                 JR      $2F52
2F3E: 55 01 04           OFFIW   VV:01,$04
2F41: D0                 JR      $2F52
2F42: C9                 JR      $2F4C
2F43: 70 1F 75 9A        LBCD    $9A75
2F47: 44 FF 03           LXI     EA,$03FF
2F4A: 74 ED              DNE     EA,BC
2F4C: 40 3E 2E           CALL    $2E3E
2F4F: C2                 JR      $2F52
2F50: 4E 58              JRE     $2FAA
2F52: 70 1F 75 9A        LBCD    $9A75
2F56: 12                 INX     BC
2F57: 44 FF 03           LXI     EA,$03FF
2F5A: 74 BD              DLT     EA,BC
2F5C: 40 1B 21           CALL    $211B
2F5F: 14 00 00           LXI     BC,$0000
2F62: 40 10 22           CALL    $2210
2F65: 14 00 00           LXI     BC,$0000
2F68: 70 1E 75 9A        SBCD    $9A75
2F6C: EA = 0x0000;
2F6F: 74 ED              DNE     EA,BC
2F71: return 1;
2F72: 55 13 10           OFFIW   VV:13,$10
2F75: return 1;
2F76: EA = 0x0000;
2F79: 70 1F 4B 98        LBCD    $984B
2F7D: 5F 4F              BIT     7,VV:4F
2F7F: 74 ED              DNE     EA,BC
2F81: D4                 JR      $2F96
2F82: 5D 4F              BIT     5,VV:4F
2F84: 55 14 01           OFFIW   VV:14,$01
2F87: return 1;
2F88: 70 1F 75 9A        LBCD    $9A75
2F8C: 44 FF 03           LXI     EA,$03FF
2F8F: 74 FD              DEQ     EA,BC
2F91: return 1;
2F92: 40 C8 2F           CALL    $2FC8
2F95: D4                 JR      $2FAA
2F96: 14 05 C8           LXI     BC,$C805
2F99: push(BC);
2F9A: 80                 CALT    ($0080)
2F9B: 40 03 10           CALL    $1003
2F9E: C9                 JR      $2FA8
2F9F: BC = pop();
2FA0: 52                 DCR     B
2FA1: F7                 JR      $2F99
2FA2: 15 13 10           ORIW    VV:13,$10
2FA5: 81                 CALT    ($0082)
2FA6: 88                 CALT    ($0090)
2FA7: return 1;
2FA8: BC = pop();
2FA9: return 1;
2FAA: 05 4F 7F           ANIW    VV:4F,$7F
2FAD: 05 13 EF           ANIW    VV:13,$EF
2FB0: 54 BF 32           JMP     $32BF
2FB3: 70 1F 75 9A        LBCD    $9A75
2FB7: 44 FF 03           LXI     EA,$03FF
2FBA: 74 FD              DEQ     EA,BC
2FBC: return 0;
2FBD: 70 69 04 C0        MOV     A,($C004)
2FC1: 16 10              XRI     A,$10
2FC3: 70 79 04 C0        MOV     ($C004),A
2FC7: return 0;
2FC8: 40 B9 32           CALL    $32B9
2FCB: 90                 CALT    ($00A0)
2FCC: C1                 JR      $2FCE
2FCD: return 0;
2FCE: 44 68 02           LXI     EA,$0268
2FD1: 70 1F 49 98        LBCD    $9849
2FD5: 74 C5              DADD    EA,BC
2FD7: 70 1F 47 98        LBCD    $9847
2FDB: 74 E5              DSUB    EA,BC
2FDD: BC = EA;
2FDE: 91                 CALT    ($00A2)
2FDF: 40 B9 32           CALL    $32B9
2FE2: 90                 CALT    ($00A0)
2FE3: C1                 JR      $2FE5
2FE4: return 0;
2FE5: 15 4F 80           ORIW    VV:4F,$80
2FE8: return 1;
2FE9: 55 4F 80           OFFIW   VV:4F,$80
2FEC: 40 1C 30           CALL    $301C
2FEF: 5C 13              BIT     4,VV:13
2FF1: return 0;
2FF2: 05 13 EF           ANIW    VV:13,$EF
2FF5: 14 00 00           LXI     BC,$0000
2FF8: 70 1E 75 9A        SBCD    $9A75
2FFC: 70 69 04 C0        MOV     A,($C004)
3000: 17 10              ORI     A,$10
3002: 70 79 04 C0        MOV     ($C004),A
3006: 5B 13              BIT     3,VV:13
3008: return 0;
3009: 05 13 F7           ANIW    VV:13,$F7
300C: 5D 4F              BIT     5,VV:4F
300E: 69 24              MVI     A,$24
3010: 69 0C              MVI     A,$0C
3012: C = A;
3013: push(BC);
3014: 6A 80              MVI     B,$80
3016: 91                 CALT    ($00A2)
3017: BC = pop();
3018: 6A 00              MVI     B,$00
301A: 91                 CALT    ($00A2)
301B: return 0;
301C: 5F 4F              BIT     7,VV:4F
301E: return 0;
301F: 40 D0 31           CALL    $31D0
3022: 44 8C 02           LXI     EA,$028C
3025: 70 1F 49 98        LBCD    $9849
3029: 74 C5              DADD    EA,BC
302B: 70 1F 47 98        LBCD    $9847
302F: 74 E5              DSUB    EA,BC
3031: BC = EA;
3032: 74 1A 80           ORI     B,$80
3035: 91                 CALT    ($00A2)
3036: 05 4F 7F           ANIW    VV:4F,$7F
3039: 14 24 00           LXI     BC,$0024
303C: 91                 CALT    ($00A2)
303D: 40 B9 32           CALL    $32B9
3040: 14 00 00           LXI     BC,$0000
3043: 70 1E 4B 98        SBCD    $984B
3047: 05 14 EF           ANIW    VV:14,$EF
304A: 15 13 02           ORIW    VV:13,$02
304D: return 0;
304E: 5C 14              BIT     4,VV:14
3050: return 0;
3051: 05 14 EF           ANIW    VV:14,$EF
3054: 40 F3 32           CALL    $32F3
3057: EA = [HL];
3059: 70 3F 4B 98        LHLD    $984B
305D: HL++;
305E: 5D 4F              BIT     5,VV:4F
3060: 74 BF              DLT     EA,HL
3062: return 0;
3063: 69 24              MVI     A,$24
3065: 4F AB              JRE     $3012
3067: 15 13 01           ORIW    VV:13,$01
306A: 40 E4 0F           CALL    $0FE4
306D: goto 3072
306E: 40 D1 30           CALL    $30D1
3071: C5                 JR      $3077
3072: 87                 CALT    ($008E)
3073: return 0;
3074: 40 9C 30           CALL    $309C
3077: 40 B9 32           CALL    $32B9
307A: 40 7E 30           CALL    $307E
307D: EC                 JR      $306A
307E: 58 13              BIT     0,VV:13
3080: return 0;
3081: 40 B9 32           CALL    $32B9
3084: 14 02 87           LXI     BC,$8702
3087: push(BC);
3088: 80                 CALT    ($0080)
3089: A, B = read_stable_PA();
308C: BC = pop();
308D: 07 C0              ANI     A,$C0
308F: 67 C0              NEI     A,$C0
3091: C6                 JR      $3098
3092: 52                 DCR     B
3093: F3                 JR      $3087
3094: 05 13 FE           ANIW    VV:13,$FE
3097: return 0;
3098: 15 13 01           ORIW    VV:13,$01
309B: return 0;
309C: EA = 0x0000;
309F: 70 3F 4B 98        LHLD    $984B
30A3: 74 FF              DEQ     EA,HL
30A5: 4E 1B              JRE     $30C2
30A7: 70 3F 47 98        LHLD    $9847
30AB: 55 4F 20           OFFIW   VV:4F,$20
30AE: 70 3F 43 98        LHLD    $9843
30B2: 44 B0 01           LXI     EA,$01B0
30B5: 74 FF              DEQ     EA,HL
30B7: goto 30BC
30B8: 81                 CALT    ($0082)
30B9: 87                 CALT    ($008E)
30BA: return 0;
30BB: goto 30B8
30BC: 5D 4F              BIT     5,VV:4F
30BE: 4E 60              JRE     $3120
30C0: 4E 61              JRE     $3123
30C2: 70 3F 49 98        LHLD    $9849
30C6: 44 6C 00           LXI     EA,$006C
30C9: 74 FF              DEQ     EA,HL
30CB: 4E 59              JRE     $3126
30CD: 81                 CALT    ($0082)
30CE: 87                 CALT    ($008E)
30CF: return 0;
30D0: goto 30CD
30D1: EA = 0x0000;
30D4: 70 3F 4B 98        LHLD    $984B
30D8: 74 FF              DEQ     EA,HL
30DA: 4E 1D              JRE     $30F9
30DC: 70 3F 47 98        LHLD    $9847
30E0: 55 4F 20           OFFIW   VV:4F,$20
30E3: 70 3F 43 98        LHLD    $9843
30E7: 44 FC FF           LXI     EA,$FFFC
30EA: 74 FF              DEQ     EA,HL
30EC: C6                 JR      $30F3
30ED: 81                 CALT    ($0082)
30EE: 40 E4 0F           CALL    $0FE4
30F1: return 0;
30F2: FA                 JR      $30ED
30F3: 5D 4F              BIT     5,VV:4F
30F5: 4E 13              JRE     $310A
30F7: 4E 14              JRE     $310D
30F9: 70 3F 49 98        LHLD    $9849
30FD: 44 94 FF           LXI     EA,$FF94
3100: 74 FF              DEQ     EA,HL
3102: 4E 0C              JRE     $3110
3104: 81                 CALT    ($0082)
3105: 40 E4 0F           CALL    $0FE4
3108: return 0;
3109: FA                 JR      $3104
310A: HL = 0x9847;
310D: 34 43 98           LXI     HL,$9843
3110: 34 49 98           LXI     HL,$9849
3113: 5F 4F              BIT     7,VV:4F
3115: 15 13 08           ORIW    VV:13,$08
3118: EA = [HL];
311A: A9                 DCX     EA
311B: A9                 DCX     EA
311C: 14 02 80           LXI     BC,$8002
311F: D0                 JR      $3130
3120: HL = 0x9847;
3123: 34 43 98           LXI     HL,$9843
3126: 34 49 98           LXI     HL,$9849
3129: EA = [HL];
312B: EA++;
312C: EA++;
312D: 14 02 00           LXI     BC,$0002
3130: 48 93              STEAX   (HL)
3132: push(EA);
3133: 91                 CALT    ($00A2)
3134: EA = pop();
3135: HL = 0x0000;
3138: 74 FF              DEQ     EA,HL
313A: return 0;
313B: 81                 CALT    ($0082)
313C: 54 26 10           JMP     $1026

313F: 44 FF 7F           LXI     EA,$7FFF
3142: 74 CD              DON     EA,BC
3144: return 0;
3145: disable_interrupts();
3146: 5F 01              BIT     7,VV:01
3148: 74 5A 80           OFFI    B,$80
314B: D4                 JR      $3160
314C: 45 01 22           ONIW    VV:01,$22
314F: 5C 01              BIT     4,VV:01
3151: CE                 JR      $3160
3152: 5B 01              BIT     3,VV:01
3154: goto 3160
3155: 34 0F 99           LXI     HL,$990F
3158: EA = [HL];
315A: 74 C5              DADD    EA,BC
315C: 48 93              STEAX   (HL)
315E: enable_interrupts();
315F: return 0;
3160: enable_interrupts();
3161: push(BC);
3162:
	func_2089();
3163: 59 0F              BIT     1,VV:0F
3165: 55 01 30           OFFIW   VV:01,$30
3168: F9                 JR      $3162
3169: 40 B0 31           CALL    $31B0
316C: BC = pop();
316D: 15 01 90           ORIW    VV:01,$90
3170: 74 4A 80           ONI     B,$80
3173: 05 01 7F           ANIW    VV:01,$7F
3176: 74 0A 7F           ANI     B,$7F
3179: 70 1E 0F 99        SBCD    $990F
317D: 44 0A 00           LXI     EA,$000A
3180: 74 BD              DLT     EA,BC
3182: C6                 JR      $3189
3183: 15 01 48           ORIW    VV:01,$48
3186: 69 0B              MVI     A,$0B
3188: C5                 JR      $318E
3189: 05 01 B5           ANIW    VV:01,$B5
318C: 69 02              MVI     A,$02
318E: 63 27              STAW    VV:27
	PC |= 0x04; /* 0000 0100 */
	ETMM = 0x04; /* 0000 0100 */ /*  */
3197: disable_interrupts();
3198: 48 C0              DMOV    EA,ECNT
319A: 34 64 00           LXI     HL,$0064
319D: EA += HL;
319F: ETM0 = EA;
31A1: 34 F5 31           LXI     HL,$31F5
31A4: 70 3E 1B 98        SHLD    $981B
31A8: 48 45              SKIT    FE0
31AA: 00                 NOP     
31AB: MKL &= 0xdf; /* 1101 1111 */ /* activate INTE0 */
31AE: enable_interrupts();
31AF: return 0;
31B0: 70 1F 4B 98        LBCD    $984B
31B4: 34 43 98           LXI     HL,$9843
31B7: 5D 4F              BIT     5,VV:4F
31B9: HL = 0x9847;
31BC: EA = [HL];
31BE: 74 C5              DADD    EA,BC
31C0: BC = EA;
31C1: 74 5A 80           OFFI    B,$80
31C4: goto 31D0
31C5: 44 68 01           LXI     EA,$0168
31C8: 5D 4F              BIT     5,VV:4F
31CA: 44 D4 01           LXI     EA,$01D4
31CD: 74 AD              DGT     EA,BC
31CF: return 0;
31D0: 5D 4F              BIT     5,VV:4F
31D2: 54 85 78           JMP     $7885
31D5: 54 82 78           JMP     $7882
31D8: 70 1F 4B 98        LBCD    $984B
31DC: 34 43 98           LXI     HL,$9843
31DF: 5D 4F              BIT     5,VV:4F
31E1: HL = 0x9847;
31E4: EA = [HL];
31E6: 74 C5              DADD    EA,BC
31E8: BC = EA;
31E9: 44 68 01           LXI     EA,$0168
31EC: 5D 4F              BIT     5,VV:4F
31EE: 44 D4 01           LXI     EA,$01D4
31F1: 74 AD              DGT     EA,BC
31F3: return 1;
31F4: return 0;
31F5: 11                 EXX     
31F6: 10                 EXA     
31F7: push(EA);
31F8: push(VA);
31F9: push(BC);
31FA: push(HL);
31FB: 48 C0              DMOV    EA,ECNT
31FD: push(EA);
31FE: 5D 01              BIT     5,VV:01
3200: D3                 JR      $3214
3201: enable_interrupts();
3202: 64 4A 04           ONI     PC,$04
3205: C5                 JR      $320B
3206: PC &= 0xfb; /* 1111 1011 */
3209: 4E 4F              JRE     $325A
320B: MKL |= 0x20; /* 0010 0000 */ /* mask INTE0 */
320E: 05 01 DF           ANIW    VV:01,$DF
3211: EA = pop();
3212: 4E 56              JRE     $326A
3214:
	40 6F 32           CALL    $326F
	enable_interrupts();
	40 3E 2E           CALL    $2E3E
	D3                 JR      $322F
	70 3F 29 99        LHLD    $9929
	74 5E 80           OFFI    H,$80
	34 FF 7F           LXI     HL,$7FFF
	HL++;
	5F 01              BIT     7,VV:01
	goto 3232;
	HL--;
	HL--;
	74 5E 80           OFFI    H,$80
322F:
	HL = 0x0000;
3232:
	70 3E 29 99        SHLD    $9929
	34 0F 99           LXI     HL,$990F
	9F                 CALT    ($00BE)
	14 00 00           LXI     BC,$0000
	74 FD              DEQ     EA,BC
	C6                 JR      $3246
	15 01 20           ORIW    VV:01,$20
	05 01 ED           ANIW    VV:01,$ED
3246:
	5B 01              BIT     3,VV:01
	CE                 JR      $3257
	14 04 00           LXI     BC,$0004
	74 ED              DNE     EA,BC
	15 01 02           ORIW    VV:01,$02
	65 27 06           NEIW    VV:27,$06
	05 01 BF           ANIW    VV:01,$BF
3257:
	55 01 62           OFFIW   VV:01,$62
325A:
	30 27              DCRW    VV:27
	01 27              LDAW    VV:27
	48 25              SLL     A
	34 A3 32           LXI     HL,$32A3
	48 8C              LDEAX   (HL+A)
	HL = pop();
	EA += HL;
	ETM0 = EA;
326A:
	HL = pop();
	BC = pop();
	VA = pop();
	EA = pop();
	return; /* FROM INTERRUPT */

326F:
void func_326F(void)
{
	if (VV[0x01] & 0x80) HL = 0x3289;
	else                 HL = 0x3293;
	A = [HL+[C007]];
	[C007] = A;
	[C007] = [HL+A];
	return;
}

3289: DW: 09 05 0A 09 06 04 02 09 09 01 08 09 06 09 05 01
3269: DW: 04 09 0A 08 02 09 09 09 09 09 F4 77 F9 47 A7 0F
32A9: DW: 95 0C 0C 0B 47 0A E5 09 47 0A 0C 0B 95 0C A7 0F

32B9:
	45 01 30           ONIW    VV:01,$30
	return 0;
	func_2089();
	goto 32B9;
32BF:
	40 B9 32           CALL    $32B9
	90                 CALT    ($00A0)
	goto 32C7;
32C4:
	34 66 01           LXI     HL,$0166
32C7:
	HL = 0x0000;
	70 3E 29 99        SHLD    $9929
32CE:
	return 0;

32CF:
void func_32CF(void)
{
	40 08 2E           CALL    $2E08
	goto 32E1;
	90                 CALT    ($00A0)
	goto 32E1;
	if (func_32EC())
		goto 32DD;
	if (VV[0x13] & 0xc0)
		goto 32E1;
32DD:
	[0xC004] |= 0x40;
	return;
32E1:
	[0xC004] &= 0xBF;
	return;
}

32E5:
int func_32E5(void)
{
	if (VV[0x4f] & 0x20)
		return 0;
	if (VV[0x02] & 0x20)
		return 1;
	return 0;
}

32EC:
int func_32EC(void)
{
	if (VV[0x4f] & 0x20)
		return 1;
	if (VV[0x02] & 0x20)
		return 0;
	return 1;
}

32F3:
void func_32F3(void)
{
	if (!(VV[0x02] & 0x20)) HL = 0x992D;
	else                    HL = 0x984D;
	if (!(VV[0x4f] & 0x20))
		HL = 0x9931;
	return;
}

3301: 55 35 9A           OFFIW   VV:35,$9A
3304: 35 D9 35           LTIW    VV:D9,$35
3307: 20 36              INRW    VV:36
3309: 67 36              NEI     A,$36
330B: DE = pop();
330C: 36 D1              SUINB   A,$D1
330E: 36 22              SUINB   A,$22
3310: 37 4B              LTI     A,$4B
3312: 37 8E              LTI     A,$8E
3314: 37 06              LTI     A,$06
3316: 38                 illegal 
3317: 82                 CALT    ($0084)
3318: 38                 illegal 
3319: D1                 JR      $332B
331A: 38                 illegal 
331B: 2A                 LDAX    (DE)
331C: 39                 STAX    (BC)
331D: 82                 CALT    ($0084)
331E: 39                 STAX    (BC)
331F: C7                 JR      $3327
3320: 39                 STAX    (BC)
3321: A = D;
3322: [DE] = A;
3323: 4F 3A              JRE     $325F
3325: goto 3330
3326: [DE] = A;
3327: E = A;
3328: 3B                 STAX    (HL)
3329: 6C 3B              MVI     D,$3B
332B: HL = EA;
332C: 3B                 STAX    (HL)
332D: F6                 JR      $3324
332E: 3B                 STAX    (HL)
332F: A = [HL++];
3330: [DE++] = A;
3331: 85                 CALT    ($008A)
3332: [DE++] = A;
3333: 05 3D 70           ANIW    VV:3D,$70
3336: 3D                 STAX    (HL+)
3337: BC = EA;
3338: 3D                 STAX    (HL+)
3339: goto 3336
333A: 3D                 STAX    (HL+)
333B: 43                 INR     C
333C: 3E                 STAX    (DE-)
333D: 8E                 CALT    ($009C)
333E: 3E                 STAX    (DE-)
333F: CD                 JR      $334D
3340: 3E                 STAX    (DE-)
3341: 38                 illegal 
3342: 3F                 STAX    (HL-)
3343: 45 3F 68           ONIW    VV:3F,$68
3346: 3F                 STAX    (HL-)
3347: 99                 CALT    ($00B2)
3348: 3F                 STAX    (HL-)
3349: E0                 JR      $332A
334A: 3F                 STAX    (HL-)
334B: 29                 LDAX    (BC)
334C: 40 A3 40           CALL    $40A3
334F: 23                 DCX     DE
3350: 41                 INR     A
3351: 50                 EXH     
3352: 41                 INR     A
3353: 81                 CALT    ($0082)
3354: 41                 INR     A
3355: push(DE);
3356: 41                 INR     A
3357: F9                 JR      $3351
3358: 41                 INR     A
3359: [DE++] = A;
335A: 42                 INR     B
335B: 69 42              MVI     A,$42
335D: EA++;
335E: 42                 INR     B
335F: CF                 JR      $336F
3360: 42                 INR     B
3361: B = A;
3362: 43                 INR     C
3363: 61                 DAA     
3364: 43                 INR     C
3365: 9C                 CALT    ($00B8)
3366: 43                 INR     C
3367: E3                 JR      $334B
3368: 43                 INR     C
3369: A = [DE++];
336A: 44 6D 44           LXI     EA,$446D
336D: push(EA);
336E: 44 FD 44           LXI     EA,$44FD
3371: 64 45 AB           ADI     PF,$AB
3374: 45 F2 45           ONIW    VV:F2,$45
3377: EAL = A;
3378: 46 46              ADI     A,$46
337A: 46 85              ADI     A,$85
337C: 46 C4              ADI     A,$C4
337E: A += 0x03;
3380: 47 48              ONI     A,$48
3382: 47 97              ONI     A,$97
3384: 47 06              ONI     A,$06
3386: 48 4B              SKIT    ER
3388: 48 98              illegal 
338A: 48 DD              illegal 
338C: 48 20              illegal 
338E: 49 65              MVIX    BC,$65
3390: 49 B2              MVIX    BC,$B2
3392: 49 F9              MVIX    BC,$F9
3394: 49 30              MVIX    BC,$30
3396: 4A 7B              MVIX    DE,$7B
3398: 4A EC              MVIX    DE,$EC
339A: 4A 37              MVIX    DE,$37
339C: 4B 86              MVIX    HL,$86
339E: 4B F5              MVIX    HL,$F5
33A0: 4B 40              MVIX    HL,$40
33A2: 4C 8D              illegal 
33A4: 4C E0              MOV     A,CR0
33A6: 4C 2F              illegal 
33A8: 4D 70              illegal 
33AA: 4D B3              illegal 
33AC: 4D 1E              illegal 
33AE: 4E 6E              JRE     $341E
33B0: 4E E9              JRE     $349B
33B2: 4E 60              JRE     $3414
33B4: 4F D7              JRE     $338D
33B6: 4F 16              JRE     $32CE
33B8: 50                 EXH     
33B9: 4B 50              MVIX    HL,$50
33BB: 96                 CALT    ($00AC)
33BC: 50                 EXH     
33BD: goto 33C9
33BE: 50                 EXH     
33BF: FE                 JR      $33BE
33C0: 50                 EXH     
33C1: A = D;
33C2: 51                 DCR     A
33C3: 37 51              LTI     A,$51
33C5: 7C 51              CALF    $0C51
33C7: C5                 JR      $33CD
33C8: 51                 DCR     A
33C9: 04 52 51           LXI     SP,$5152
33CC: 52                 DCR     B
33CD: 90                 CALT    ($00A0)
33CE: 52                 DCR     B
33CF: D1                 JR      $33E1
33D0: 52                 DCR     B
33D1: B = A;
33D2: 53                 DCR     C
33D3: 61                 DAA     
33D4: 53                 DCR     C
33D5: 9C                 CALT    ($00B8)
33D6: 53                 DCR     C
33D7: D9                 JR      $33F1
33D8: 53                 DCR     C
33D9: 44 54 7F           LXI     EA,$7F54
33DC: 54 C8 54           JMP     $54C8
33DF: A = E;
33E0: 55 54 55           OFFIW   VV:54,$55
33E3: 9F                 CALT    ($00BE)
33E4: 55 EA 55           OFFIW   VV:EA,$55
33E7: A = [HL];
33E8: 56 6A              ACI     A,$6A
33EA: 56 A9              ACI     A,$A9
33EC: 56 F0              ACI     A,$F0
33EE: 56 68              ACI     A,$68
33F0: 57 E3              OFFI    A,$E3
33F2: 57 5A              OFFI    A,$5A
33F4: 58 DC              BIT     0,VV:DC
33F6: 58 23              BIT     0,VV:23
33F8: 59 60              BIT     1,VV:60
33FA: 59 85              BIT     1,VV:85
33FC: 59 C0              BIT     1,VV:C0
33FE: 59 0B              BIT     1,VV:0B
3400: 5A 52              BIT     2,VV:52
3402: 5A FC              BIT     2,VV:FC
3404: 3D                 STAX    (HL+)
3405: 8E                 CALT    ($009C)
3406: 3E                 STAX    (DE-)
3407: HL = pop();
3408: 5A 70              BIT     2,VV:70
340A: 3D                 STAX    (HL+)
340B: 55 35 82           OFFIW   VV:35,$82
340E: 39                 STAX    (BC)
340F: C7                 JR      $3417
3410: 39                 STAX    (BC)
3411: 01 5B              LDAW    VV:5B
3413: 50                 EXH     
3414: 5B 9A              BIT     3,VV:9A
3416: 35 8F 5B           LTIW    VV:8F,$5B
3419: goto 3424
341A: 5B 67              BIT     3,VV:67
341C: 36 2D              SUINB   A,$2D
341E: [DE++] = A;
341F: 2A                 LDAX    (DE)
3420: 39                 STAX    (BC)
3421: 43                 INR     C
3422: 3E                 STAX    (DE-)
3423: E = A;
3424: 3B                 STAX    (HL)
3425: goto 3430
3426: [DE] = A;
3427: A = E;
3428: 5C B5              BIT     4,VV:B5
342A: 3D                 STAX    (HL+)
342B: 20 36              INRW    VV:36
342D: 54 5C D9           JMP     $D95C
3430: 35 9B 5C           LTIW    VV:9B,$5C
3433: 85                 CALT    ($008A)
3434: [DE++] = A;
3435: 05 3D 1D           ANIW    VV:3D,$1D
3438: 5D D1              BIT     5,VV:D1
343A: 36 CD              SUINB   A,$CD
343C: 3E                 STAX    (DE-)
343D: D1                 JR      $344F
343E: 38                 illegal 
343F: return; /* FROM INTERRUPT */
3440: 5D AB              BIT     5,VV:AB
3442: 5D F0              BIT     5,VV:F0
3444: 5D 2B              BIT     5,VV:2B
3446: 5E 72              BIT     6,VV:72
3448: 5E 06              BIT     6,VV:06
344A: 38                 illegal 
344B: 8E                 CALT    ($009C)
344C: 37 B9              LTI     A,$B9
344E: 5E FE              BIT     6,VV:FE
3450: 5E 4B              BIT     6,VV:4B
3452: 37 45              LTI     A,$45
3454: 5F 86              BIT     7,VV:86
3456: 5F C5              BIT     7,VV:C5
3458: 5F 50              BIT     7,VV:50
345A: 60 22              ADDNC   B,A
345C: 37 DB              LTI     A,$DB
345E: 60 26              ADDNC   H,A
3460: 61                 DAA     
3461: 71 61 7F           MVIW    VV:61,$7F
3464: 61                 DAA     
3465:
	func_2089();
3466: 61                 DAA     
3467: 9B                 CALT    ($00B6)
3468: 61                 DAA     
3469: A9                 DCX     EA
346A: 61                 DAA     
346B: HL = EA;
346C: 61                 DAA     
346D: C5                 JR      $3473
346E: 61                 DAA     
346F: D3                 JR      $3483
3470: 61                 DAA     
3471: E1                 JR      $3453
3472: 61                 DAA     
3473: EF                 JR      $3463
3474: 61                 DAA     
3475: FD                 JR      $3473
3476: 61                 DAA     
3477: A = C;
3478: return; /* FROM INTERRUPT */
3479: EAL = A;
347A: return; /* FROM INTERRUPT */
347B: 27 62              GTI     A,$62
347D: 35 62 43           LTIW    VV:62,$43
3480: return; /* FROM INTERRUPT */
3481: 51                 DCR     A
3482: return; /* FROM INTERRUPT */
3483: 5F 62              BIT     7,VV:62
3485: 6D 62              MVI     E,$62
3487: 7B 62              CALF    $0B62
3489: 89                 CALT    ($0092)
348A: return; /* FROM INTERRUPT */
348B: 97                 CALT    ($00AE)
348C: return; /* FROM INTERRUPT */
348D: A5                 DMOV    EA,BC
348E: return; /* FROM INTERRUPT */
348F: push(HL);
3490: return; /* FROM INTERRUPT */
3491: C1                 JR      $3493
3492: return; /* FROM INTERRUPT */
3493: CF                 JR      $34A3
3494: return; /* FROM INTERRUPT */
3495: DD                 JR      $34B3
3496: return; /* FROM INTERRUPT */
3497: EB                 JR      $3483
3498: return; /* FROM INTERRUPT */
3499: F9                 JR      $3493
349A: return; /* FROM INTERRUPT */
349B: 07 63              ANI     A,$63
349D: 15 63 23           ORIW    VV:63,$23
34A0: 63 31              STAW    VV:31
34A2: 63 3F              STAW    VV:3F
34A4: 63 4D              STAW    VV:4D
34A6: 63 5B              STAW    VV:5B
34A8: 63 69              STAW    VV:69
34AA: 63 77              STAW    VV:77
34AC: 63 85              STAW    VV:85
34AE: 63 93              STAW    VV:93
34B0: 63 A1              STAW    VV:A1
34B2: 63 AF              STAW    VV:AF
34B4: 63 BD              STAW    VV:BD
34B6: 63 CB              STAW    VV:CB
34B8: 63 D9              STAW    VV:D9
34BA: 63 E7              STAW    VV:E7
34BC: 63 F5              STAW    VV:F5
34BE: 63 03              STAW    VV:03
34C0: PB ^= 0x64; /* 0110 0100 */
34C3: 4F 3A              JRE     $33FF
34C5: 56 64              ACI     A,$64
34C7: 9B                 CALT    ($00B6)
34C8: 64 DE              illegal 
34CA: 64 25 65           ADINC   PF,$65
34CD: 76 65              SBI     A,$65
34CF: C1                 JR      $34D1
34D0: 65 04 66           NEIW    VV:04,$66
34D3: 4F 66              JRE     $343B
34D5: 96                 CALT    ($00AC)
34D6: 66 E9              SUI     A,$E9
34D8: 66 28              SUI     A,$28
34DA: 67 7F              NEI     A,$7F
34DC: 67 CD              NEI     A,$CD
34DE: 67 0A              NEI     A,$0A
34E0: 68 51              MVI     V,$51
34E2: 68 90              MVI     V,$90
34E4: 68 DB              MVI     V,$DB
34E6: 68 1E              MVI     V,$1E
34E8: 69 61              MVI     A,$61
34EA: 69 77              MVI     A,$77
34EC: 69 8D              MVI     A,$8D
34EE: 69 D0              MVI     A,$D0
34F0: 69 A2              MVI     A,$A2
34F2: 36 17              SUINB   A,$17
34F4: 6A 46              MVI     B,$46
34F6: 6A 71              MVI     B,$71
34F8: 6A B4              MVI     B,$B4
34FA: 6A F3              MVI     B,$F3
34FC: 6A 32              MVI     B,$32
34FE: 6B 38              MVI     C,$38
3500: 3F                 STAX    (HL-)
3501: 65 6B A0           NEIW    VV:6B,$A0
3504: 6B DF              MVI     C,$DF
3506: 6B 56              MVI     C,$56
3508: 6C AE              MVI     D,$AE
350A: 6C 25              MVI     D,$25
350C: 6D 64              MVI     E,$64
350E: 6D B8              MVI     E,$B8
3510: 6D 38              MVI     E,$38
3512: 6E 75              MVI     H,$75
3514: 6E BA              MVI     H,$BA
3516: 6E 06              MVI     H,$06
3518: 6F 51              MVI     L,$51
351A: 6F 9C              MVI     L,$9C
351C: 6F D7              MVI     L,$D7
351E: 6F 0E              MVI     L,$0E
3520: 70 45              illegal 
3522: 70 7C 70 B3        MOV     ($B370),D
3526: 70 07              illegal 
3528: 71 5A 71           MVIW    VV:5A,$71
352B: AE                 LDAX    (HL+EA)
352C: 71 F5 71           MVIW    VV:F5,$71
352F: 49 72              MVIX    BC,$72
3531: 94                 CALT    ($00A8)
3532: 72                 SOFTI   
3533: D9                 JR      $354D
3534: 72                 SOFTI   
3535: 4C 73              illegal 
3537: BF 73              STAX    (HL+$73)
3539: HL++;
353A: 74 B4              illegal 
353C: 74 33 75           SUINB   C,$75
353F: 7A 75              CALF    $0A75
3541: A5                 DMOV    EA,BC
3542: 75 EC 75           EQIW    VV:EC,$75
3545: 39                 STAX    (BC)
3546: 76 C8              SBI     A,$C8
3548: 76 1B              SBI     A,$1B
354A: 77 4A              EQI     A,$4A
354C: 77 7D              EQI     A,$7D
354E: 77

354F: DW: 0C 0D 09 08 0B 08

77B1:
	stepper_vref(0x07);
	[0xc008] = 0x00;
	[0xc00b] = 0x00;
	[0xc00a] = 0xba;
	[0xc009] = 0xb5;
	[0xc008] = 0x0d;
	if (read_debounced_PA() & 0x01) [0x991D] = 0x7B76;
	else                            [0x991D] = 0x7B66;
	stepper_vref(0x06);
	VV[0x1d] = 0x03;
	delay(25);
77E8:
	func_7845();
77EB: 30 1D              DCRW    VV:1D
77ED: FA                 JR      $77E8
	stepper_vref(0x07);
	delay(75)
	VV[0x00] |= 0x80;
	if (read_debounced_PA() & 0x01) {
		[0x9917] = 0x03E3;
		func_7875();
	}
	[0x9917] = 0x0000;
	func_7882();
	VV[0x00] &= 0x7f;
	[0x991D] = 0x7B76;
	stepper_vref(0x06);
	delay(6);
	VV[0x1d] = 0x14;
7823:
	func_7845();
96                 CALT    ($00AC)
	goto 782C;
7828: 55 00 02           OFFIW   VV:00,$02
	goto 7831;
782C: 30 1D              DCRW    VV:1D
782E: F4                 JR      $7823
782F: 4E 33              JRE     $7864
7831:
	func_7845();
	func_7845();
	stepper_vref(0x07);
	delay(75)
	34 03 00           LXI     HL,$0003
	70 3E 17 99        SHLD    $9917
	return 0;

7845:
	VV[0x00] |= 0x02;
	94                 CALT    ($00A8)
	delay(3);
	96                 CALT    ($00AC)
	VV[0x00] &= 0xfd;
	return 0;

uint8_t func_7851(void)
{
	A = [C008];
	HL = 0x7860;
	for (int i = 0; i < 5; i++)
		if (A == [HL++])
			return 0;
	return 1;
}

7860: DW: 0C 0D 0E 0F /* should be 5 bytes? */

7864:
	34 4A 10           LXI     HL,$104A
7867:
	34 47 10           LXI     HL,$1047
	push(HL);
	40 48 0C           CALL    $0C48
	40 9A 0C           CALL    $0C9A
	BC = pop();
	48 29              CALB    
7874: FF                 JR      $7874

7875:
DE = [9917];
EA = 0x000a;
if (DE <= EA)
	return;

787F: HL = 000A;
7882: HL = 010D;
7885: HL = 00D1;
7888: DE = [9917];
788C: EA = HL;
788D: 74 EE              DNE     EA,DE
788F: 54 A4 7B           JMP     $func_7ba4
7892: push(HL);
7893: 93                 CALT    ($00A6)	func_7ba4();
7894: HL = pop();
7895: 5F 00              BIT     7,VV:00
7897: 69 03              MVI     A,$03
7899: A = 0x01;
789B: 63 1F              STAW    VV:1F
789D: push(HL);
789E: DE = [9917];
78A2: EA = HL;
78A3: 05 00 BF           ANIW    VV:00,$BF
78A6: 74 B6              DSUBNB  EA,DE
78A8: C1                 JR      $78AA
78A9: C6                 JR      $78B0
78AA: 15 00 40           ORIW    VV:00,$40
78AD: EA = DE;
78AE: 74 E7              DSUB    EA,HL
78B0: 34 1E 00           LXI     HL,$001E
78B3: 74 BF              DLT     EA,HL
78B5: C9                 JR      $78BF
78B6: 44 1E 00           LXI     EA,$001E
78B9: 01 00              LDAW    VV:00
78BB: 16 40              XRI     A,$40
78BD: 63 00              STAW    VV:00
78BF: 34 49 99           LXI     HL,$9949
78C2: 48 93              STEAX   (HL)
78C4: 95                 CALT    ($00AA)
78C5: 5F 00              BIT     7,VV:00
78C7: 15 00 01           ORIW    VV:00,$01
78CA: HL = pop();
78CB: 5F 00              BIT     7,VV:00
78CD: 4F B9              JRE     $7888
78CF: 54 A4 7B           JMP     $func_7ba4

78D2: 15 00 10           ORIW    VV:00,$10
78D5: 58 00              BIT     0,VV:00
78D7: C7                 JR      $78DF
func_7bb1();
78DB: 05 00 FE           ANIW    VV:00,$FE
78DE: C1                 JR      $78E0
78DF: 93                 CALT    ($00A6)	func_7ba4();
78E0: 71 1F 03           MVIW    VV:1F,$03
78E3: func_1F75();
78E6: 34 0B 99           LXI     HL,$990B
78E9: 24 19 99           LXI     DE,$9919
78EC: 48 85              LDEAX   (HL++)
78EE: 14 B8 02           LXI     BC,$02B8
78F1: 74 C5              DADD    EA,BC
78F3: 5A 00              BIT     2,VV:00
78F5: goto 78F9
78F6: 70 61              ESUB    EA,A
78F8: C2                 JR      $78FB
78F9: EA += A;
78FB: 6A 18              MVI     B,$18
78FD: 48 3E              DIV     B
78FF: [DE++] = EA;
7901: EA = [HL];
7903: 14 B8 02           LXI     BC,$02B8
7906: 74 C5              DADD    EA,BC
7908: 5A 00              BIT     2,VV:00
790A: goto 790E
790B: 70 61              ESUB    EA,A
790D: C2                 JR      $7910
790E: EA += A;
7910: 69 18              MVI     A,$18
7912: 48 3D              DIV     A
7914: 77 00              EQI     A,$00
7916: EA++;
7917: [DE] = EA;
7919: 40 FB 7B           CALL    $7BFB
791C: EA = DE;
791D: 74 B5              DSUBNB  EA,BC
791F: 4E 1F              JRE     $7940
7921: 15 00 40           ORIW    VV:00,$40
7924: 34 0F 00           LXI     HL,$000F
7927: 74 B7              DSUBNB  EA,HL
7929: 4E 1E              JRE     $7949
792B: 34 1E 00           LXI     HL,$001E
792E: 75 20 03           EQIW    VV:20,$03
7931: 74 B7              DSUBNB  EA,HL
7933: 4E 29              JRE     $795E
7935: EA = DE;
7936: 74 E5              DSUB    EA,BC
7938: 69 0F              MVI     A,$0F
793A: 70 61              ESUB    EA,A
793C: 05 00 BF           ANIW    VV:00,$BF
793F: D7                 JR      $7957
7940: 34 10 00           LXI     HL,$0010
7943: A5                 DMOV    EA,BC
7944: 74 E6              DSUB    EA,DE
7946: 74 BF              DLT     EA,HL
7948: C7                 JR      $7950
7949: 44 1E 00           LXI     EA,$001E
794C: 15 00 40           ORIW    VV:00,$40
794F: C7                 JR      $7957
7950: 69 0F              MVI     A,$0F
7952: EA += A;
7954: 15 00 40           ORIW    VV:00,$40
7957: 34 49 99           LXI     HL,$9949
795A: 48 93              STEAX   (HL)
795C: 95                 CALT    ($00AA)
795D: 93                 CALT    ($00A6)	func_7ba4();
795E: func_1F9F();
7961: goto 795E
7962: 40 FB 7B           CALL    $7BFB
7965: A = 0x11;
7967: EA = HL;
7968: 74 E5              DSUB    EA,BC
796A: EA += A;
796C: HL = EA;
796D: 70 3E 49 99        SHLD    $9949
7971: 15 0F 02           ORIW    VV:0F,$02
7974: EA = DE;
7975: 74 E5              DSUB    EA,BC
7977: A9                 DCX     EA
7978: HL = EA;
7979: 70 3E 4B 99        SHLD    $994B
797D: 01 20              LDAW    VV:20
797F: 63 1F              STAW    VV:1F
7981: 05 00 BF           ANIW    VV:00,$BF
7984: 95                 CALT    ($00AA)
7985: 05 00 EF           ANIW    VV:00,$EF
	ETMM = 0x04; /* 0000 0100 */ /*  */
798C: return 0;
798D: 40 BE 7B           CALL    $7BBE
7990: 55 00 10           OFFIW   VV:00,$10
7993: 5A 00              BIT     2,VV:00
7995: C6                 JR      $799C
7996: 01 00              LDAW    VV:00
7998: 16 40              XRI     A,$40
799A: 63 00              STAW    VV:00
799C: 5E 00              BIT     6,VV:00
799E: HL = 0x7B66;
79A1: HL = 0x7B76;
79A4: [991D] = HL;
79A8: 01 1F              LDAW    VV:1F
79AA: 48 25              SLL     A
79AC: 48 A8              TABLE   
79AE: goto 79B9
79AF: 6E 7C              MVI     H,$7C
79B1: 7E 7C              CALF    $0E7C
79B3: 9C                 CALT    ($00B8)
79B4: 7C AC              CALF    $0CAC
79B6: 7C BC              CALF    $0CBC
79B8: 7C 70              CALF    $0C70
79BA: 1E                 MOV     H,A
79BB: 1F                 MOV     L,A
79BC: 99                 CALT    ($00B2)
79BD: 15 0F 90           ORIW    VV:0F,$90
79C0: 40 1F 7C           CALL    $7C1F
79C3: 65 1F 04           NEIW    VV:1F,$04
79C6: goto 79CB
79C7: 75 1F 01           EQIW    VV:1F,$01
79CA: D7                 JR      $79E2
79CB: 15 00 20           ORIW    VV:00,$20
79CE: 34 49 99           LXI     HL,$9949
79D1: EA = [HL];
79D3: 48 A4              DSLL    EA
79D5: 48 93              STEAX   (HL)
79D7: 34 4B 99           LXI     HL,$994B
79DA: EA = [HL];
79DC: 48 A4              DSLL    EA
79DE: 48 93              STEAX   (HL)
79E0: 69 1C              MVI     A,$1C
79E2: 69 0E              MVI     A,$0E
79E4: 63 1D              STAW    VV:1D
79E6: stepper_vref(0x05);
79E9: 64 9D E0           ORI     TMM,$E0
79EC: 34 04 7A           LXI     HL,$7A04
79EF: 70 3E 18 98        SHLD    $9818
79F3: 15 0F 01           ORIW    VV:0F,$01
79F6: 69 E6              MVI     A,$E6
79F8: TM1 = A;
79FA: 48 42              SKIT    FT1
79FC: 00                 NOP     
79FD: 64 8D 3F           ANI     TMM,$3F
7A00: MKL &= 0xfb; /* 1111 1011 */ /* activate INTT1 */
7A03: return 0;

7A04:
	48 C0              DMOV    EA,ECNT
	HL = EA;
	70 3E 21 99        SHLD    $9921
	40 34 7A           CALL    $7A34
	goto 7A16;
	40 16 0C           CALL    $0C16
	11                 EXX     
	10                 EXA     
	enable_interrupts();
	return; /* FROM INTERRUPT */

7A16:
	94                 CALT    ($00A8)
	11                 EXX     
	10                 EXA     
	enable_interrupts();
	push(VA);
	push(EA);
	push(BC);
	push(DE);
	push(HL);
	01 1D              LDAW    VV:1D
	70 3F 1F 99        LHLD    $991F
	A = [HL+A];
	TM1 = A;
	40 C4 7A           CALL    $7AC4
	40 99 7A           CALL    $7A99
	HL = pop();
	DE = pop();
	BC = pop();
	EA = pop();
	VA = pop();
	return; /* FROM INTERRUPT */

7A34:
	if (!(VV[0x0f] & 0x41))
		return 0;
	if (!(VV[0x0f] & 0x01))
		goto 7A50
	VV[0x0f] &= 0xfe;
	5E 0F              BIT     6,VV:0F
	goto 7A4C
	stepper_vref(0x07);
	A = 0xc0;
	TM1 = A;
	VV[0x1e] = 0x0e;
	return 1;
7A4C:
	stepper_vref(0x06);
	return 0;
7A50:
	30 1E              DCRW    VV:1E
	return 1;
	VV[0x0f] &= 0xbf;
	40 F7 0B           CALL    $0BF7
	return 1;

7A5A: 94                 CALT    ($00A8)
7A5B: 11                 EXX     
7A5C: 10                 EXA     
7A5D: enable_interrupts();
7A5E: push(HL);
7A5F: 70 3F 49 99        LHLD    $9949
7A63: HL--;
7A64: 70 3E 49 99        SHLD    $9949
7A68: HL = pop();
7A69: return; /* FROM INTERRUPT */
7A6A: 05 0F CF           ANIW    VV:0F,$CF
7A6D: 15 0F 08           ORIW    VV:0F,$08
7A70: 01 1F              LDAW    VV:1F
7A72: 48 25              SLL     A
7A74: 48 A8              TABLE   
7A76: goto 7A81
7A77: 6F 7C              MVI     L,$7C
7A79: 7F 7C              CALF    $0F7C
7A7B: 9D                 CALT    ($00BA)
7A7C: 7C AD              CALF    $0CAD
7A7E: 7C BD              CALF    $0CBD
7A80: 7C 70              CALF    $0C70
7A82: 1E                 MOV     H,A
7A83: 1F                 MOV     L,A
7A84: 99                 CALT    ($00B2)
7A85: 34 04 7A           LXI     HL,$7A04
7A88: 70 3E 18 98        SHLD    $9818
7A8C: 55 00 80           OFFIW   VV:00,$80
7A8F: 5E 00              BIT     6,VV:00
7A91: return 0;
7A92: 25 1D 13           GTIW    VV:1D,$13
7A95: 71 1D 13           MVIW    VV:1D,$13
7A98: return 0;
7A99: 55 0F 69           OFFIW   VV:0F,$69
7A9C: return 0;
7A9D: 40 1D 7B           CALL    $7B1D
7AA0: return 0;
7AA1: 55 00 80           OFFIW   VV:00,$80
7AA4: D4                 JR      $7AB9
7AA5: 55 0F 10           OFFIW   VV:0F,$10
7AA8: return 0;
7AA9: 96                 CALT    ($00AC)
7AAA: goto 7AB5
7AAB: 55 00 02           OFFIW   VV:00,$02
7AAE: 54 64 78           JMP     $7864
7AB1: 15 00 02           ORIW    VV:00,$02
7AB4: return 0;
7AB5: 05 00 FD           ANIW    VV:00,$FD
7AB8: return 0;
7AB9: 5E 00              BIT     6,VV:00
7ABB: goto 7AC0
7ABC: 96                 CALT    ($00AC)
7ABD: return 0;
7ABE: 4F AA              JRE     $7A6A
7AC0: 96                 CALT    ($00AC)
7AC1: 4F A7              JRE     $7A6A
7AC3: return 0;
7AC4: 45 0F 18           ONIW    VV:0F,$18
7AC7: return 0;
7AC8: 5C 0F              BIT     4,VV:0F
7ACA: 4E 2B              JRE     $7AF7
7ACC: 65 1F 04           NEIW    VV:1F,$04
7ACF: goto 7AD4
7AD0: 75 1F 01           EQIW    VV:1F,$01
7AD3: C6                 JR      $7ADA
7AD4: 65 1D 0E           NEIW    VV:1D,$0E
7AD7: stepper_vref(0x05);
7ADA: 30 1D              DCRW    VV:1D
7ADC: 75 1D 00           EQIW    VV:1D,$00
7ADF: return 0;
7AE0: 65 1F 04           NEIW    VV:1F,$04
7AE3: goto 7AE8
7AE4: 75 1F 01           EQIW    VV:1F,$01
7AE7: goto 7AEC
7AE8: stepper_vref(0x03);
7AEB: goto 7AEF
7AEC: stepper_vref(0x05);
7AEF: 05 0F EF           ANIW    VV:0F,$EF
7AF2: 5D 0F              BIT     5,VV:0F
7AF4: return 0;
7AF5: 4F 73              JRE     $7A6A
7AF7: 20 1D              INRW    VV:1D
7AF9: 5D 00              BIT     5,VV:00
7AFB: 69 0F              MVI     A,$0F
7AFD: 69 1D              MVI     A,$1D
7AFF: 74 F8 1D           EQAW    VV:1D
7B02: return 0;
7B03: 55 00 80           OFFIW   VV:00,$80
7B06: A = func_7851();
7B09: C9                 JR      $7B13
7B0A: 30 1D              DCRW    VV:1D
7B0C: 70 69 9A 7C        MOV     A,($7C9A)
7B10: TM1 = A;
7B12: return 0;
7B13: 15 0F 41           ORIW    VV:0F,$41
7B16: 05 0F 77           ANIW    VV:0F,$77
7B19: 05 00 DF           ANIW    VV:00,$DF
7B1C: return 0;
7B1D: 34 49 99           LXI     HL,$9949
7B20: 9F                 CALT    ($00BE)
7B21: 5F 00              BIT     7,VV:00
7B23: C9                 JR      7B2D
	HL = 0x0000;
	if (EA != HL)
		return 1;
	goto 7864;
7B2D:
	if (VV[0x0f] & 0x08)
		return 1;
	5D 00              BIT     5,VV:00
	HL = 0x000F;
	HL = 0x001D;
	74 AF              DGT     EA,HL
	goto 7A6A;
	59 0F              BIT     1,VV:0F
	return 1;
	HL = 0x994B;
	9F                 CALT    ($00BE)
	DE = 0x0000;
	74 EE              DNE     EA,DE
	goto 1E8F;
	return 1;

7B4D:
	HL = [991D];
	A  = [C008];
	if (!(VV[0x00] & 0x20)) {
		A = [HL + A];
		[C008] = A;
	}
	A = [HL + A];
	[C008] = A;
	goto 0C16;

7B66: DW: 0D 0D 0D 0D 0D 0F 0C 0D 0D 0D 0D 0E 08 05 06 0B
7B76: DW: 0D 0D 0D 0D 0D 0D 0E 0D 0C 0D 0D 0F 06 08 0B 05

void read_debounced_PA(void)
{
	do {
		A = read_stable_PA();
		delay(10);
		B = read_stable_PA();
	} while (A != B);
	if (!(A&0x01))
		skip next on return;
}
7b95:
void read_debounced_PA(void)
{
	A = read_stable_PA();
	if (!(A&0x01))
		skip next on return;
}

/* THIS SEEMS TO BE THE MAIN LOOP FOR NOW */
void func_7ba4(void)
{
	while (VV[0x00] & 0x10) {
		if (VV[0x0f] & 0xc0)
			func_1F9F(); /* ignore rets, there's a nop after this */
		func_2089();
	}
}

void func_7bb1(void)
{
	while (VV[0x0f] & 0xc0 || VV[0x01] & 0x30) {
		if (VV[0x00] & 0x10)
			func_1F9F(); /* ignore rets, there's a nop after this */
		func_2089();
	}
}

7BB9:
	func_1F9F(); /* ignore rets, there's a nop after this */
	func_2089();
7BBE:
	func_7ba4();
59 0F              BIT     1,VV:0F
	return 0;
7BC2: 5C 01              BIT     4,VV:01
7BC4: 64 5A 04           OFFI    PC,$04
7BC7: F1                 JR      $7BB9
	disable_interrupts();
7BC9: 00                 NOP     
7BCA: 5D 01              BIT     5,VV:01
7BCC: C6                 JR      $7BD3
7BCD: MKL |= 0x20; /* 0010 0000 */ /* mask INTE0 */
7BD0: 05 01 DF           ANIW    VV:01,$DF
7BD3:
	enable_interrupts();
	return 0;
7BD5: 05 00 FB           ANIW    VV:00,$FB
7BD8: 55 00 08           OFFIW   VV:00,$08
7BDB:
	return 0;
7BDC: 34 0B 99           LXI     HL,$990B
7BDF: 48 85              LDEAX   (HL++)
7BE1: BC = EA;
7BE2: EA = [HL];
7BE4: DE = EA;
7BE5: 74 C5              DADD    EA,BC
7BE7: 48 A0              DSLR    EA
7BE9: 69 18              MVI     A,$18
7BEB: 48 3D              DIV     A
7BED: 69 1D              MVI     A,$1D
7BEF: EA += A;
7BF1: 70 3F 17 99        LHLD    $9917
7BF5: 74 B7              DSUBNB  EA,HL
7BF7: 15 00 04           ORIW    VV:00,$04
	return 0;
7BFB: 34 17 99           LXI     HL,$9917
7BFE: 48 85              LDEAX   (HL++)
7C00: BC = EA;
7C01: 48 85              LDEAX   (HL++)
7C03: DE = EA;
7C04: EA = [HL];
7C06: HL = EA;
7C07: 5A 00              BIT     2,VV:00
	return 0;
7C0A: EA = 0x0363;
7C0D: 74 E5              DSUB    EA,BC
7C0F: BC = EA;
7C10: EA = 0x0363;
7C13: 74 E7              DSUB    EA,HL
7C15: push(EA);
7C16: EA = 0x0363;
7C19: 74 E6              DSUB    EA,DE
7C1B: HL = EA;
7C1C: EA = pop();
7C1D: DE = EA;
7C1E: return 0;
7C1F: 34 17 99           LXI     HL,$9917
7C22: EA = [HL];
7C24: 70 1F 49 99        LBCD    $9949
7C28: 5E 00              BIT     6,VV:00
7C2A: D8                 JR      $7C43
7C2B: 74 E5              DSUB    EA,BC
7C2D: 24 29 00           LXI     DE,$0029
7C30: 74 BE              DLT     EA,DE
7C32: 4E 27              JRE     $7C5B
7C34: 24 0A 00           LXI     DE,$000A
7C37: 74 E6              DSUB    EA,DE
7C39: 74 C5              DADD    EA,BC
7C3B: BC = EA;
7C3C: 70 1E 49 99        SBCD    $9949
7C40: EA = DE;
7C41: 4E 18              JRE     $7C5B
7C43: 74 C5              DADD    EA,BC
7C45: 24 F4 01           LXI     DE,$01F4
7C48: 74 AE              DGT     EA,DE
7C4A: D0                 JR      $7C5B
7C4B: DE = EA;
7C4C: 44 13 02           LXI     EA,$0213
7C4F: 74 E6              DSUB    EA,DE
7C51: 74 C5              DADD    EA,BC
7C53: BC = EA;
7C54: 70 1E 49 99        SBCD    $9949
7C58: 44 13 02           LXI     EA,$0213
7C5B: 48 93              STEAX   (HL)
7C5D: return 0;

void stepper_vref(int v)
{
	/* v from 0 to 7 */
	PA = v << 3;
	return;
}

7C6E: A = [HL];
7C6F: A = [HL];
7C70: A = [HL];
7C71: A = [DE++];
7C72: A = [HL++];
7C73: 2E                 LDAX    (DE-)
7C74: 30 32              DCRW    VV:32
7C76: 35 39 3F           LTIW    VV:39,$3F
7C79: 47 52              ONI     A,$52
7C7B: return; /* FROM INTERRUPT */
7C7C: 8A                 CALT    ($0094)
7C7D: E6                 JR      $7C64
7C7E: A = [HL];
7C7F: A = [HL];
7C80: A = [HL];
7C81: A = [HL];
7C82: A = [HL];
7C83: A = [HL];
7C84: A = [HL];
7C85: A = [HL];
7C86: A = [HL];
7C87: A = [HL];
7C88: A = [HL];
7C89: A = [DE++];
7C8A: A = [DE++];
7C8B: A = [HL++];
7C8C: 2E                 LDAX    (DE-)
7C8D: 2F                 LDAX    (HL-)
7C8E: 30 31              DCRW    VV:31
7C90: HL++;
7C91: 35 37 3A           LTIW    VV:37,$3A
7C94: 3D                 STAX    (HL+)
7C95: 41                 INR     A
7C96: 45 4D 59           ONIW    VV:4D,$59
7C99: 6C 87              MVI     D,$87
7C9B: E6                 JR      $7C82
7C9C: C = A;
7C9D: C = A;
7C9E: C = A;
7C9F: 1C                 MOV     D,A
7CA0: E = A;
7CA1: 1F                 MOV     L,A
7CA2: 21                 JB      
7CA3: 23                 DCX     DE
7CA4: 26 2A              ADINC   A,$2A
7CA6: 2F                 LDAX    (HL-)
7CA7: 35 3D 49           LTIW    VV:3D,$49
7CAA: 60 E6              SUB     A,H
7CAC: 20 20              INRW    VV:20
7CAE: 20 21              INRW    VV:21
7CB0: 22                 INX     DE
7CB1: 23                 DCX     DE
7CB2: 24 26 29           LXI     DE,$2926
7CB5: A = [HL++];
7CB6: 31                 BLOCK   
	38                 illegal 
	40 4A 60           CALL    $604A
	E6                 JR      $7CA2
	20 20              INRW    VV:20
	20 20              INRW    VV:20
7CC0:
	20 20              INRW    VV:20
	20 21              INRW    VV:21
	21                 JB      
	21                 JB      
	21                 JB      
	22                 INX     DE
	22                 INX     DE
	23                 DCX     DE
	23                 DCX     DE
	24 25 26           LXI     DE,$2625
	27 28              GTI     A,$28
	2A                 LDAX    (DE)
	A = [HL++];
	30 35              DCRW    VV:35
	3B                 STAX    (HL)
	46 52              ADI     A,$52
	67 87              NEI     A,$87
	E6                 JR      $7CC0
	8E                 CALT    ($009C)
	77 00              EQI     A,$00
	return 0;
	8E                 CALT    ($009C)
	C = A;
	push(BC);
	8E                 CALT    ($009C)
	BC = pop();
	B = A;
	8E                 CALT    ($009C)
	67 00              NEI     A,$00
	54 32 7D           JMP     $7D32
	67 01              NEI     A,$01
	54 81 7D           JMP     $7D81
	67 03              NEI     A,$03
	54 10 7D           JMP     $7D10
	67 04              NEI     A,$04
	54 FA 7C           JMP     $7CFA
	return 0;
7CFA:
	8B                 CALT    ($0096)
	8E                 CALT    ($009C)
	77 FB              EQI     A,$FB
	return 0;
	8E                 CALT    ($009C)
	77 02              EQI     A,$02
	return 0;
	8E                 CALT    ($009C)
	C = A;
	6A 80              MVI     B,$80
	40 88 2B           CALL    $2B88
	69 0C              MVI     A,$0C
	40 12 30           CALL    $3012
	return 0;
7D10:
	40 FD 16           CALL    $16FD
	8E                 CALT    ($009C)
	77 FC              EQI     A,$FC
	return 0;
	8E                 CALT    ($009C)
	77 81              EQI     A,$81
	return 0;
	8E                 CALT    ($009C)
	37 03              LTI     A,$03
	return 0;
	15 06 80           ORIW    VV:06,$80
	67 00              NEI     A,$00
	05 06 5F           ANIW    VV:06,$5F
	67 01              NEI     A,$01
	15 06 20           ORIW    VV:06,$20
	67 02              NEI     A,$02
	VV[0x06] &= 0xdf;
	return 0;

7D32:
	8E                 CALT    ($009C)
	if (A != 0xff)
		return 0;
	8E                 CALT    ($009C)
	if (A != 0x00)
		return 0;
	8E                 CALT    ($009C)
	37 02              LTI     A,$02
	return 0;
	if (A != 0x00)
		A = 0x02;
	5D 06              BIT     5,VV:06
	41                 INR     A
	EA = 7D7C;
	EA += A;
	HL = EA;
	A = [HL];
	[9846] = A;
	EA = 0x0D21;
	EA += A;
	HL = EA;
	EA = 0x9850;
	EA += A;
	A = [HL];
	HL = EA;
	B  = A;
	push(HL);
	push(BC);
	8E                 CALT    ($009C)
	BC = pop();
	HL = pop();
	A += B;
	3B                 STAX    (HL)
	8E                 CALT    ($009C)
	return 0;
	40 C9 15           CALL    $15C9
	40 14 15           CALL    $1514
	40 2F 15           CALL    $152F
	goto 7D78;
	40 2B 15           CALL    $152B
	40 C9 15           CALL    $15C9
7D78:
	40 D6 04           CALL    $04D6
	return 0;

7D7C: DW: 03 00 04 01 00

7D81:
void func_7D81(void)
{
	8E                 CALT    ($009C)
	if (A != 0xfe)
		return 0;
	8E                 CALT    ($009C)
	if (A != 0x80)
		return 0;
	A = VV[0x31] ^ 0xff;
	40 9B 7D           CALL    $7D9B
	A = VV[0x32] ^ 0xff;
	A &= 0x0f;
	40 9B 7D           CALL    $7D9B
	8B                 CALT    ($0096)
	return 0;
}

7D9B:
void func_7D9B(void)
{
	40 59 0E           CALL    $0E59
	VV[0x15] = EAL;
	push(EA);
	40 CD 05           CALL    $05CD
	EA = pop();
	VV[0x15] = EAH;
	40 CD 05           CALL    $05CD
	return 0;
}
